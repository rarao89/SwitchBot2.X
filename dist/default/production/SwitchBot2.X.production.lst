

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Mon Nov 18 19:56:45 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F1778
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     6                           	psect	idataBANK3,global,class=CODE,delta=2,noexec
     7                           	psect	idataBANK4,global,class=CODE,delta=2,noexec
     8                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    13                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,noexec
    14                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    15                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    16                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    17                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    18                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    19                           	psect	stringtext11,global,class=STRCODE,delta=2,noexec
    20                           	psect	stringtext12,global,class=STRCODE,delta=2,noexec
    21                           	psect	stringtext13,global,class=STRCODE,delta=2,noexec
    22                           	psect	stringtext14,global,class=STRCODE,delta=2,noexec
    23                           	psect	stringtext15,global,class=STRCODE,delta=2,noexec
    24                           	psect	stringtext16,global,class=STRCODE,delta=2,noexec
    25                           	psect	stringtext17,global,class=STRCODE,delta=2,noexec
    26                           	psect	stringtext18,global,class=STRCODE,delta=2,noexec
    27                           	psect	stringtext19,global,class=STRCODE,delta=2,noexec
    28                           	psect	stringtext20,global,class=STRCODE,delta=2,noexec
    29                           	psect	stringtext21,global,class=STRCODE,delta=2,noexec
    30                           	psect	stringtext22,global,class=STRCODE,delta=2,noexec
    31                           	psect	stringtext23,global,class=STRCODE,delta=2,noexec
    32                           	psect	stringtext24,global,class=STRCODE,delta=2,noexec
    33                           	psect	stringtext25,global,class=STRCODE,delta=2,noexec
    34                           	psect	stringtext26,global,class=STRCODE,delta=2,noexec
    35                           	psect	stringtext27,global,class=STRCODE,delta=2,noexec
    36                           	psect	stringtext28,global,class=STRCODE,delta=2,noexec
    37                           	psect	stringtext29,global,class=STRCODE,delta=2,noexec
    38                           	psect	stringtext30,global,class=STRCODE,delta=2,noexec
    39                           	psect	stringtext31,global,class=STRCODE,delta=2,noexec
    40                           	psect	stringtext32,global,class=STRCODE,delta=2,noexec
    41                           	psect	stringtext33,global,class=STRCODE,delta=2,noexec
    42                           	psect	stringtext34,global,class=STRCODE,delta=2,noexec
    43                           	psect	stringtext35,global,class=STRCODE,delta=2,noexec
    44                           	psect	cinit,global,class=CODE,merge=1,delta=2
    45                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    46                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    47                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    48                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    49                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    50                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,noexec
    51                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1,noexec
    52                           	psect	inittext,global,class=CODE,delta=2
    53                           	psect	clrtext,global,class=CODE,delta=2
    54                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    55                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    56                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    57                           	psect	text1,local,class=CODE,merge=1,delta=2
    58                           	psect	text2,local,class=CODE,merge=1,delta=2
    59                           	psect	text3,local,class=CODE,merge=1,delta=2
    60                           	psect	text4,local,class=CODE,merge=1,delta=2
    61                           	psect	text5,local,class=CODE,merge=1,delta=2
    62                           	psect	text6,local,class=CODE,merge=1,delta=2
    63                           	psect	text7,local,class=CODE,merge=1,delta=2
    64                           	psect	text8,local,class=CODE,merge=1,delta=2
    65                           	psect	text9,local,class=CODE,merge=1,delta=2
    66                           	psect	text10,local,class=CODE,merge=1,delta=2
    67                           	psect	text11,local,class=CODE,merge=1,delta=2
    68                           	psect	text12,local,class=CODE,merge=1,delta=2
    69                           	psect	text13,local,class=CODE,merge=1,delta=2
    70                           	psect	text14,local,class=CODE,merge=1,delta=2
    71                           	psect	text15,local,class=CODE,merge=1,delta=2
    72                           	psect	text16,local,class=CODE,merge=1,delta=2
    73                           	psect	text17,local,class=CODE,merge=1,delta=2
    74                           	psect	text18,local,class=CODE,merge=1,delta=2
    75                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    76                           	psect	text20,local,class=CODE,merge=1,delta=2
    77                           	psect	text21,local,class=CODE,merge=1,delta=2
    78                           	psect	text22,local,class=CODE,merge=1,delta=2
    79                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    80                           	psect	text24,local,class=CODE,merge=1,delta=2,group=3
    81                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    82                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    83                           	psect	text27,local,class=CODE,merge=1,delta=2
    84                           	psect	text28,local,class=CODE,merge=1,delta=2
    85                           	psect	text29,local,class=CODE,merge=1,delta=2
    86                           	psect	text30,local,class=CODE,merge=1,delta=2
    87                           	psect	text31,local,class=CODE,merge=1,delta=2
    88                           	psect	text32,local,class=CODE,merge=1,delta=2
    89                           	psect	text33,local,class=CODE,merge=1,delta=2
    90                           	psect	text34,local,class=CODE,merge=1,delta=2
    91                           	psect	text35,local,class=CODE,merge=1,delta=2
    92                           	psect	text36,local,class=CODE,merge=1,delta=2,group=2
    93                           	psect	text37,local,class=CODE,merge=1,delta=2
    94                           	psect	text38,local,class=CODE,merge=1,delta=2
    95                           	psect	text39,local,class=CODE,merge=1,delta=2,group=3
    96                           	psect	text40,local,class=CODE,merge=1,delta=2,group=2
    97                           	psect	text41,local,class=CODE,merge=1,delta=2,group=2
    98                           	psect	text42,local,class=CODE,merge=1,delta=2
    99                           	psect	text43,local,class=CODE,merge=1,delta=2
   100                           	psect	text44,local,class=CODE,merge=1,delta=2
   101                           	psect	text45,local,class=CODE,merge=1,delta=2
   102                           	psect	text46,local,class=CODE,merge=1,delta=2
   103                           	psect	text47,local,class=CODE,merge=1,delta=2
   104                           	psect	text48,local,class=CODE,merge=1,delta=2
   105                           	psect	text49,local,class=CODE,merge=1,delta=2
   106                           	psect	text50,local,class=CODE,merge=1,inline,delta=2
   107                           	psect	text51,local,class=CODE,merge=1,inline,delta=2
   108                           	psect	text52,local,class=CODE,merge=1,delta=2
   109                           	psect	text53,local,class=CODE,merge=1,delta=2
   110                           	psect	text54,local,class=CODE,merge=1,inline,delta=2
   111                           	psect	text55,local,class=CODE,merge=1,delta=2
   112                           	psect	text56,local,class=CODE,merge=1,inline,delta=2
   113                           	psect	text57,local,class=CODE,merge=1,inline,delta=2
   114                           	psect	text58,local,class=CODE,merge=1,inline,delta=2
   115                           	psect	intentry,global,class=CODE,delta=2
   116                           	psect	text60,local,class=CODE,merge=1,delta=2
   117                           	psect	text61,local,class=CODE,merge=1,delta=2
   118                           	psect	text62,local,class=CODE,merge=1,delta=2
   119                           	psect	text63,local,class=CODE,merge=1,delta=2
   120                           	psect	text64,local,class=CODE,merge=1,delta=2
   121                           	psect	text65,local,class=CODE,merge=1,delta=2
   122                           	psect	text66,local,class=CODE,merge=1,delta=2
   123                           	psect	text67,local,class=CODE,merge=1,delta=2
   124                           	psect	text68,local,class=CODE,merge=1,delta=2
   125                           	psect	text69,local,class=CODE,merge=1,delta=2
   126                           	psect	text70,local,class=CODE,merge=1,delta=2
   127                           	psect	text71,local,class=CODE,merge=1,delta=2
   128                           	psect	text72,local,class=CODE,merge=1,delta=2
   129                           	psect	text73,local,class=CODE,merge=1,delta=2
   130                           	psect	text74,local,class=CODE,merge=1,inline,delta=2
   131                           	psect	text75,local,class=CODE,merge=1,inline,delta=2
   132                           	psect	text76,local,class=CODE,merge=1,delta=2
   133                           	psect	text77,local,class=CODE,merge=1,delta=2
   134                           	psect	text78,local,class=CODE,merge=1,delta=2
   135                           	psect	text79,local,class=CODE,merge=1,delta=2
   136                           	psect	text80,local,class=CODE,merge=1,delta=2
   137                           	psect	text81,local,class=CODE,merge=1,delta=2
   138                           	psect	text82,local,class=CODE,merge=1,delta=2
   139                           	psect	text83,local,class=CODE,merge=1,delta=2
   140                           	psect	text84,local,class=CODE,merge=1,delta=2
   141                           	psect	text85,local,class=CODE,merge=1,delta=2
   142                           	psect	text86,local,class=CODE,merge=1,delta=2
   143                           	psect	text87,local,class=CODE,merge=1,delta=2
   144                           	psect	text88,local,class=CODE,merge=1,delta=2
   145                           	psect	text89,local,class=CODE,merge=1,delta=2
   146                           	psect	text90,local,class=CODE,merge=1,delta=2
   147                           	psect	text91,local,class=CODE,merge=1,delta=2
   148                           	psect	text92,local,class=CODE,merge=1,inline,delta=2
   149                           	psect	text93,local,class=CODE,merge=1,inline,delta=2
   150                           	psect	text94,local,class=CODE,merge=1,inline,delta=2
   151                           	psect	text95,local,class=CODE,merge=1,inline,delta=2
   152                           	psect	text96,local,class=CODE,merge=1,inline,delta=2
   153                           	psect	text97,local,class=CODE,merge=1,inline,delta=2
   154                           	psect	text98,local,class=CODE,merge=1,inline,delta=2
   155                           	psect	text99,local,class=CODE,merge=1,delta=2
   156                           	psect	text100,local,class=CODE,merge=1,delta=2
   157                           	psect	text101,local,class=CODE,merge=1,delta=2
   158                           	psect	text102,local,class=CODE,merge=1,delta=2
   159                           	psect	text103,local,class=CODE,merge=1,delta=2
   160                           	psect	text104,local,class=CODE,merge=1,delta=2
   161                           	psect	text105,local,class=CODE,merge=1,delta=2
   162                           	psect	text106,local,class=CODE,merge=1,delta=2
   163                           	psect	text107,local,class=CODE,merge=1,delta=2
   164                           	psect	text108,local,class=CODE,merge=1,delta=2
   165                           	psect	text109,local,class=CODE,merge=1,inline,delta=2
   166                           	psect	text110,local,class=CODE,merge=1,inline,delta=2
   167                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
   168                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
   169                           	dabs	1,0xCA0,32
   170                           	dabs	1,0xC20,80
   171                           	dabs	1,0xBA0,80
   172                           	dabs	1,0xB30,64
   173                           	dabs	1,0xB20,16
   174                           	dabs	1,0xAA0,80
   175                           	dabs	1,0xA20,80
   176                           	dabs	1,0x9A0,80
   177                           	dabs	1,0x25F0,0,_str2
   178                           	dabs	1,0x26F0,0,_str
   179                           	dabs	1,0x7E,2
   180     0000                     
   181                           ; Version 2.40
   182                           ; Generated 17/11/2021 GMT
   183                           ; 
   184                           ; Copyright © 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   185                           ; All rights reserved.
   186                           ; 
   187                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   188                           ; 
   189                           ; Redistribution and use in source and binary forms, with or without modification, are
   190                           ; permitted provided that the following conditions are met:
   191                           ; 
   192                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   193                           ;        conditions and the following disclaimer.
   194                           ; 
   195                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   196                           ;        of conditions and the following disclaimer in the documentation and/or other
   197                           ;        materials provided with the distribution. Publication is not required when
   198                           ;        this file is used in an embedded application.
   199                           ; 
   200                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   201                           ;        software without specific prior written permission.
   202                           ; 
   203                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   204                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   205                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   206                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   207                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   208                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   209                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   210                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   211                           ; 
   212                           ; 
   213                           ; Code-generator required, PIC16F1778 Definitions
   214                           ; 
   215                           ; SFR Addresses
   216     0000                     	;# 
   217     0001                     	;# 
   218     0002                     	;# 
   219     0003                     	;# 
   220     0004                     	;# 
   221     0005                     	;# 
   222     0006                     	;# 
   223     0007                     	;# 
   224     0008                     	;# 
   225     0009                     	;# 
   226     000A                     	;# 
   227     000B                     	;# 
   228     000C                     	;# 
   229     000D                     	;# 
   230     000E                     	;# 
   231     0010                     	;# 
   232     0011                     	;# 
   233     0012                     	;# 
   234     0013                     	;# 
   235     0014                     	;# 
   236     0015                     	;# 
   237     0016                     	;# 
   238     0017                     	;# 
   239     0018                     	;# 
   240     0018                     	;# 
   241     0019                     	;# 
   242     001A                     	;# 
   243     001B                     	;# 
   244     001C                     	;# 
   245     001C                     	;# 
   246     001D                     	;# 
   247     001E                     	;# 
   248     001F                     	;# 
   249     008C                     	;# 
   250     008D                     	;# 
   251     008E                     	;# 
   252     0090                     	;# 
   253     0091                     	;# 
   254     0092                     	;# 
   255     0093                     	;# 
   256     0094                     	;# 
   257     0095                     	;# 
   258     0096                     	;# 
   259     0097                     	;# 
   260     0098                     	;# 
   261     0099                     	;# 
   262     009A                     	;# 
   263     009B                     	;# 
   264     009C                     	;# 
   265     009D                     	;# 
   266     009E                     	;# 
   267     009F                     	;# 
   268     010C                     	;# 
   269     010D                     	;# 
   270     010E                     	;# 
   271     0111                     	;# 
   272     0112                     	;# 
   273     0113                     	;# 
   274     0114                     	;# 
   275     0115                     	;# 
   276     0116                     	;# 
   277     0117                     	;# 
   278     0118                     	;# 
   279     0119                     	;# 
   280     011A                     	;# 
   281     011B                     	;# 
   282     011C                     	;# 
   283     011D                     	;# 
   284     018C                     	;# 
   285     018D                     	;# 
   286     018E                     	;# 
   287     0191                     	;# 
   288     0191                     	;# 
   289     0192                     	;# 
   290     0193                     	;# 
   291     0193                     	;# 
   292     0194                     	;# 
   293     0195                     	;# 
   294     0196                     	;# 
   295     0197                     	;# 
   296     0199                     	;# 
   297     0199                     	;# 
   298     0199                     	;# 
   299     019A                     	;# 
   300     019A                     	;# 
   301     019A                     	;# 
   302     019B                     	;# 
   303     019B                     	;# 
   304     019B                     	;# 
   305     019B                     	;# 
   306     019B                     	;# 
   307     019C                     	;# 
   308     019C                     	;# 
   309     019C                     	;# 
   310     019D                     	;# 
   311     019D                     	;# 
   312     019D                     	;# 
   313     019E                     	;# 
   314     019E                     	;# 
   315     019E                     	;# 
   316     019F                     	;# 
   317     019F                     	;# 
   318     019F                     	;# 
   319     019F                     	;# 
   320     019F                     	;# 
   321     020C                     	;# 
   322     020D                     	;# 
   323     020E                     	;# 
   324     0210                     	;# 
   325     0211                     	;# 
   326     0211                     	;# 
   327     0212                     	;# 
   328     0212                     	;# 
   329     0213                     	;# 
   330     0213                     	;# 
   331     0214                     	;# 
   332     0214                     	;# 
   333     0215                     	;# 
   334     0215                     	;# 
   335     0215                     	;# 
   336     0215                     	;# 
   337     0216                     	;# 
   338     0216                     	;# 
   339     0217                     	;# 
   340     0217                     	;# 
   341     021B                     	;# 
   342     021C                     	;# 
   343     021D                     	;# 
   344     021E                     	;# 
   345     021F                     	;# 
   346     028C                     	;# 
   347     028D                     	;# 
   348     028E                     	;# 
   349     0291                     	;# 
   350     0291                     	;# 
   351     0292                     	;# 
   352     0293                     	;# 
   353     0294                     	;# 
   354     0295                     	;# 
   355     0295                     	;# 
   356     0296                     	;# 
   357     0297                     	;# 
   358     0298                     	;# 
   359     0299                     	;# 
   360     0299                     	;# 
   361     029A                     	;# 
   362     029B                     	;# 
   363     029C                     	;# 
   364     029E                     	;# 
   365     029F                     	;# 
   366     030C                     	;# 
   367     030D                     	;# 
   368     030E                     	;# 
   369     0315                     	;# 
   370     0316                     	;# 
   371     0317                     	;# 
   372     0318                     	;# 
   373     0319                     	;# 
   374     031B                     	;# 
   375     031C                     	;# 
   376     031D                     	;# 
   377     031E                     	;# 
   378     031F                     	;# 
   379     038C                     	;# 
   380     038D                     	;# 
   381     038E                     	;# 
   382     0390                     	;# 
   383     0391                     	;# 
   384     0392                     	;# 
   385     0393                     	;# 
   386     0394                     	;# 
   387     0395                     	;# 
   388     0396                     	;# 
   389     0397                     	;# 
   390     0398                     	;# 
   391     0399                     	;# 
   392     039D                     	;# 
   393     039E                     	;# 
   394     039F                     	;# 
   395     040D                     	;# 
   396     040F                     	;# 
   397     040F                     	;# 
   398     0410                     	;# 
   399     0411                     	;# 
   400     0412                     	;# 
   401     0413                     	;# 
   402     0413                     	;# 
   403     0414                     	;# 
   404     0414                     	;# 
   405     0415                     	;# 
   406     0416                     	;# 
   407     0417                     	;# 
   408     0418                     	;# 
   409     041A                     	;# 
   410     041A                     	;# 
   411     041B                     	;# 
   412     041B                     	;# 
   413     041C                     	;# 
   414     041D                     	;# 
   415     041E                     	;# 
   416     041F                     	;# 
   417     048E                     	;# 
   418     048E                     	;# 
   419     048F                     	;# 
   420     0490                     	;# 
   421     0491                     	;# 
   422     0492                     	;# 
   423     0493                     	;# 
   424     0493                     	;# 
   425     0494                     	;# 
   426     0494                     	;# 
   427     0495                     	;# 
   428     0496                     	;# 
   429     0497                     	;# 
   430     0498                     	;# 
   431     049A                     	;# 
   432     049A                     	;# 
   433     049B                     	;# 
   434     049B                     	;# 
   435     049C                     	;# 
   436     049D                     	;# 
   437     049E                     	;# 
   438     049F                     	;# 
   439     050F                     	;# 
   440     0510                     	;# 
   441     0511                     	;# 
   442     0512                     	;# 
   443     0513                     	;# 
   444     0514                     	;# 
   445     0515                     	;# 
   446     0516                     	;# 
   447     0517                     	;# 
   448     0518                     	;# 
   449     0519                     	;# 
   450     051A                     	;# 
   451     058D                     	;# 
   452     058E                     	;# 
   453     058F                     	;# 
   454     058F                     	;# 
   455     058F                     	;# 
   456     0590                     	;# 
   457     0590                     	;# 
   458     0591                     	;# 
   459     0592                     	;# 
   460     0592                     	;# 
   461     0592                     	;# 
   462     0593                     	;# 
   463     0593                     	;# 
   464     0594                     	;# 
   465     0595                     	;# 
   466     0595                     	;# 
   467     0596                     	;# 
   468     0597                     	;# 
   469     0597                     	;# 
   470     0598                     	;# 
   471     0599                     	;# 
   472     0599                     	;# 
   473     0599                     	;# 
   474     059A                     	;# 
   475     059A                     	;# 
   476     059E                     	;# 
   477     059F                     	;# 
   478     059F                     	;# 
   479     0614                     	;# 
   480     0614                     	;# 
   481     0615                     	;# 
   482     0616                     	;# 
   483     0617                     	;# 
   484     0617                     	;# 
   485     0618                     	;# 
   486     0619                     	;# 
   487     061A                     	;# 
   488     061A                     	;# 
   489     061B                     	;# 
   490     061C                     	;# 
   491     068D                     	;# 
   492     068E                     	;# 
   493     068F                     	;# 
   494     0690                     	;# 
   495     0691                     	;# 
   496     0692                     	;# 
   497     0693                     	;# 
   498     0694                     	;# 
   499     0695                     	;# 
   500     0696                     	;# 
   501     0697                     	;# 
   502     0698                     	;# 
   503     0699                     	;# 
   504     069A                     	;# 
   505     069B                     	;# 
   506     069C                     	;# 
   507     069D                     	;# 
   508     069E                     	;# 
   509     069F                     	;# 
   510     070D                     	;# 
   511     070E                     	;# 
   512     070F                     	;# 
   513     0710                     	;# 
   514     0711                     	;# 
   515     0712                     	;# 
   516     0713                     	;# 
   517     0714                     	;# 
   518     0715                     	;# 
   519     0716                     	;# 
   520     0717                     	;# 
   521     0718                     	;# 
   522     0719                     	;# 
   523     071A                     	;# 
   524     071B                     	;# 
   525     071C                     	;# 
   526     071D                     	;# 
   527     071E                     	;# 
   528     071F                     	;# 
   529     078E                     	;# 
   530     078F                     	;# 
   531     0790                     	;# 
   532     0791                     	;# 
   533     0792                     	;# 
   534     0793                     	;# 
   535     0794                     	;# 
   536     0795                     	;# 
   537     0796                     	;# 
   538     0797                     	;# 
   539     0798                     	;# 
   540     0799                     	;# 
   541     079A                     	;# 
   542     079B                     	;# 
   543     079C                     	;# 
   544     079D                     	;# 
   545     079E                     	;# 
   546     079F                     	;# 
   547     080D                     	;# 
   548     080E                     	;# 
   549     080F                     	;# 
   550     0810                     	;# 
   551     0811                     	;# 
   552     0812                     	;# 
   553     0813                     	;# 
   554     0814                     	;# 
   555     0815                     	;# 
   556     0816                     	;# 
   557     0817                     	;# 
   558     0818                     	;# 
   559     0819                     	;# 
   560     081A                     	;# 
   561     081B                     	;# 
   562     081C                     	;# 
   563     081D                     	;# 
   564     081E                     	;# 
   565     081F                     	;# 
   566     090C                     	;# 
   567     090D                     	;# 
   568     090E                     	;# 
   569     090F                     	;# 
   570     0910                     	;# 
   571     0911                     	;# 
   572     0912                     	;# 
   573     0913                     	;# 
   574     0914                     	;# 
   575     0915                     	;# 
   576     0916                     	;# 
   577     0917                     	;# 
   578     0D8E                     	;# 
   579     0D8F                     	;# 
   580     0D90                     	;# 
   581     0D91                     	;# 
   582     0D91                     	;# 
   583     0D92                     	;# 
   584     0D93                     	;# 
   585     0D93                     	;# 
   586     0D94                     	;# 
   587     0D95                     	;# 
   588     0D95                     	;# 
   589     0D96                     	;# 
   590     0D97                     	;# 
   591     0D97                     	;# 
   592     0D98                     	;# 
   593     0D99                     	;# 
   594     0D99                     	;# 
   595     0D9A                     	;# 
   596     0D9B                     	;# 
   597     0D9C                     	;# 
   598     0D9C                     	;# 
   599     0D9D                     	;# 
   600     0D9D                     	;# 
   601     0D9E                     	;# 
   602     0D9F                     	;# 
   603     0DA0                     	;# 
   604     0DA1                     	;# 
   605     0DA1                     	;# 
   606     0DA2                     	;# 
   607     0DA3                     	;# 
   608     0DA3                     	;# 
   609     0DA4                     	;# 
   610     0DA5                     	;# 
   611     0DA5                     	;# 
   612     0DA6                     	;# 
   613     0DA7                     	;# 
   614     0DA7                     	;# 
   615     0DA8                     	;# 
   616     0DA9                     	;# 
   617     0DA9                     	;# 
   618     0DAA                     	;# 
   619     0DAB                     	;# 
   620     0DAC                     	;# 
   621     0DAC                     	;# 
   622     0DAD                     	;# 
   623     0DAD                     	;# 
   624     0DAE                     	;# 
   625     0DAF                     	;# 
   626     0DB0                     	;# 
   627     0DB1                     	;# 
   628     0DB1                     	;# 
   629     0DB2                     	;# 
   630     0DB3                     	;# 
   631     0DB3                     	;# 
   632     0DB4                     	;# 
   633     0DB5                     	;# 
   634     0DB5                     	;# 
   635     0DB6                     	;# 
   636     0DB7                     	;# 
   637     0DB7                     	;# 
   638     0DB8                     	;# 
   639     0DB9                     	;# 
   640     0DB9                     	;# 
   641     0DBA                     	;# 
   642     0DBB                     	;# 
   643     0DBC                     	;# 
   644     0DBC                     	;# 
   645     0DBD                     	;# 
   646     0DBD                     	;# 
   647     0DBE                     	;# 
   648     0DBF                     	;# 
   649     0DC0                     	;# 
   650     0E0C                     	;# 
   651     0E0D                     	;# 
   652     0E0E                     	;# 
   653     0E0F                     	;# 
   654     0E10                     	;# 
   655     0E11                     	;# 
   656     0E12                     	;# 
   657     0E13                     	;# 
   658     0E14                     	;# 
   659     0E15                     	;# 
   660     0E15                     	;# 
   661     0E15                     	;# 
   662     0E16                     	;# 
   663     0E16                     	;# 
   664     0E16                     	;# 
   665     0E17                     	;# 
   666     0E17                     	;# 
   667     0E17                     	;# 
   668     0E18                     	;# 
   669     0E18                     	;# 
   670     0E18                     	;# 
   671     0E19                     	;# 
   672     0E1A                     	;# 
   673     0E1B                     	;# 
   674     0E1D                     	;# 
   675     0E1E                     	;# 
   676     0E1F                     	;# 
   677     0E21                     	;# 
   678     0E22                     	;# 
   679     0E23                     	;# 
   680     0E24                     	;# 
   681     0E25                     	;# 
   682     0E26                     	;# 
   683     0E27                     	;# 
   684     0E28                     	;# 
   685     0E29                     	;# 
   686     0E2D                     	;# 
   687     0E2E                     	;# 
   688     0E2F                     	;# 
   689     0E30                     	;# 
   690     0E31                     	;# 
   691     0E32                     	;# 
   692     0E35                     	;# 
   693     0E36                     	;# 
   694     0E37                     	;# 
   695     0E38                     	;# 
   696     0E39                     	;# 
   697     0E3A                     	;# 
   698     0E3B                     	;# 
   699     0E3C                     	;# 
   700     0E3D                     	;# 
   701     0E3E                     	;# 
   702     0E90                     	;# 
   703     0E91                     	;# 
   704     0E92                     	;# 
   705     0E93                     	;# 
   706     0E94                     	;# 
   707     0E95                     	;# 
   708     0E96                     	;# 
   709     0E97                     	;# 
   710     0E98                     	;# 
   711     0E99                     	;# 
   712     0E9A                     	;# 
   713     0E9B                     	;# 
   714     0E9C                     	;# 
   715     0E9D                     	;# 
   716     0E9E                     	;# 
   717     0E9F                     	;# 
   718     0EA0                     	;# 
   719     0EA1                     	;# 
   720     0EA2                     	;# 
   721     0EA3                     	;# 
   722     0EA4                     	;# 
   723     0EA5                     	;# 
   724     0EA6                     	;# 
   725     0EA7                     	;# 
   726     0F0F                     	;# 
   727     0F10                     	;# 
   728     0F11                     	;# 
   729     0F12                     	;# 
   730     0F13                     	;# 
   731     0F14                     	;# 
   732     0F15                     	;# 
   733     0F16                     	;# 
   734     0F17                     	;# 
   735     0F18                     	;# 
   736     0F19                     	;# 
   737     0F1A                     	;# 
   738     0F1B                     	;# 
   739     0F1C                     	;# 
   740     0F1D                     	;# 
   741     0F1E                     	;# 
   742     0F1F                     	;# 
   743     0F20                     	;# 
   744     0F21                     	;# 
   745     0F22                     	;# 
   746     0F23                     	;# 
   747     0F24                     	;# 
   748     0F25                     	;# 
   749     0F26                     	;# 
   750     0F27                     	;# 
   751     0F28                     	;# 
   752     0F29                     	;# 
   753     0F2A                     	;# 
   754     0F2B                     	;# 
   755     0F2C                     	;# 
   756     0F2D                     	;# 
   757     0F2E                     	;# 
   758     0F2F                     	;# 
   759     0F30                     	;# 
   760     0F31                     	;# 
   761     0F32                     	;# 
   762     0F33                     	;# 
   763     0F34                     	;# 
   764     0F35                     	;# 
   765     0F36                     	;# 
   766     0F37                     	;# 
   767     0FE4                     	;# 
   768     0FE5                     	;# 
   769     0FE6                     	;# 
   770     0FE7                     	;# 
   771     0FE8                     	;# 
   772     0FE9                     	;# 
   773     0FEA                     	;# 
   774     0FEB                     	;# 
   775     0FED                     	;# 
   776     0FEE                     	;# 
   777     0FEF                     	;# 
   778     0000                     	;# 
   779     0001                     	;# 
   780     0002                     	;# 
   781     0003                     	;# 
   782     0004                     	;# 
   783     0005                     	;# 
   784     0006                     	;# 
   785     0007                     	;# 
   786     0008                     	;# 
   787     0009                     	;# 
   788     000A                     	;# 
   789     000B                     	;# 
   790     000C                     	;# 
   791     000D                     	;# 
   792     000E                     	;# 
   793     0010                     	;# 
   794     0011                     	;# 
   795     0012                     	;# 
   796     0013                     	;# 
   797     0014                     	;# 
   798     0015                     	;# 
   799     0016                     	;# 
   800     0017                     	;# 
   801     0018                     	;# 
   802     0018                     	;# 
   803     0019                     	;# 
   804     001A                     	;# 
   805     001B                     	;# 
   806     001C                     	;# 
   807     001C                     	;# 
   808     001D                     	;# 
   809     001E                     	;# 
   810     001F                     	;# 
   811     008C                     	;# 
   812     008D                     	;# 
   813     008E                     	;# 
   814     0090                     	;# 
   815     0091                     	;# 
   816     0092                     	;# 
   817     0093                     	;# 
   818     0094                     	;# 
   819     0095                     	;# 
   820     0096                     	;# 
   821     0097                     	;# 
   822     0098                     	;# 
   823     0099                     	;# 
   824     009A                     	;# 
   825     009B                     	;# 
   826     009C                     	;# 
   827     009D                     	;# 
   828     009E                     	;# 
   829     009F                     	;# 
   830     010C                     	;# 
   831     010D                     	;# 
   832     010E                     	;# 
   833     0111                     	;# 
   834     0112                     	;# 
   835     0113                     	;# 
   836     0114                     	;# 
   837     0115                     	;# 
   838     0116                     	;# 
   839     0117                     	;# 
   840     0118                     	;# 
   841     0119                     	;# 
   842     011A                     	;# 
   843     011B                     	;# 
   844     011C                     	;# 
   845     011D                     	;# 
   846     018C                     	;# 
   847     018D                     	;# 
   848     018E                     	;# 
   849     0191                     	;# 
   850     0191                     	;# 
   851     0192                     	;# 
   852     0193                     	;# 
   853     0193                     	;# 
   854     0194                     	;# 
   855     0195                     	;# 
   856     0196                     	;# 
   857     0197                     	;# 
   858     0199                     	;# 
   859     0199                     	;# 
   860     0199                     	;# 
   861     019A                     	;# 
   862     019A                     	;# 
   863     019A                     	;# 
   864     019B                     	;# 
   865     019B                     	;# 
   866     019B                     	;# 
   867     019B                     	;# 
   868     019B                     	;# 
   869     019C                     	;# 
   870     019C                     	;# 
   871     019C                     	;# 
   872     019D                     	;# 
   873     019D                     	;# 
   874     019D                     	;# 
   875     019E                     	;# 
   876     019E                     	;# 
   877     019E                     	;# 
   878     019F                     	;# 
   879     019F                     	;# 
   880     019F                     	;# 
   881     019F                     	;# 
   882     019F                     	;# 
   883     020C                     	;# 
   884     020D                     	;# 
   885     020E                     	;# 
   886     0210                     	;# 
   887     0211                     	;# 
   888     0211                     	;# 
   889     0212                     	;# 
   890     0212                     	;# 
   891     0213                     	;# 
   892     0213                     	;# 
   893     0214                     	;# 
   894     0214                     	;# 
   895     0215                     	;# 
   896     0215                     	;# 
   897     0215                     	;# 
   898     0215                     	;# 
   899     0216                     	;# 
   900     0216                     	;# 
   901     0217                     	;# 
   902     0217                     	;# 
   903     021B                     	;# 
   904     021C                     	;# 
   905     021D                     	;# 
   906     021E                     	;# 
   907     021F                     	;# 
   908     028C                     	;# 
   909     028D                     	;# 
   910     028E                     	;# 
   911     0291                     	;# 
   912     0291                     	;# 
   913     0292                     	;# 
   914     0293                     	;# 
   915     0294                     	;# 
   916     0295                     	;# 
   917     0295                     	;# 
   918     0296                     	;# 
   919     0297                     	;# 
   920     0298                     	;# 
   921     0299                     	;# 
   922     0299                     	;# 
   923     029A                     	;# 
   924     029B                     	;# 
   925     029C                     	;# 
   926     029E                     	;# 
   927     029F                     	;# 
   928     030C                     	;# 
   929     030D                     	;# 
   930     030E                     	;# 
   931     0315                     	;# 
   932     0316                     	;# 
   933     0317                     	;# 
   934     0318                     	;# 
   935     0319                     	;# 
   936     031B                     	;# 
   937     031C                     	;# 
   938     031D                     	;# 
   939     031E                     	;# 
   940     031F                     	;# 
   941     038C                     	;# 
   942     038D                     	;# 
   943     038E                     	;# 
   944     0390                     	;# 
   945     0391                     	;# 
   946     0392                     	;# 
   947     0393                     	;# 
   948     0394                     	;# 
   949     0395                     	;# 
   950     0396                     	;# 
   951     0397                     	;# 
   952     0398                     	;# 
   953     0399                     	;# 
   954     039D                     	;# 
   955     039E                     	;# 
   956     039F                     	;# 
   957     040D                     	;# 
   958     040F                     	;# 
   959     040F                     	;# 
   960     0410                     	;# 
   961     0411                     	;# 
   962     0412                     	;# 
   963     0413                     	;# 
   964     0413                     	;# 
   965     0414                     	;# 
   966     0414                     	;# 
   967     0415                     	;# 
   968     0416                     	;# 
   969     0417                     	;# 
   970     0418                     	;# 
   971     041A                     	;# 
   972     041A                     	;# 
   973     041B                     	;# 
   974     041B                     	;# 
   975     041C                     	;# 
   976     041D                     	;# 
   977     041E                     	;# 
   978     041F                     	;# 
   979     048E                     	;# 
   980     048E                     	;# 
   981     048F                     	;# 
   982     0490                     	;# 
   983     0491                     	;# 
   984     0492                     	;# 
   985     0493                     	;# 
   986     0493                     	;# 
   987     0494                     	;# 
   988     0494                     	;# 
   989     0495                     	;# 
   990     0496                     	;# 
   991     0497                     	;# 
   992     0498                     	;# 
   993     049A                     	;# 
   994     049A                     	;# 
   995     049B                     	;# 
   996     049B                     	;# 
   997     049C                     	;# 
   998     049D                     	;# 
   999     049E                     	;# 
  1000     049F                     	;# 
  1001     050F                     	;# 
  1002     0510                     	;# 
  1003     0511                     	;# 
  1004     0512                     	;# 
  1005     0513                     	;# 
  1006     0514                     	;# 
  1007     0515                     	;# 
  1008     0516                     	;# 
  1009     0517                     	;# 
  1010     0518                     	;# 
  1011     0519                     	;# 
  1012     051A                     	;# 
  1013     058D                     	;# 
  1014     058E                     	;# 
  1015     058F                     	;# 
  1016     058F                     	;# 
  1017     058F                     	;# 
  1018     0590                     	;# 
  1019     0590                     	;# 
  1020     0591                     	;# 
  1021     0592                     	;# 
  1022     0592                     	;# 
  1023     0592                     	;# 
  1024     0593                     	;# 
  1025     0593                     	;# 
  1026     0594                     	;# 
  1027     0595                     	;# 
  1028     0595                     	;# 
  1029     0596                     	;# 
  1030     0597                     	;# 
  1031     0597                     	;# 
  1032     0598                     	;# 
  1033     0599                     	;# 
  1034     0599                     	;# 
  1035     0599                     	;# 
  1036     059A                     	;# 
  1037     059A                     	;# 
  1038     059E                     	;# 
  1039     059F                     	;# 
  1040     059F                     	;# 
  1041     0614                     	;# 
  1042     0614                     	;# 
  1043     0615                     	;# 
  1044     0616                     	;# 
  1045     0617                     	;# 
  1046     0617                     	;# 
  1047     0618                     	;# 
  1048     0619                     	;# 
  1049     061A                     	;# 
  1050     061A                     	;# 
  1051     061B                     	;# 
  1052     061C                     	;# 
  1053     068D                     	;# 
  1054     068E                     	;# 
  1055     068F                     	;# 
  1056     0690                     	;# 
  1057     0691                     	;# 
  1058     0692                     	;# 
  1059     0693                     	;# 
  1060     0694                     	;# 
  1061     0695                     	;# 
  1062     0696                     	;# 
  1063     0697                     	;# 
  1064     0698                     	;# 
  1065     0699                     	;# 
  1066     069A                     	;# 
  1067     069B                     	;# 
  1068     069C                     	;# 
  1069     069D                     	;# 
  1070     069E                     	;# 
  1071     069F                     	;# 
  1072     070D                     	;# 
  1073     070E                     	;# 
  1074     070F                     	;# 
  1075     0710                     	;# 
  1076     0711                     	;# 
  1077     0712                     	;# 
  1078     0713                     	;# 
  1079     0714                     	;# 
  1080     0715                     	;# 
  1081     0716                     	;# 
  1082     0717                     	;# 
  1083     0718                     	;# 
  1084     0719                     	;# 
  1085     071A                     	;# 
  1086     071B                     	;# 
  1087     071C                     	;# 
  1088     071D                     	;# 
  1089     071E                     	;# 
  1090     071F                     	;# 
  1091     078E                     	;# 
  1092     078F                     	;# 
  1093     0790                     	;# 
  1094     0791                     	;# 
  1095     0792                     	;# 
  1096     0793                     	;# 
  1097     0794                     	;# 
  1098     0795                     	;# 
  1099     0796                     	;# 
  1100     0797                     	;# 
  1101     0798                     	;# 
  1102     0799                     	;# 
  1103     079A                     	;# 
  1104     079B                     	;# 
  1105     079C                     	;# 
  1106     079D                     	;# 
  1107     079E                     	;# 
  1108     079F                     	;# 
  1109     080D                     	;# 
  1110     080E                     	;# 
  1111     080F                     	;# 
  1112     0810                     	;# 
  1113     0811                     	;# 
  1114     0812                     	;# 
  1115     0813                     	;# 
  1116     0814                     	;# 
  1117     0815                     	;# 
  1118     0816                     	;# 
  1119     0817                     	;# 
  1120     0818                     	;# 
  1121     0819                     	;# 
  1122     081A                     	;# 
  1123     081B                     	;# 
  1124     081C                     	;# 
  1125     081D                     	;# 
  1126     081E                     	;# 
  1127     081F                     	;# 
  1128     090C                     	;# 
  1129     090D                     	;# 
  1130     090E                     	;# 
  1131     090F                     	;# 
  1132     0910                     	;# 
  1133     0911                     	;# 
  1134     0912                     	;# 
  1135     0913                     	;# 
  1136     0914                     	;# 
  1137     0915                     	;# 
  1138     0916                     	;# 
  1139     0917                     	;# 
  1140     0D8E                     	;# 
  1141     0D8F                     	;# 
  1142     0D90                     	;# 
  1143     0D91                     	;# 
  1144     0D91                     	;# 
  1145     0D92                     	;# 
  1146     0D93                     	;# 
  1147     0D93                     	;# 
  1148     0D94                     	;# 
  1149     0D95                     	;# 
  1150     0D95                     	;# 
  1151     0D96                     	;# 
  1152     0D97                     	;# 
  1153     0D97                     	;# 
  1154     0D98                     	;# 
  1155     0D99                     	;# 
  1156     0D99                     	;# 
  1157     0D9A                     	;# 
  1158     0D9B                     	;# 
  1159     0D9C                     	;# 
  1160     0D9C                     	;# 
  1161     0D9D                     	;# 
  1162     0D9D                     	;# 
  1163     0D9E                     	;# 
  1164     0D9F                     	;# 
  1165     0DA0                     	;# 
  1166     0DA1                     	;# 
  1167     0DA1                     	;# 
  1168     0DA2                     	;# 
  1169     0DA3                     	;# 
  1170     0DA3                     	;# 
  1171     0DA4                     	;# 
  1172     0DA5                     	;# 
  1173     0DA5                     	;# 
  1174     0DA6                     	;# 
  1175     0DA7                     	;# 
  1176     0DA7                     	;# 
  1177     0DA8                     	;# 
  1178     0DA9                     	;# 
  1179     0DA9                     	;# 
  1180     0DAA                     	;# 
  1181     0DAB                     	;# 
  1182     0DAC                     	;# 
  1183     0DAC                     	;# 
  1184     0DAD                     	;# 
  1185     0DAD                     	;# 
  1186     0DAE                     	;# 
  1187     0DAF                     	;# 
  1188     0DB0                     	;# 
  1189     0DB1                     	;# 
  1190     0DB1                     	;# 
  1191     0DB2                     	;# 
  1192     0DB3                     	;# 
  1193     0DB3                     	;# 
  1194     0DB4                     	;# 
  1195     0DB5                     	;# 
  1196     0DB5                     	;# 
  1197     0DB6                     	;# 
  1198     0DB7                     	;# 
  1199     0DB7                     	;# 
  1200     0DB8                     	;# 
  1201     0DB9                     	;# 
  1202     0DB9                     	;# 
  1203     0DBA                     	;# 
  1204     0DBB                     	;# 
  1205     0DBC                     	;# 
  1206     0DBC                     	;# 
  1207     0DBD                     	;# 
  1208     0DBD                     	;# 
  1209     0DBE                     	;# 
  1210     0DBF                     	;# 
  1211     0DC0                     	;# 
  1212     0E0C                     	;# 
  1213     0E0D                     	;# 
  1214     0E0E                     	;# 
  1215     0E0F                     	;# 
  1216     0E10                     	;# 
  1217     0E11                     	;# 
  1218     0E12                     	;# 
  1219     0E13                     	;# 
  1220     0E14                     	;# 
  1221     0E15                     	;# 
  1222     0E15                     	;# 
  1223     0E15                     	;# 
  1224     0E16                     	;# 
  1225     0E16                     	;# 
  1226     0E16                     	;# 
  1227     0E17                     	;# 
  1228     0E17                     	;# 
  1229     0E17                     	;# 
  1230     0E18                     	;# 
  1231     0E18                     	;# 
  1232     0E18                     	;# 
  1233     0E19                     	;# 
  1234     0E1A                     	;# 
  1235     0E1B                     	;# 
  1236     0E1D                     	;# 
  1237     0E1E                     	;# 
  1238     0E1F                     	;# 
  1239     0E21                     	;# 
  1240     0E22                     	;# 
  1241     0E23                     	;# 
  1242     0E24                     	;# 
  1243     0E25                     	;# 
  1244     0E26                     	;# 
  1245     0E27                     	;# 
  1246     0E28                     	;# 
  1247     0E29                     	;# 
  1248     0E2D                     	;# 
  1249     0E2E                     	;# 
  1250     0E2F                     	;# 
  1251     0E30                     	;# 
  1252     0E31                     	;# 
  1253     0E32                     	;# 
  1254     0E35                     	;# 
  1255     0E36                     	;# 
  1256     0E37                     	;# 
  1257     0E38                     	;# 
  1258     0E39                     	;# 
  1259     0E3A                     	;# 
  1260     0E3B                     	;# 
  1261     0E3C                     	;# 
  1262     0E3D                     	;# 
  1263     0E3E                     	;# 
  1264     0E90                     	;# 
  1265     0E91                     	;# 
  1266     0E92                     	;# 
  1267     0E93                     	;# 
  1268     0E94                     	;# 
  1269     0E95                     	;# 
  1270     0E96                     	;# 
  1271     0E97                     	;# 
  1272     0E98                     	;# 
  1273     0E99                     	;# 
  1274     0E9A                     	;# 
  1275     0E9B                     	;# 
  1276     0E9C                     	;# 
  1277     0E9D                     	;# 
  1278     0E9E                     	;# 
  1279     0E9F                     	;# 
  1280     0EA0                     	;# 
  1281     0EA1                     	;# 
  1282     0EA2                     	;# 
  1283     0EA3                     	;# 
  1284     0EA4                     	;# 
  1285     0EA5                     	;# 
  1286     0EA6                     	;# 
  1287     0EA7                     	;# 
  1288     0F0F                     	;# 
  1289     0F10                     	;# 
  1290     0F11                     	;# 
  1291     0F12                     	;# 
  1292     0F13                     	;# 
  1293     0F14                     	;# 
  1294     0F15                     	;# 
  1295     0F16                     	;# 
  1296     0F17                     	;# 
  1297     0F18                     	;# 
  1298     0F19                     	;# 
  1299     0F1A                     	;# 
  1300     0F1B                     	;# 
  1301     0F1C                     	;# 
  1302     0F1D                     	;# 
  1303     0F1E                     	;# 
  1304     0F1F                     	;# 
  1305     0F20                     	;# 
  1306     0F21                     	;# 
  1307     0F22                     	;# 
  1308     0F23                     	;# 
  1309     0F24                     	;# 
  1310     0F25                     	;# 
  1311     0F26                     	;# 
  1312     0F27                     	;# 
  1313     0F28                     	;# 
  1314     0F29                     	;# 
  1315     0F2A                     	;# 
  1316     0F2B                     	;# 
  1317     0F2C                     	;# 
  1318     0F2D                     	;# 
  1319     0F2E                     	;# 
  1320     0F2F                     	;# 
  1321     0F30                     	;# 
  1322     0F31                     	;# 
  1323     0F32                     	;# 
  1324     0F33                     	;# 
  1325     0F34                     	;# 
  1326     0F35                     	;# 
  1327     0F36                     	;# 
  1328     0F37                     	;# 
  1329     0FE4                     	;# 
  1330     0FE5                     	;# 
  1331     0FE6                     	;# 
  1332     0FE7                     	;# 
  1333     0FE8                     	;# 
  1334     0FE9                     	;# 
  1335     0FEA                     	;# 
  1336     0FEB                     	;# 
  1337     0FED                     	;# 
  1338     0FEE                     	;# 
  1339     0FEF                     	;# 
  1340     0000                     	;# 
  1341     0001                     	;# 
  1342     0002                     	;# 
  1343     0003                     	;# 
  1344     0004                     	;# 
  1345     0005                     	;# 
  1346     0006                     	;# 
  1347     0007                     	;# 
  1348     0008                     	;# 
  1349     0009                     	;# 
  1350     000A                     	;# 
  1351     000B                     	;# 
  1352     000C                     	;# 
  1353     000D                     	;# 
  1354     000E                     	;# 
  1355     0010                     	;# 
  1356     0011                     	;# 
  1357     0012                     	;# 
  1358     0013                     	;# 
  1359     0014                     	;# 
  1360     0015                     	;# 
  1361     0016                     	;# 
  1362     0017                     	;# 
  1363     0018                     	;# 
  1364     0018                     	;# 
  1365     0019                     	;# 
  1366     001A                     	;# 
  1367     001B                     	;# 
  1368     001C                     	;# 
  1369     001C                     	;# 
  1370     001D                     	;# 
  1371     001E                     	;# 
  1372     001F                     	;# 
  1373     008C                     	;# 
  1374     008D                     	;# 
  1375     008E                     	;# 
  1376     0090                     	;# 
  1377     0091                     	;# 
  1378     0092                     	;# 
  1379     0093                     	;# 
  1380     0094                     	;# 
  1381     0095                     	;# 
  1382     0096                     	;# 
  1383     0097                     	;# 
  1384     0098                     	;# 
  1385     0099                     	;# 
  1386     009A                     	;# 
  1387     009B                     	;# 
  1388     009C                     	;# 
  1389     009D                     	;# 
  1390     009E                     	;# 
  1391     009F                     	;# 
  1392     010C                     	;# 
  1393     010D                     	;# 
  1394     010E                     	;# 
  1395     0111                     	;# 
  1396     0112                     	;# 
  1397     0113                     	;# 
  1398     0114                     	;# 
  1399     0115                     	;# 
  1400     0116                     	;# 
  1401     0117                     	;# 
  1402     0118                     	;# 
  1403     0119                     	;# 
  1404     011A                     	;# 
  1405     011B                     	;# 
  1406     011C                     	;# 
  1407     011D                     	;# 
  1408     018C                     	;# 
  1409     018D                     	;# 
  1410     018E                     	;# 
  1411     0191                     	;# 
  1412     0191                     	;# 
  1413     0192                     	;# 
  1414     0193                     	;# 
  1415     0193                     	;# 
  1416     0194                     	;# 
  1417     0195                     	;# 
  1418     0196                     	;# 
  1419     0197                     	;# 
  1420     0199                     	;# 
  1421     0199                     	;# 
  1422     0199                     	;# 
  1423     019A                     	;# 
  1424     019A                     	;# 
  1425     019A                     	;# 
  1426     019B                     	;# 
  1427     019B                     	;# 
  1428     019B                     	;# 
  1429     019B                     	;# 
  1430     019B                     	;# 
  1431     019C                     	;# 
  1432     019C                     	;# 
  1433     019C                     	;# 
  1434     019D                     	;# 
  1435     019D                     	;# 
  1436     019D                     	;# 
  1437     019E                     	;# 
  1438     019E                     	;# 
  1439     019E                     	;# 
  1440     019F                     	;# 
  1441     019F                     	;# 
  1442     019F                     	;# 
  1443     019F                     	;# 
  1444     019F                     	;# 
  1445     020C                     	;# 
  1446     020D                     	;# 
  1447     020E                     	;# 
  1448     0210                     	;# 
  1449     0211                     	;# 
  1450     0211                     	;# 
  1451     0212                     	;# 
  1452     0212                     	;# 
  1453     0213                     	;# 
  1454     0213                     	;# 
  1455     0214                     	;# 
  1456     0214                     	;# 
  1457     0215                     	;# 
  1458     0215                     	;# 
  1459     0215                     	;# 
  1460     0215                     	;# 
  1461     0216                     	;# 
  1462     0216                     	;# 
  1463     0217                     	;# 
  1464     0217                     	;# 
  1465     021B                     	;# 
  1466     021C                     	;# 
  1467     021D                     	;# 
  1468     021E                     	;# 
  1469     021F                     	;# 
  1470     028C                     	;# 
  1471     028D                     	;# 
  1472     028E                     	;# 
  1473     0291                     	;# 
  1474     0291                     	;# 
  1475     0292                     	;# 
  1476     0293                     	;# 
  1477     0294                     	;# 
  1478     0295                     	;# 
  1479     0295                     	;# 
  1480     0296                     	;# 
  1481     0297                     	;# 
  1482     0298                     	;# 
  1483     0299                     	;# 
  1484     0299                     	;# 
  1485     029A                     	;# 
  1486     029B                     	;# 
  1487     029C                     	;# 
  1488     029E                     	;# 
  1489     029F                     	;# 
  1490     030C                     	;# 
  1491     030D                     	;# 
  1492     030E                     	;# 
  1493     0315                     	;# 
  1494     0316                     	;# 
  1495     0317                     	;# 
  1496     0318                     	;# 
  1497     0319                     	;# 
  1498     031B                     	;# 
  1499     031C                     	;# 
  1500     031D                     	;# 
  1501     031E                     	;# 
  1502     031F                     	;# 
  1503     038C                     	;# 
  1504     038D                     	;# 
  1505     038E                     	;# 
  1506     0390                     	;# 
  1507     0391                     	;# 
  1508     0392                     	;# 
  1509     0393                     	;# 
  1510     0394                     	;# 
  1511     0395                     	;# 
  1512     0396                     	;# 
  1513     0397                     	;# 
  1514     0398                     	;# 
  1515     0399                     	;# 
  1516     039D                     	;# 
  1517     039E                     	;# 
  1518     039F                     	;# 
  1519     040D                     	;# 
  1520     040F                     	;# 
  1521     040F                     	;# 
  1522     0410                     	;# 
  1523     0411                     	;# 
  1524     0412                     	;# 
  1525     0413                     	;# 
  1526     0413                     	;# 
  1527     0414                     	;# 
  1528     0414                     	;# 
  1529     0415                     	;# 
  1530     0416                     	;# 
  1531     0417                     	;# 
  1532     0418                     	;# 
  1533     041A                     	;# 
  1534     041A                     	;# 
  1535     041B                     	;# 
  1536     041B                     	;# 
  1537     041C                     	;# 
  1538     041D                     	;# 
  1539     041E                     	;# 
  1540     041F                     	;# 
  1541     048E                     	;# 
  1542     048E                     	;# 
  1543     048F                     	;# 
  1544     0490                     	;# 
  1545     0491                     	;# 
  1546     0492                     	;# 
  1547     0493                     	;# 
  1548     0493                     	;# 
  1549     0494                     	;# 
  1550     0494                     	;# 
  1551     0495                     	;# 
  1552     0496                     	;# 
  1553     0497                     	;# 
  1554     0498                     	;# 
  1555     049A                     	;# 
  1556     049A                     	;# 
  1557     049B                     	;# 
  1558     049B                     	;# 
  1559     049C                     	;# 
  1560     049D                     	;# 
  1561     049E                     	;# 
  1562     049F                     	;# 
  1563     050F                     	;# 
  1564     0510                     	;# 
  1565     0511                     	;# 
  1566     0512                     	;# 
  1567     0513                     	;# 
  1568     0514                     	;# 
  1569     0515                     	;# 
  1570     0516                     	;# 
  1571     0517                     	;# 
  1572     0518                     	;# 
  1573     0519                     	;# 
  1574     051A                     	;# 
  1575     058D                     	;# 
  1576     058E                     	;# 
  1577     058F                     	;# 
  1578     058F                     	;# 
  1579     058F                     	;# 
  1580     0590                     	;# 
  1581     0590                     	;# 
  1582     0591                     	;# 
  1583     0592                     	;# 
  1584     0592                     	;# 
  1585     0592                     	;# 
  1586     0593                     	;# 
  1587     0593                     	;# 
  1588     0594                     	;# 
  1589     0595                     	;# 
  1590     0595                     	;# 
  1591     0596                     	;# 
  1592     0597                     	;# 
  1593     0597                     	;# 
  1594     0598                     	;# 
  1595     0599                     	;# 
  1596     0599                     	;# 
  1597     0599                     	;# 
  1598     059A                     	;# 
  1599     059A                     	;# 
  1600     059E                     	;# 
  1601     059F                     	;# 
  1602     059F                     	;# 
  1603     0614                     	;# 
  1604     0614                     	;# 
  1605     0615                     	;# 
  1606     0616                     	;# 
  1607     0617                     	;# 
  1608     0617                     	;# 
  1609     0618                     	;# 
  1610     0619                     	;# 
  1611     061A                     	;# 
  1612     061A                     	;# 
  1613     061B                     	;# 
  1614     061C                     	;# 
  1615     068D                     	;# 
  1616     068E                     	;# 
  1617     068F                     	;# 
  1618     0690                     	;# 
  1619     0691                     	;# 
  1620     0692                     	;# 
  1621     0693                     	;# 
  1622     0694                     	;# 
  1623     0695                     	;# 
  1624     0696                     	;# 
  1625     0697                     	;# 
  1626     0698                     	;# 
  1627     0699                     	;# 
  1628     069A                     	;# 
  1629     069B                     	;# 
  1630     069C                     	;# 
  1631     069D                     	;# 
  1632     069E                     	;# 
  1633     069F                     	;# 
  1634     070D                     	;# 
  1635     070E                     	;# 
  1636     070F                     	;# 
  1637     0710                     	;# 
  1638     0711                     	;# 
  1639     0712                     	;# 
  1640     0713                     	;# 
  1641     0714                     	;# 
  1642     0715                     	;# 
  1643     0716                     	;# 
  1644     0717                     	;# 
  1645     0718                     	;# 
  1646     0719                     	;# 
  1647     071A                     	;# 
  1648     071B                     	;# 
  1649     071C                     	;# 
  1650     071D                     	;# 
  1651     071E                     	;# 
  1652     071F                     	;# 
  1653     078E                     	;# 
  1654     078F                     	;# 
  1655     0790                     	;# 
  1656     0791                     	;# 
  1657     0792                     	;# 
  1658     0793                     	;# 
  1659     0794                     	;# 
  1660     0795                     	;# 
  1661     0796                     	;# 
  1662     0797                     	;# 
  1663     0798                     	;# 
  1664     0799                     	;# 
  1665     079A                     	;# 
  1666     079B                     	;# 
  1667     079C                     	;# 
  1668     079D                     	;# 
  1669     079E                     	;# 
  1670     079F                     	;# 
  1671     080D                     	;# 
  1672     080E                     	;# 
  1673     080F                     	;# 
  1674     0810                     	;# 
  1675     0811                     	;# 
  1676     0812                     	;# 
  1677     0813                     	;# 
  1678     0814                     	;# 
  1679     0815                     	;# 
  1680     0816                     	;# 
  1681     0817                     	;# 
  1682     0818                     	;# 
  1683     0819                     	;# 
  1684     081A                     	;# 
  1685     081B                     	;# 
  1686     081C                     	;# 
  1687     081D                     	;# 
  1688     081E                     	;# 
  1689     081F                     	;# 
  1690     090C                     	;# 
  1691     090D                     	;# 
  1692     090E                     	;# 
  1693     090F                     	;# 
  1694     0910                     	;# 
  1695     0911                     	;# 
  1696     0912                     	;# 
  1697     0913                     	;# 
  1698     0914                     	;# 
  1699     0915                     	;# 
  1700     0916                     	;# 
  1701     0917                     	;# 
  1702     0D8E                     	;# 
  1703     0D8F                     	;# 
  1704     0D90                     	;# 
  1705     0D91                     	;# 
  1706     0D91                     	;# 
  1707     0D92                     	;# 
  1708     0D93                     	;# 
  1709     0D93                     	;# 
  1710     0D94                     	;# 
  1711     0D95                     	;# 
  1712     0D95                     	;# 
  1713     0D96                     	;# 
  1714     0D97                     	;# 
  1715     0D97                     	;# 
  1716     0D98                     	;# 
  1717     0D99                     	;# 
  1718     0D99                     	;# 
  1719     0D9A                     	;# 
  1720     0D9B                     	;# 
  1721     0D9C                     	;# 
  1722     0D9C                     	;# 
  1723     0D9D                     	;# 
  1724     0D9D                     	;# 
  1725     0D9E                     	;# 
  1726     0D9F                     	;# 
  1727     0DA0                     	;# 
  1728     0DA1                     	;# 
  1729     0DA1                     	;# 
  1730     0DA2                     	;# 
  1731     0DA3                     	;# 
  1732     0DA3                     	;# 
  1733     0DA4                     	;# 
  1734     0DA5                     	;# 
  1735     0DA5                     	;# 
  1736     0DA6                     	;# 
  1737     0DA7                     	;# 
  1738     0DA7                     	;# 
  1739     0DA8                     	;# 
  1740     0DA9                     	;# 
  1741     0DA9                     	;# 
  1742     0DAA                     	;# 
  1743     0DAB                     	;# 
  1744     0DAC                     	;# 
  1745     0DAC                     	;# 
  1746     0DAD                     	;# 
  1747     0DAD                     	;# 
  1748     0DAE                     	;# 
  1749     0DAF                     	;# 
  1750     0DB0                     	;# 
  1751     0DB1                     	;# 
  1752     0DB1                     	;# 
  1753     0DB2                     	;# 
  1754     0DB3                     	;# 
  1755     0DB3                     	;# 
  1756     0DB4                     	;# 
  1757     0DB5                     	;# 
  1758     0DB5                     	;# 
  1759     0DB6                     	;# 
  1760     0DB7                     	;# 
  1761     0DB7                     	;# 
  1762     0DB8                     	;# 
  1763     0DB9                     	;# 
  1764     0DB9                     	;# 
  1765     0DBA                     	;# 
  1766     0DBB                     	;# 
  1767     0DBC                     	;# 
  1768     0DBC                     	;# 
  1769     0DBD                     	;# 
  1770     0DBD                     	;# 
  1771     0DBE                     	;# 
  1772     0DBF                     	;# 
  1773     0DC0                     	;# 
  1774     0E0C                     	;# 
  1775     0E0D                     	;# 
  1776     0E0E                     	;# 
  1777     0E0F                     	;# 
  1778     0E10                     	;# 
  1779     0E11                     	;# 
  1780     0E12                     	;# 
  1781     0E13                     	;# 
  1782     0E14                     	;# 
  1783     0E15                     	;# 
  1784     0E15                     	;# 
  1785     0E15                     	;# 
  1786     0E16                     	;# 
  1787     0E16                     	;# 
  1788     0E16                     	;# 
  1789     0E17                     	;# 
  1790     0E17                     	;# 
  1791     0E17                     	;# 
  1792     0E18                     	;# 
  1793     0E18                     	;# 
  1794     0E18                     	;# 
  1795     0E19                     	;# 
  1796     0E1A                     	;# 
  1797     0E1B                     	;# 
  1798     0E1D                     	;# 
  1799     0E1E                     	;# 
  1800     0E1F                     	;# 
  1801     0E21                     	;# 
  1802     0E22                     	;# 
  1803     0E23                     	;# 
  1804     0E24                     	;# 
  1805     0E25                     	;# 
  1806     0E26                     	;# 
  1807     0E27                     	;# 
  1808     0E28                     	;# 
  1809     0E29                     	;# 
  1810     0E2D                     	;# 
  1811     0E2E                     	;# 
  1812     0E2F                     	;# 
  1813     0E30                     	;# 
  1814     0E31                     	;# 
  1815     0E32                     	;# 
  1816     0E35                     	;# 
  1817     0E36                     	;# 
  1818     0E37                     	;# 
  1819     0E38                     	;# 
  1820     0E39                     	;# 
  1821     0E3A                     	;# 
  1822     0E3B                     	;# 
  1823     0E3C                     	;# 
  1824     0E3D                     	;# 
  1825     0E3E                     	;# 
  1826     0E90                     	;# 
  1827     0E91                     	;# 
  1828     0E92                     	;# 
  1829     0E93                     	;# 
  1830     0E94                     	;# 
  1831     0E95                     	;# 
  1832     0E96                     	;# 
  1833     0E97                     	;# 
  1834     0E98                     	;# 
  1835     0E99                     	;# 
  1836     0E9A                     	;# 
  1837     0E9B                     	;# 
  1838     0E9C                     	;# 
  1839     0E9D                     	;# 
  1840     0E9E                     	;# 
  1841     0E9F                     	;# 
  1842     0EA0                     	;# 
  1843     0EA1                     	;# 
  1844     0EA2                     	;# 
  1845     0EA3                     	;# 
  1846     0EA4                     	;# 
  1847     0EA5                     	;# 
  1848     0EA6                     	;# 
  1849     0EA7                     	;# 
  1850     0F0F                     	;# 
  1851     0F10                     	;# 
  1852     0F11                     	;# 
  1853     0F12                     	;# 
  1854     0F13                     	;# 
  1855     0F14                     	;# 
  1856     0F15                     	;# 
  1857     0F16                     	;# 
  1858     0F17                     	;# 
  1859     0F18                     	;# 
  1860     0F19                     	;# 
  1861     0F1A                     	;# 
  1862     0F1B                     	;# 
  1863     0F1C                     	;# 
  1864     0F1D                     	;# 
  1865     0F1E                     	;# 
  1866     0F1F                     	;# 
  1867     0F20                     	;# 
  1868     0F21                     	;# 
  1869     0F22                     	;# 
  1870     0F23                     	;# 
  1871     0F24                     	;# 
  1872     0F25                     	;# 
  1873     0F26                     	;# 
  1874     0F27                     	;# 
  1875     0F28                     	;# 
  1876     0F29                     	;# 
  1877     0F2A                     	;# 
  1878     0F2B                     	;# 
  1879     0F2C                     	;# 
  1880     0F2D                     	;# 
  1881     0F2E                     	;# 
  1882     0F2F                     	;# 
  1883     0F30                     	;# 
  1884     0F31                     	;# 
  1885     0F32                     	;# 
  1886     0F33                     	;# 
  1887     0F34                     	;# 
  1888     0F35                     	;# 
  1889     0F36                     	;# 
  1890     0F37                     	;# 
  1891     0FE4                     	;# 
  1892     0FE5                     	;# 
  1893     0FE6                     	;# 
  1894     0FE7                     	;# 
  1895     0FE8                     	;# 
  1896     0FE9                     	;# 
  1897     0FEA                     	;# 
  1898     0FEB                     	;# 
  1899     0FED                     	;# 
  1900     0FEE                     	;# 
  1901     0FEF                     	;# 
  1902     0000                     	;# 
  1903     0001                     	;# 
  1904     0002                     	;# 
  1905     0003                     	;# 
  1906     0004                     	;# 
  1907     0005                     	;# 
  1908     0006                     	;# 
  1909     0007                     	;# 
  1910     0008                     	;# 
  1911     0009                     	;# 
  1912     000A                     	;# 
  1913     000B                     	;# 
  1914     000C                     	;# 
  1915     000D                     	;# 
  1916     000E                     	;# 
  1917     0010                     	;# 
  1918     0011                     	;# 
  1919     0012                     	;# 
  1920     0013                     	;# 
  1921     0014                     	;# 
  1922     0015                     	;# 
  1923     0016                     	;# 
  1924     0017                     	;# 
  1925     0018                     	;# 
  1926     0018                     	;# 
  1927     0019                     	;# 
  1928     001A                     	;# 
  1929     001B                     	;# 
  1930     001C                     	;# 
  1931     001C                     	;# 
  1932     001D                     	;# 
  1933     001E                     	;# 
  1934     001F                     	;# 
  1935     008C                     	;# 
  1936     008D                     	;# 
  1937     008E                     	;# 
  1938     0090                     	;# 
  1939     0091                     	;# 
  1940     0092                     	;# 
  1941     0093                     	;# 
  1942     0094                     	;# 
  1943     0095                     	;# 
  1944     0096                     	;# 
  1945     0097                     	;# 
  1946     0098                     	;# 
  1947     0099                     	;# 
  1948     009A                     	;# 
  1949     009B                     	;# 
  1950     009C                     	;# 
  1951     009D                     	;# 
  1952     009E                     	;# 
  1953     009F                     	;# 
  1954     010C                     	;# 
  1955     010D                     	;# 
  1956     010E                     	;# 
  1957     0111                     	;# 
  1958     0112                     	;# 
  1959     0113                     	;# 
  1960     0114                     	;# 
  1961     0115                     	;# 
  1962     0116                     	;# 
  1963     0117                     	;# 
  1964     0118                     	;# 
  1965     0119                     	;# 
  1966     011A                     	;# 
  1967     011B                     	;# 
  1968     011C                     	;# 
  1969     011D                     	;# 
  1970     018C                     	;# 
  1971     018D                     	;# 
  1972     018E                     	;# 
  1973     0191                     	;# 
  1974     0191                     	;# 
  1975     0192                     	;# 
  1976     0193                     	;# 
  1977     0193                     	;# 
  1978     0194                     	;# 
  1979     0195                     	;# 
  1980     0196                     	;# 
  1981     0197                     	;# 
  1982     0199                     	;# 
  1983     0199                     	;# 
  1984     0199                     	;# 
  1985     019A                     	;# 
  1986     019A                     	;# 
  1987     019A                     	;# 
  1988     019B                     	;# 
  1989     019B                     	;# 
  1990     019B                     	;# 
  1991     019B                     	;# 
  1992     019B                     	;# 
  1993     019C                     	;# 
  1994     019C                     	;# 
  1995     019C                     	;# 
  1996     019D                     	;# 
  1997     019D                     	;# 
  1998     019D                     	;# 
  1999     019E                     	;# 
  2000     019E                     	;# 
  2001     019E                     	;# 
  2002     019F                     	;# 
  2003     019F                     	;# 
  2004     019F                     	;# 
  2005     019F                     	;# 
  2006     019F                     	;# 
  2007     020C                     	;# 
  2008     020D                     	;# 
  2009     020E                     	;# 
  2010     0210                     	;# 
  2011     0211                     	;# 
  2012     0211                     	;# 
  2013     0212                     	;# 
  2014     0212                     	;# 
  2015     0213                     	;# 
  2016     0213                     	;# 
  2017     0214                     	;# 
  2018     0214                     	;# 
  2019     0215                     	;# 
  2020     0215                     	;# 
  2021     0215                     	;# 
  2022     0215                     	;# 
  2023     0216                     	;# 
  2024     0216                     	;# 
  2025     0217                     	;# 
  2026     0217                     	;# 
  2027     021B                     	;# 
  2028     021C                     	;# 
  2029     021D                     	;# 
  2030     021E                     	;# 
  2031     021F                     	;# 
  2032     028C                     	;# 
  2033     028D                     	;# 
  2034     028E                     	;# 
  2035     0291                     	;# 
  2036     0291                     	;# 
  2037     0292                     	;# 
  2038     0293                     	;# 
  2039     0294                     	;# 
  2040     0295                     	;# 
  2041     0295                     	;# 
  2042     0296                     	;# 
  2043     0297                     	;# 
  2044     0298                     	;# 
  2045     0299                     	;# 
  2046     0299                     	;# 
  2047     029A                     	;# 
  2048     029B                     	;# 
  2049     029C                     	;# 
  2050     029E                     	;# 
  2051     029F                     	;# 
  2052     030C                     	;# 
  2053     030D                     	;# 
  2054     030E                     	;# 
  2055     0315                     	;# 
  2056     0316                     	;# 
  2057     0317                     	;# 
  2058     0318                     	;# 
  2059     0319                     	;# 
  2060     031B                     	;# 
  2061     031C                     	;# 
  2062     031D                     	;# 
  2063     031E                     	;# 
  2064     031F                     	;# 
  2065     038C                     	;# 
  2066     038D                     	;# 
  2067     038E                     	;# 
  2068     0390                     	;# 
  2069     0391                     	;# 
  2070     0392                     	;# 
  2071     0393                     	;# 
  2072     0394                     	;# 
  2073     0395                     	;# 
  2074     0396                     	;# 
  2075     0397                     	;# 
  2076     0398                     	;# 
  2077     0399                     	;# 
  2078     039D                     	;# 
  2079     039E                     	;# 
  2080     039F                     	;# 
  2081     040D                     	;# 
  2082     040F                     	;# 
  2083     040F                     	;# 
  2084     0410                     	;# 
  2085     0411                     	;# 
  2086     0412                     	;# 
  2087     0413                     	;# 
  2088     0413                     	;# 
  2089     0414                     	;# 
  2090     0414                     	;# 
  2091     0415                     	;# 
  2092     0416                     	;# 
  2093     0417                     	;# 
  2094     0418                     	;# 
  2095     041A                     	;# 
  2096     041A                     	;# 
  2097     041B                     	;# 
  2098     041B                     	;# 
  2099     041C                     	;# 
  2100     041D                     	;# 
  2101     041E                     	;# 
  2102     041F                     	;# 
  2103     048E                     	;# 
  2104     048E                     	;# 
  2105     048F                     	;# 
  2106     0490                     	;# 
  2107     0491                     	;# 
  2108     0492                     	;# 
  2109     0493                     	;# 
  2110     0493                     	;# 
  2111     0494                     	;# 
  2112     0494                     	;# 
  2113     0495                     	;# 
  2114     0496                     	;# 
  2115     0497                     	;# 
  2116     0498                     	;# 
  2117     049A                     	;# 
  2118     049A                     	;# 
  2119     049B                     	;# 
  2120     049B                     	;# 
  2121     049C                     	;# 
  2122     049D                     	;# 
  2123     049E                     	;# 
  2124     049F                     	;# 
  2125     050F                     	;# 
  2126     0510                     	;# 
  2127     0511                     	;# 
  2128     0512                     	;# 
  2129     0513                     	;# 
  2130     0514                     	;# 
  2131     0515                     	;# 
  2132     0516                     	;# 
  2133     0517                     	;# 
  2134     0518                     	;# 
  2135     0519                     	;# 
  2136     051A                     	;# 
  2137     058D                     	;# 
  2138     058E                     	;# 
  2139     058F                     	;# 
  2140     058F                     	;# 
  2141     058F                     	;# 
  2142     0590                     	;# 
  2143     0590                     	;# 
  2144     0591                     	;# 
  2145     0592                     	;# 
  2146     0592                     	;# 
  2147     0592                     	;# 
  2148     0593                     	;# 
  2149     0593                     	;# 
  2150     0594                     	;# 
  2151     0595                     	;# 
  2152     0595                     	;# 
  2153     0596                     	;# 
  2154     0597                     	;# 
  2155     0597                     	;# 
  2156     0598                     	;# 
  2157     0599                     	;# 
  2158     0599                     	;# 
  2159     0599                     	;# 
  2160     059A                     	;# 
  2161     059A                     	;# 
  2162     059E                     	;# 
  2163     059F                     	;# 
  2164     059F                     	;# 
  2165     0614                     	;# 
  2166     0614                     	;# 
  2167     0615                     	;# 
  2168     0616                     	;# 
  2169     0617                     	;# 
  2170     0617                     	;# 
  2171     0618                     	;# 
  2172     0619                     	;# 
  2173     061A                     	;# 
  2174     061A                     	;# 
  2175     061B                     	;# 
  2176     061C                     	;# 
  2177     068D                     	;# 
  2178     068E                     	;# 
  2179     068F                     	;# 
  2180     0690                     	;# 
  2181     0691                     	;# 
  2182     0692                     	;# 
  2183     0693                     	;# 
  2184     0694                     	;# 
  2185     0695                     	;# 
  2186     0696                     	;# 
  2187     0697                     	;# 
  2188     0698                     	;# 
  2189     0699                     	;# 
  2190     069A                     	;# 
  2191     069B                     	;# 
  2192     069C                     	;# 
  2193     069D                     	;# 
  2194     069E                     	;# 
  2195     069F                     	;# 
  2196     070D                     	;# 
  2197     070E                     	;# 
  2198     070F                     	;# 
  2199     0710                     	;# 
  2200     0711                     	;# 
  2201     0712                     	;# 
  2202     0713                     	;# 
  2203     0714                     	;# 
  2204     0715                     	;# 
  2205     0716                     	;# 
  2206     0717                     	;# 
  2207     0718                     	;# 
  2208     0719                     	;# 
  2209     071A                     	;# 
  2210     071B                     	;# 
  2211     071C                     	;# 
  2212     071D                     	;# 
  2213     071E                     	;# 
  2214     071F                     	;# 
  2215     078E                     	;# 
  2216     078F                     	;# 
  2217     0790                     	;# 
  2218     0791                     	;# 
  2219     0792                     	;# 
  2220     0793                     	;# 
  2221     0794                     	;# 
  2222     0795                     	;# 
  2223     0796                     	;# 
  2224     0797                     	;# 
  2225     0798                     	;# 
  2226     0799                     	;# 
  2227     079A                     	;# 
  2228     079B                     	;# 
  2229     079C                     	;# 
  2230     079D                     	;# 
  2231     079E                     	;# 
  2232     079F                     	;# 
  2233     080D                     	;# 
  2234     080E                     	;# 
  2235     080F                     	;# 
  2236     0810                     	;# 
  2237     0811                     	;# 
  2238     0812                     	;# 
  2239     0813                     	;# 
  2240     0814                     	;# 
  2241     0815                     	;# 
  2242     0816                     	;# 
  2243     0817                     	;# 
  2244     0818                     	;# 
  2245     0819                     	;# 
  2246     081A                     	;# 
  2247     081B                     	;# 
  2248     081C                     	;# 
  2249     081D                     	;# 
  2250     081E                     	;# 
  2251     081F                     	;# 
  2252     090C                     	;# 
  2253     090D                     	;# 
  2254     090E                     	;# 
  2255     090F                     	;# 
  2256     0910                     	;# 
  2257     0911                     	;# 
  2258     0912                     	;# 
  2259     0913                     	;# 
  2260     0914                     	;# 
  2261     0915                     	;# 
  2262     0916                     	;# 
  2263     0917                     	;# 
  2264     0D8E                     	;# 
  2265     0D8F                     	;# 
  2266     0D90                     	;# 
  2267     0D91                     	;# 
  2268     0D91                     	;# 
  2269     0D92                     	;# 
  2270     0D93                     	;# 
  2271     0D93                     	;# 
  2272     0D94                     	;# 
  2273     0D95                     	;# 
  2274     0D95                     	;# 
  2275     0D96                     	;# 
  2276     0D97                     	;# 
  2277     0D97                     	;# 
  2278     0D98                     	;# 
  2279     0D99                     	;# 
  2280     0D99                     	;# 
  2281     0D9A                     	;# 
  2282     0D9B                     	;# 
  2283     0D9C                     	;# 
  2284     0D9C                     	;# 
  2285     0D9D                     	;# 
  2286     0D9D                     	;# 
  2287     0D9E                     	;# 
  2288     0D9F                     	;# 
  2289     0DA0                     	;# 
  2290     0DA1                     	;# 
  2291     0DA1                     	;# 
  2292     0DA2                     	;# 
  2293     0DA3                     	;# 
  2294     0DA3                     	;# 
  2295     0DA4                     	;# 
  2296     0DA5                     	;# 
  2297     0DA5                     	;# 
  2298     0DA6                     	;# 
  2299     0DA7                     	;# 
  2300     0DA7                     	;# 
  2301     0DA8                     	;# 
  2302     0DA9                     	;# 
  2303     0DA9                     	;# 
  2304     0DAA                     	;# 
  2305     0DAB                     	;# 
  2306     0DAC                     	;# 
  2307     0DAC                     	;# 
  2308     0DAD                     	;# 
  2309     0DAD                     	;# 
  2310     0DAE                     	;# 
  2311     0DAF                     	;# 
  2312     0DB0                     	;# 
  2313     0DB1                     	;# 
  2314     0DB1                     	;# 
  2315     0DB2                     	;# 
  2316     0DB3                     	;# 
  2317     0DB3                     	;# 
  2318     0DB4                     	;# 
  2319     0DB5                     	;# 
  2320     0DB5                     	;# 
  2321     0DB6                     	;# 
  2322     0DB7                     	;# 
  2323     0DB7                     	;# 
  2324     0DB8                     	;# 
  2325     0DB9                     	;# 
  2326     0DB9                     	;# 
  2327     0DBA                     	;# 
  2328     0DBB                     	;# 
  2329     0DBC                     	;# 
  2330     0DBC                     	;# 
  2331     0DBD                     	;# 
  2332     0DBD                     	;# 
  2333     0DBE                     	;# 
  2334     0DBF                     	;# 
  2335     0DC0                     	;# 
  2336     0E0C                     	;# 
  2337     0E0D                     	;# 
  2338     0E0E                     	;# 
  2339     0E0F                     	;# 
  2340     0E10                     	;# 
  2341     0E11                     	;# 
  2342     0E12                     	;# 
  2343     0E13                     	;# 
  2344     0E14                     	;# 
  2345     0E15                     	;# 
  2346     0E15                     	;# 
  2347     0E15                     	;# 
  2348     0E16                     	;# 
  2349     0E16                     	;# 
  2350     0E16                     	;# 
  2351     0E17                     	;# 
  2352     0E17                     	;# 
  2353     0E17                     	;# 
  2354     0E18                     	;# 
  2355     0E18                     	;# 
  2356     0E18                     	;# 
  2357     0E19                     	;# 
  2358     0E1A                     	;# 
  2359     0E1B                     	;# 
  2360     0E1D                     	;# 
  2361     0E1E                     	;# 
  2362     0E1F                     	;# 
  2363     0E21                     	;# 
  2364     0E22                     	;# 
  2365     0E23                     	;# 
  2366     0E24                     	;# 
  2367     0E25                     	;# 
  2368     0E26                     	;# 
  2369     0E27                     	;# 
  2370     0E28                     	;# 
  2371     0E29                     	;# 
  2372     0E2D                     	;# 
  2373     0E2E                     	;# 
  2374     0E2F                     	;# 
  2375     0E30                     	;# 
  2376     0E31                     	;# 
  2377     0E32                     	;# 
  2378     0E35                     	;# 
  2379     0E36                     	;# 
  2380     0E37                     	;# 
  2381     0E38                     	;# 
  2382     0E39                     	;# 
  2383     0E3A                     	;# 
  2384     0E3B                     	;# 
  2385     0E3C                     	;# 
  2386     0E3D                     	;# 
  2387     0E3E                     	;# 
  2388     0E90                     	;# 
  2389     0E91                     	;# 
  2390     0E92                     	;# 
  2391     0E93                     	;# 
  2392     0E94                     	;# 
  2393     0E95                     	;# 
  2394     0E96                     	;# 
  2395     0E97                     	;# 
  2396     0E98                     	;# 
  2397     0E99                     	;# 
  2398     0E9A                     	;# 
  2399     0E9B                     	;# 
  2400     0E9C                     	;# 
  2401     0E9D                     	;# 
  2402     0E9E                     	;# 
  2403     0E9F                     	;# 
  2404     0EA0                     	;# 
  2405     0EA1                     	;# 
  2406     0EA2                     	;# 
  2407     0EA3                     	;# 
  2408     0EA4                     	;# 
  2409     0EA5                     	;# 
  2410     0EA6                     	;# 
  2411     0EA7                     	;# 
  2412     0F0F                     	;# 
  2413     0F10                     	;# 
  2414     0F11                     	;# 
  2415     0F12                     	;# 
  2416     0F13                     	;# 
  2417     0F14                     	;# 
  2418     0F15                     	;# 
  2419     0F16                     	;# 
  2420     0F17                     	;# 
  2421     0F18                     	;# 
  2422     0F19                     	;# 
  2423     0F1A                     	;# 
  2424     0F1B                     	;# 
  2425     0F1C                     	;# 
  2426     0F1D                     	;# 
  2427     0F1E                     	;# 
  2428     0F1F                     	;# 
  2429     0F20                     	;# 
  2430     0F21                     	;# 
  2431     0F22                     	;# 
  2432     0F23                     	;# 
  2433     0F24                     	;# 
  2434     0F25                     	;# 
  2435     0F26                     	;# 
  2436     0F27                     	;# 
  2437     0F28                     	;# 
  2438     0F29                     	;# 
  2439     0F2A                     	;# 
  2440     0F2B                     	;# 
  2441     0F2C                     	;# 
  2442     0F2D                     	;# 
  2443     0F2E                     	;# 
  2444     0F2F                     	;# 
  2445     0F30                     	;# 
  2446     0F31                     	;# 
  2447     0F32                     	;# 
  2448     0F33                     	;# 
  2449     0F34                     	;# 
  2450     0F35                     	;# 
  2451     0F36                     	;# 
  2452     0F37                     	;# 
  2453     0FE4                     	;# 
  2454     0FE5                     	;# 
  2455     0FE6                     	;# 
  2456     0FE7                     	;# 
  2457     0FE8                     	;# 
  2458     0FE9                     	;# 
  2459     0FEA                     	;# 
  2460     0FEB                     	;# 
  2461     0FED                     	;# 
  2462     0FEE                     	;# 
  2463     0FEF                     	;# 
  2464     0000                     	;# 
  2465     0001                     	;# 
  2466     0002                     	;# 
  2467     0003                     	;# 
  2468     0004                     	;# 
  2469     0005                     	;# 
  2470     0006                     	;# 
  2471     0007                     	;# 
  2472     0008                     	;# 
  2473     0009                     	;# 
  2474     000A                     	;# 
  2475     000B                     	;# 
  2476     000C                     	;# 
  2477     000D                     	;# 
  2478     000E                     	;# 
  2479     0010                     	;# 
  2480     0011                     	;# 
  2481     0012                     	;# 
  2482     0013                     	;# 
  2483     0014                     	;# 
  2484     0015                     	;# 
  2485     0016                     	;# 
  2486     0017                     	;# 
  2487     0018                     	;# 
  2488     0018                     	;# 
  2489     0019                     	;# 
  2490     001A                     	;# 
  2491     001B                     	;# 
  2492     001C                     	;# 
  2493     001C                     	;# 
  2494     001D                     	;# 
  2495     001E                     	;# 
  2496     001F                     	;# 
  2497     008C                     	;# 
  2498     008D                     	;# 
  2499     008E                     	;# 
  2500     0090                     	;# 
  2501     0091                     	;# 
  2502     0092                     	;# 
  2503     0093                     	;# 
  2504     0094                     	;# 
  2505     0095                     	;# 
  2506     0096                     	;# 
  2507     0097                     	;# 
  2508     0098                     	;# 
  2509     0099                     	;# 
  2510     009A                     	;# 
  2511     009B                     	;# 
  2512     009C                     	;# 
  2513     009D                     	;# 
  2514     009E                     	;# 
  2515     009F                     	;# 
  2516     010C                     	;# 
  2517     010D                     	;# 
  2518     010E                     	;# 
  2519     0111                     	;# 
  2520     0112                     	;# 
  2521     0113                     	;# 
  2522     0114                     	;# 
  2523     0115                     	;# 
  2524     0116                     	;# 
  2525     0117                     	;# 
  2526     0118                     	;# 
  2527     0119                     	;# 
  2528     011A                     	;# 
  2529     011B                     	;# 
  2530     011C                     	;# 
  2531     011D                     	;# 
  2532     018C                     	;# 
  2533     018D                     	;# 
  2534     018E                     	;# 
  2535     0191                     	;# 
  2536     0191                     	;# 
  2537     0192                     	;# 
  2538     0193                     	;# 
  2539     0193                     	;# 
  2540     0194                     	;# 
  2541     0195                     	;# 
  2542     0196                     	;# 
  2543     0197                     	;# 
  2544     0199                     	;# 
  2545     0199                     	;# 
  2546     0199                     	;# 
  2547     019A                     	;# 
  2548     019A                     	;# 
  2549     019A                     	;# 
  2550     019B                     	;# 
  2551     019B                     	;# 
  2552     019B                     	;# 
  2553     019B                     	;# 
  2554     019B                     	;# 
  2555     019C                     	;# 
  2556     019C                     	;# 
  2557     019C                     	;# 
  2558     019D                     	;# 
  2559     019D                     	;# 
  2560     019D                     	;# 
  2561     019E                     	;# 
  2562     019E                     	;# 
  2563     019E                     	;# 
  2564     019F                     	;# 
  2565     019F                     	;# 
  2566     019F                     	;# 
  2567     019F                     	;# 
  2568     019F                     	;# 
  2569     020C                     	;# 
  2570     020D                     	;# 
  2571     020E                     	;# 
  2572     0210                     	;# 
  2573     0211                     	;# 
  2574     0211                     	;# 
  2575     0212                     	;# 
  2576     0212                     	;# 
  2577     0213                     	;# 
  2578     0213                     	;# 
  2579     0214                     	;# 
  2580     0214                     	;# 
  2581     0215                     	;# 
  2582     0215                     	;# 
  2583     0215                     	;# 
  2584     0215                     	;# 
  2585     0216                     	;# 
  2586     0216                     	;# 
  2587     0217                     	;# 
  2588     0217                     	;# 
  2589     021B                     	;# 
  2590     021C                     	;# 
  2591     021D                     	;# 
  2592     021E                     	;# 
  2593     021F                     	;# 
  2594     028C                     	;# 
  2595     028D                     	;# 
  2596     028E                     	;# 
  2597     0291                     	;# 
  2598     0291                     	;# 
  2599     0292                     	;# 
  2600     0293                     	;# 
  2601     0294                     	;# 
  2602     0295                     	;# 
  2603     0295                     	;# 
  2604     0296                     	;# 
  2605     0297                     	;# 
  2606     0298                     	;# 
  2607     0299                     	;# 
  2608     0299                     	;# 
  2609     029A                     	;# 
  2610     029B                     	;# 
  2611     029C                     	;# 
  2612     029E                     	;# 
  2613     029F                     	;# 
  2614     030C                     	;# 
  2615     030D                     	;# 
  2616     030E                     	;# 
  2617     0315                     	;# 
  2618     0316                     	;# 
  2619     0317                     	;# 
  2620     0318                     	;# 
  2621     0319                     	;# 
  2622     031B                     	;# 
  2623     031C                     	;# 
  2624     031D                     	;# 
  2625     031E                     	;# 
  2626     031F                     	;# 
  2627     038C                     	;# 
  2628     038D                     	;# 
  2629     038E                     	;# 
  2630     0390                     	;# 
  2631     0391                     	;# 
  2632     0392                     	;# 
  2633     0393                     	;# 
  2634     0394                     	;# 
  2635     0395                     	;# 
  2636     0396                     	;# 
  2637     0397                     	;# 
  2638     0398                     	;# 
  2639     0399                     	;# 
  2640     039D                     	;# 
  2641     039E                     	;# 
  2642     039F                     	;# 
  2643     040D                     	;# 
  2644     040F                     	;# 
  2645     040F                     	;# 
  2646     0410                     	;# 
  2647     0411                     	;# 
  2648     0412                     	;# 
  2649     0413                     	;# 
  2650     0413                     	;# 
  2651     0414                     	;# 
  2652     0414                     	;# 
  2653     0415                     	;# 
  2654     0416                     	;# 
  2655     0417                     	;# 
  2656     0418                     	;# 
  2657     041A                     	;# 
  2658     041A                     	;# 
  2659     041B                     	;# 
  2660     041B                     	;# 
  2661     041C                     	;# 
  2662     041D                     	;# 
  2663     041E                     	;# 
  2664     041F                     	;# 
  2665     048E                     	;# 
  2666     048E                     	;# 
  2667     048F                     	;# 
  2668     0490                     	;# 
  2669     0491                     	;# 
  2670     0492                     	;# 
  2671     0493                     	;# 
  2672     0493                     	;# 
  2673     0494                     	;# 
  2674     0494                     	;# 
  2675     0495                     	;# 
  2676     0496                     	;# 
  2677     0497                     	;# 
  2678     0498                     	;# 
  2679     049A                     	;# 
  2680     049A                     	;# 
  2681     049B                     	;# 
  2682     049B                     	;# 
  2683     049C                     	;# 
  2684     049D                     	;# 
  2685     049E                     	;# 
  2686     049F                     	;# 
  2687     050F                     	;# 
  2688     0510                     	;# 
  2689     0511                     	;# 
  2690     0512                     	;# 
  2691     0513                     	;# 
  2692     0514                     	;# 
  2693     0515                     	;# 
  2694     0516                     	;# 
  2695     0517                     	;# 
  2696     0518                     	;# 
  2697     0519                     	;# 
  2698     051A                     	;# 
  2699     058D                     	;# 
  2700     058E                     	;# 
  2701     058F                     	;# 
  2702     058F                     	;# 
  2703     058F                     	;# 
  2704     0590                     	;# 
  2705     0590                     	;# 
  2706     0591                     	;# 
  2707     0592                     	;# 
  2708     0592                     	;# 
  2709     0592                     	;# 
  2710     0593                     	;# 
  2711     0593                     	;# 
  2712     0594                     	;# 
  2713     0595                     	;# 
  2714     0595                     	;# 
  2715     0596                     	;# 
  2716     0597                     	;# 
  2717     0597                     	;# 
  2718     0598                     	;# 
  2719     0599                     	;# 
  2720     0599                     	;# 
  2721     0599                     	;# 
  2722     059A                     	;# 
  2723     059A                     	;# 
  2724     059E                     	;# 
  2725     059F                     	;# 
  2726     059F                     	;# 
  2727     0614                     	;# 
  2728     0614                     	;# 
  2729     0615                     	;# 
  2730     0616                     	;# 
  2731     0617                     	;# 
  2732     0617                     	;# 
  2733     0618                     	;# 
  2734     0619                     	;# 
  2735     061A                     	;# 
  2736     061A                     	;# 
  2737     061B                     	;# 
  2738     061C                     	;# 
  2739     068D                     	;# 
  2740     068E                     	;# 
  2741     068F                     	;# 
  2742     0690                     	;# 
  2743     0691                     	;# 
  2744     0692                     	;# 
  2745     0693                     	;# 
  2746     0694                     	;# 
  2747     0695                     	;# 
  2748     0696                     	;# 
  2749     0697                     	;# 
  2750     0698                     	;# 
  2751     0699                     	;# 
  2752     069A                     	;# 
  2753     069B                     	;# 
  2754     069C                     	;# 
  2755     069D                     	;# 
  2756     069E                     	;# 
  2757     069F                     	;# 
  2758     070D                     	;# 
  2759     070E                     	;# 
  2760     070F                     	;# 
  2761     0710                     	;# 
  2762     0711                     	;# 
  2763     0712                     	;# 
  2764     0713                     	;# 
  2765     0714                     	;# 
  2766     0715                     	;# 
  2767     0716                     	;# 
  2768     0717                     	;# 
  2769     0718                     	;# 
  2770     0719                     	;# 
  2771     071A                     	;# 
  2772     071B                     	;# 
  2773     071C                     	;# 
  2774     071D                     	;# 
  2775     071E                     	;# 
  2776     071F                     	;# 
  2777     078E                     	;# 
  2778     078F                     	;# 
  2779     0790                     	;# 
  2780     0791                     	;# 
  2781     0792                     	;# 
  2782     0793                     	;# 
  2783     0794                     	;# 
  2784     0795                     	;# 
  2785     0796                     	;# 
  2786     0797                     	;# 
  2787     0798                     	;# 
  2788     0799                     	;# 
  2789     079A                     	;# 
  2790     079B                     	;# 
  2791     079C                     	;# 
  2792     079D                     	;# 
  2793     079E                     	;# 
  2794     079F                     	;# 
  2795     080D                     	;# 
  2796     080E                     	;# 
  2797     080F                     	;# 
  2798     0810                     	;# 
  2799     0811                     	;# 
  2800     0812                     	;# 
  2801     0813                     	;# 
  2802     0814                     	;# 
  2803     0815                     	;# 
  2804     0816                     	;# 
  2805     0817                     	;# 
  2806     0818                     	;# 
  2807     0819                     	;# 
  2808     081A                     	;# 
  2809     081B                     	;# 
  2810     081C                     	;# 
  2811     081D                     	;# 
  2812     081E                     	;# 
  2813     081F                     	;# 
  2814     090C                     	;# 
  2815     090D                     	;# 
  2816     090E                     	;# 
  2817     090F                     	;# 
  2818     0910                     	;# 
  2819     0911                     	;# 
  2820     0912                     	;# 
  2821     0913                     	;# 
  2822     0914                     	;# 
  2823     0915                     	;# 
  2824     0916                     	;# 
  2825     0917                     	;# 
  2826     0D8E                     	;# 
  2827     0D8F                     	;# 
  2828     0D90                     	;# 
  2829     0D91                     	;# 
  2830     0D91                     	;# 
  2831     0D92                     	;# 
  2832     0D93                     	;# 
  2833     0D93                     	;# 
  2834     0D94                     	;# 
  2835     0D95                     	;# 
  2836     0D95                     	;# 
  2837     0D96                     	;# 
  2838     0D97                     	;# 
  2839     0D97                     	;# 
  2840     0D98                     	;# 
  2841     0D99                     	;# 
  2842     0D99                     	;# 
  2843     0D9A                     	;# 
  2844     0D9B                     	;# 
  2845     0D9C                     	;# 
  2846     0D9C                     	;# 
  2847     0D9D                     	;# 
  2848     0D9D                     	;# 
  2849     0D9E                     	;# 
  2850     0D9F                     	;# 
  2851     0DA0                     	;# 
  2852     0DA1                     	;# 
  2853     0DA1                     	;# 
  2854     0DA2                     	;# 
  2855     0DA3                     	;# 
  2856     0DA3                     	;# 
  2857     0DA4                     	;# 
  2858     0DA5                     	;# 
  2859     0DA5                     	;# 
  2860     0DA6                     	;# 
  2861     0DA7                     	;# 
  2862     0DA7                     	;# 
  2863     0DA8                     	;# 
  2864     0DA9                     	;# 
  2865     0DA9                     	;# 
  2866     0DAA                     	;# 
  2867     0DAB                     	;# 
  2868     0DAC                     	;# 
  2869     0DAC                     	;# 
  2870     0DAD                     	;# 
  2871     0DAD                     	;# 
  2872     0DAE                     	;# 
  2873     0DAF                     	;# 
  2874     0DB0                     	;# 
  2875     0DB1                     	;# 
  2876     0DB1                     	;# 
  2877     0DB2                     	;# 
  2878     0DB3                     	;# 
  2879     0DB3                     	;# 
  2880     0DB4                     	;# 
  2881     0DB5                     	;# 
  2882     0DB5                     	;# 
  2883     0DB6                     	;# 
  2884     0DB7                     	;# 
  2885     0DB7                     	;# 
  2886     0DB8                     	;# 
  2887     0DB9                     	;# 
  2888     0DB9                     	;# 
  2889     0DBA                     	;# 
  2890     0DBB                     	;# 
  2891     0DBC                     	;# 
  2892     0DBC                     	;# 
  2893     0DBD                     	;# 
  2894     0DBD                     	;# 
  2895     0DBE                     	;# 
  2896     0DBF                     	;# 
  2897     0DC0                     	;# 
  2898     0E0C                     	;# 
  2899     0E0D                     	;# 
  2900     0E0E                     	;# 
  2901     0E0F                     	;# 
  2902     0E10                     	;# 
  2903     0E11                     	;# 
  2904     0E12                     	;# 
  2905     0E13                     	;# 
  2906     0E14                     	;# 
  2907     0E15                     	;# 
  2908     0E15                     	;# 
  2909     0E15                     	;# 
  2910     0E16                     	;# 
  2911     0E16                     	;# 
  2912     0E16                     	;# 
  2913     0E17                     	;# 
  2914     0E17                     	;# 
  2915     0E17                     	;# 
  2916     0E18                     	;# 
  2917     0E18                     	;# 
  2918     0E18                     	;# 
  2919     0E19                     	;# 
  2920     0E1A                     	;# 
  2921     0E1B                     	;# 
  2922     0E1D                     	;# 
  2923     0E1E                     	;# 
  2924     0E1F                     	;# 
  2925     0E21                     	;# 
  2926     0E22                     	;# 
  2927     0E23                     	;# 
  2928     0E24                     	;# 
  2929     0E25                     	;# 
  2930     0E26                     	;# 
  2931     0E27                     	;# 
  2932     0E28                     	;# 
  2933     0E29                     	;# 
  2934     0E2D                     	;# 
  2935     0E2E                     	;# 
  2936     0E2F                     	;# 
  2937     0E30                     	;# 
  2938     0E31                     	;# 
  2939     0E32                     	;# 
  2940     0E35                     	;# 
  2941     0E36                     	;# 
  2942     0E37                     	;# 
  2943     0E38                     	;# 
  2944     0E39                     	;# 
  2945     0E3A                     	;# 
  2946     0E3B                     	;# 
  2947     0E3C                     	;# 
  2948     0E3D                     	;# 
  2949     0E3E                     	;# 
  2950     0E90                     	;# 
  2951     0E91                     	;# 
  2952     0E92                     	;# 
  2953     0E93                     	;# 
  2954     0E94                     	;# 
  2955     0E95                     	;# 
  2956     0E96                     	;# 
  2957     0E97                     	;# 
  2958     0E98                     	;# 
  2959     0E99                     	;# 
  2960     0E9A                     	;# 
  2961     0E9B                     	;# 
  2962     0E9C                     	;# 
  2963     0E9D                     	;# 
  2964     0E9E                     	;# 
  2965     0E9F                     	;# 
  2966     0EA0                     	;# 
  2967     0EA1                     	;# 
  2968     0EA2                     	;# 
  2969     0EA3                     	;# 
  2970     0EA4                     	;# 
  2971     0EA5                     	;# 
  2972     0EA6                     	;# 
  2973     0EA7                     	;# 
  2974     0F0F                     	;# 
  2975     0F10                     	;# 
  2976     0F11                     	;# 
  2977     0F12                     	;# 
  2978     0F13                     	;# 
  2979     0F14                     	;# 
  2980     0F15                     	;# 
  2981     0F16                     	;# 
  2982     0F17                     	;# 
  2983     0F18                     	;# 
  2984     0F19                     	;# 
  2985     0F1A                     	;# 
  2986     0F1B                     	;# 
  2987     0F1C                     	;# 
  2988     0F1D                     	;# 
  2989     0F1E                     	;# 
  2990     0F1F                     	;# 
  2991     0F20                     	;# 
  2992     0F21                     	;# 
  2993     0F22                     	;# 
  2994     0F23                     	;# 
  2995     0F24                     	;# 
  2996     0F25                     	;# 
  2997     0F26                     	;# 
  2998     0F27                     	;# 
  2999     0F28                     	;# 
  3000     0F29                     	;# 
  3001     0F2A                     	;# 
  3002     0F2B                     	;# 
  3003     0F2C                     	;# 
  3004     0F2D                     	;# 
  3005     0F2E                     	;# 
  3006     0F2F                     	;# 
  3007     0F30                     	;# 
  3008     0F31                     	;# 
  3009     0F32                     	;# 
  3010     0F33                     	;# 
  3011     0F34                     	;# 
  3012     0F35                     	;# 
  3013     0F36                     	;# 
  3014     0F37                     	;# 
  3015     0FE4                     	;# 
  3016     0FE5                     	;# 
  3017     0FE6                     	;# 
  3018     0FE7                     	;# 
  3019     0FE8                     	;# 
  3020     0FE9                     	;# 
  3021     0FEA                     	;# 
  3022     0FEB                     	;# 
  3023     0FED                     	;# 
  3024     0FEE                     	;# 
  3025     0FEF                     	;# 
  3026     0000                     	;# 
  3027     0001                     	;# 
  3028     0002                     	;# 
  3029     0003                     	;# 
  3030     0004                     	;# 
  3031     0005                     	;# 
  3032     0006                     	;# 
  3033     0007                     	;# 
  3034     0008                     	;# 
  3035     0009                     	;# 
  3036     000A                     	;# 
  3037     000B                     	;# 
  3038     000C                     	;# 
  3039     000D                     	;# 
  3040     000E                     	;# 
  3041     0010                     	;# 
  3042     0011                     	;# 
  3043     0012                     	;# 
  3044     0013                     	;# 
  3045     0014                     	;# 
  3046     0015                     	;# 
  3047     0016                     	;# 
  3048     0017                     	;# 
  3049     0018                     	;# 
  3050     0018                     	;# 
  3051     0019                     	;# 
  3052     001A                     	;# 
  3053     001B                     	;# 
  3054     001C                     	;# 
  3055     001C                     	;# 
  3056     001D                     	;# 
  3057     001E                     	;# 
  3058     001F                     	;# 
  3059     008C                     	;# 
  3060     008D                     	;# 
  3061     008E                     	;# 
  3062     0090                     	;# 
  3063     0091                     	;# 
  3064     0092                     	;# 
  3065     0093                     	;# 
  3066     0094                     	;# 
  3067     0095                     	;# 
  3068     0096                     	;# 
  3069     0097                     	;# 
  3070     0098                     	;# 
  3071     0099                     	;# 
  3072     009A                     	;# 
  3073     009B                     	;# 
  3074     009C                     	;# 
  3075     009D                     	;# 
  3076     009E                     	;# 
  3077     009F                     	;# 
  3078     010C                     	;# 
  3079     010D                     	;# 
  3080     010E                     	;# 
  3081     0111                     	;# 
  3082     0112                     	;# 
  3083     0113                     	;# 
  3084     0114                     	;# 
  3085     0115                     	;# 
  3086     0116                     	;# 
  3087     0117                     	;# 
  3088     0118                     	;# 
  3089     0119                     	;# 
  3090     011A                     	;# 
  3091     011B                     	;# 
  3092     011C                     	;# 
  3093     011D                     	;# 
  3094     018C                     	;# 
  3095     018D                     	;# 
  3096     018E                     	;# 
  3097     0191                     	;# 
  3098     0191                     	;# 
  3099     0192                     	;# 
  3100     0193                     	;# 
  3101     0193                     	;# 
  3102     0194                     	;# 
  3103     0195                     	;# 
  3104     0196                     	;# 
  3105     0197                     	;# 
  3106     0199                     	;# 
  3107     0199                     	;# 
  3108     0199                     	;# 
  3109     019A                     	;# 
  3110     019A                     	;# 
  3111     019A                     	;# 
  3112     019B                     	;# 
  3113     019B                     	;# 
  3114     019B                     	;# 
  3115     019B                     	;# 
  3116     019B                     	;# 
  3117     019C                     	;# 
  3118     019C                     	;# 
  3119     019C                     	;# 
  3120     019D                     	;# 
  3121     019D                     	;# 
  3122     019D                     	;# 
  3123     019E                     	;# 
  3124     019E                     	;# 
  3125     019E                     	;# 
  3126     019F                     	;# 
  3127     019F                     	;# 
  3128     019F                     	;# 
  3129     019F                     	;# 
  3130     019F                     	;# 
  3131     020C                     	;# 
  3132     020D                     	;# 
  3133     020E                     	;# 
  3134     0210                     	;# 
  3135     0211                     	;# 
  3136     0211                     	;# 
  3137     0212                     	;# 
  3138     0212                     	;# 
  3139     0213                     	;# 
  3140     0213                     	;# 
  3141     0214                     	;# 
  3142     0214                     	;# 
  3143     0215                     	;# 
  3144     0215                     	;# 
  3145     0215                     	;# 
  3146     0215                     	;# 
  3147     0216                     	;# 
  3148     0216                     	;# 
  3149     0217                     	;# 
  3150     0217                     	;# 
  3151     021B                     	;# 
  3152     021C                     	;# 
  3153     021D                     	;# 
  3154     021E                     	;# 
  3155     021F                     	;# 
  3156     028C                     	;# 
  3157     028D                     	;# 
  3158     028E                     	;# 
  3159     0291                     	;# 
  3160     0291                     	;# 
  3161     0292                     	;# 
  3162     0293                     	;# 
  3163     0294                     	;# 
  3164     0295                     	;# 
  3165     0295                     	;# 
  3166     0296                     	;# 
  3167     0297                     	;# 
  3168     0298                     	;# 
  3169     0299                     	;# 
  3170     0299                     	;# 
  3171     029A                     	;# 
  3172     029B                     	;# 
  3173     029C                     	;# 
  3174     029E                     	;# 
  3175     029F                     	;# 
  3176     030C                     	;# 
  3177     030D                     	;# 
  3178     030E                     	;# 
  3179     0315                     	;# 
  3180     0316                     	;# 
  3181     0317                     	;# 
  3182     0318                     	;# 
  3183     0319                     	;# 
  3184     031B                     	;# 
  3185     031C                     	;# 
  3186     031D                     	;# 
  3187     031E                     	;# 
  3188     031F                     	;# 
  3189     038C                     	;# 
  3190     038D                     	;# 
  3191     038E                     	;# 
  3192     0390                     	;# 
  3193     0391                     	;# 
  3194     0392                     	;# 
  3195     0393                     	;# 
  3196     0394                     	;# 
  3197     0395                     	;# 
  3198     0396                     	;# 
  3199     0397                     	;# 
  3200     0398                     	;# 
  3201     0399                     	;# 
  3202     039D                     	;# 
  3203     039E                     	;# 
  3204     039F                     	;# 
  3205     040D                     	;# 
  3206     040F                     	;# 
  3207     040F                     	;# 
  3208     0410                     	;# 
  3209     0411                     	;# 
  3210     0412                     	;# 
  3211     0413                     	;# 
  3212     0413                     	;# 
  3213     0414                     	;# 
  3214     0414                     	;# 
  3215     0415                     	;# 
  3216     0416                     	;# 
  3217     0417                     	;# 
  3218     0418                     	;# 
  3219     041A                     	;# 
  3220     041A                     	;# 
  3221     041B                     	;# 
  3222     041B                     	;# 
  3223     041C                     	;# 
  3224     041D                     	;# 
  3225     041E                     	;# 
  3226     041F                     	;# 
  3227     048E                     	;# 
  3228     048E                     	;# 
  3229     048F                     	;# 
  3230     0490                     	;# 
  3231     0491                     	;# 
  3232     0492                     	;# 
  3233     0493                     	;# 
  3234     0493                     	;# 
  3235     0494                     	;# 
  3236     0494                     	;# 
  3237     0495                     	;# 
  3238     0496                     	;# 
  3239     0497                     	;# 
  3240     0498                     	;# 
  3241     049A                     	;# 
  3242     049A                     	;# 
  3243     049B                     	;# 
  3244     049B                     	;# 
  3245     049C                     	;# 
  3246     049D                     	;# 
  3247     049E                     	;# 
  3248     049F                     	;# 
  3249     050F                     	;# 
  3250     0510                     	;# 
  3251     0511                     	;# 
  3252     0512                     	;# 
  3253     0513                     	;# 
  3254     0514                     	;# 
  3255     0515                     	;# 
  3256     0516                     	;# 
  3257     0517                     	;# 
  3258     0518                     	;# 
  3259     0519                     	;# 
  3260     051A                     	;# 
  3261     058D                     	;# 
  3262     058E                     	;# 
  3263     058F                     	;# 
  3264     058F                     	;# 
  3265     058F                     	;# 
  3266     0590                     	;# 
  3267     0590                     	;# 
  3268     0591                     	;# 
  3269     0592                     	;# 
  3270     0592                     	;# 
  3271     0592                     	;# 
  3272     0593                     	;# 
  3273     0593                     	;# 
  3274     0594                     	;# 
  3275     0595                     	;# 
  3276     0595                     	;# 
  3277     0596                     	;# 
  3278     0597                     	;# 
  3279     0597                     	;# 
  3280     0598                     	;# 
  3281     0599                     	;# 
  3282     0599                     	;# 
  3283     0599                     	;# 
  3284     059A                     	;# 
  3285     059A                     	;# 
  3286     059E                     	;# 
  3287     059F                     	;# 
  3288     059F                     	;# 
  3289     0614                     	;# 
  3290     0614                     	;# 
  3291     0615                     	;# 
  3292     0616                     	;# 
  3293     0617                     	;# 
  3294     0617                     	;# 
  3295     0618                     	;# 
  3296     0619                     	;# 
  3297     061A                     	;# 
  3298     061A                     	;# 
  3299     061B                     	;# 
  3300     061C                     	;# 
  3301     068D                     	;# 
  3302     068E                     	;# 
  3303     068F                     	;# 
  3304     0690                     	;# 
  3305     0691                     	;# 
  3306     0692                     	;# 
  3307     0693                     	;# 
  3308     0694                     	;# 
  3309     0695                     	;# 
  3310     0696                     	;# 
  3311     0697                     	;# 
  3312     0698                     	;# 
  3313     0699                     	;# 
  3314     069A                     	;# 
  3315     069B                     	;# 
  3316     069C                     	;# 
  3317     069D                     	;# 
  3318     069E                     	;# 
  3319     069F                     	;# 
  3320     070D                     	;# 
  3321     070E                     	;# 
  3322     070F                     	;# 
  3323     0710                     	;# 
  3324     0711                     	;# 
  3325     0712                     	;# 
  3326     0713                     	;# 
  3327     0714                     	;# 
  3328     0715                     	;# 
  3329     0716                     	;# 
  3330     0717                     	;# 
  3331     0718                     	;# 
  3332     0719                     	;# 
  3333     071A                     	;# 
  3334     071B                     	;# 
  3335     071C                     	;# 
  3336     071D                     	;# 
  3337     071E                     	;# 
  3338     071F                     	;# 
  3339     078E                     	;# 
  3340     078F                     	;# 
  3341     0790                     	;# 
  3342     0791                     	;# 
  3343     0792                     	;# 
  3344     0793                     	;# 
  3345     0794                     	;# 
  3346     0795                     	;# 
  3347     0796                     	;# 
  3348     0797                     	;# 
  3349     0798                     	;# 
  3350     0799                     	;# 
  3351     079A                     	;# 
  3352     079B                     	;# 
  3353     079C                     	;# 
  3354     079D                     	;# 
  3355     079E                     	;# 
  3356     079F                     	;# 
  3357     080D                     	;# 
  3358     080E                     	;# 
  3359     080F                     	;# 
  3360     0810                     	;# 
  3361     0811                     	;# 
  3362     0812                     	;# 
  3363     0813                     	;# 
  3364     0814                     	;# 
  3365     0815                     	;# 
  3366     0816                     	;# 
  3367     0817                     	;# 
  3368     0818                     	;# 
  3369     0819                     	;# 
  3370     081A                     	;# 
  3371     081B                     	;# 
  3372     081C                     	;# 
  3373     081D                     	;# 
  3374     081E                     	;# 
  3375     081F                     	;# 
  3376     090C                     	;# 
  3377     090D                     	;# 
  3378     090E                     	;# 
  3379     090F                     	;# 
  3380     0910                     	;# 
  3381     0911                     	;# 
  3382     0912                     	;# 
  3383     0913                     	;# 
  3384     0914                     	;# 
  3385     0915                     	;# 
  3386     0916                     	;# 
  3387     0917                     	;# 
  3388     0D8E                     	;# 
  3389     0D8F                     	;# 
  3390     0D90                     	;# 
  3391     0D91                     	;# 
  3392     0D91                     	;# 
  3393     0D92                     	;# 
  3394     0D93                     	;# 
  3395     0D93                     	;# 
  3396     0D94                     	;# 
  3397     0D95                     	;# 
  3398     0D95                     	;# 
  3399     0D96                     	;# 
  3400     0D97                     	;# 
  3401     0D97                     	;# 
  3402     0D98                     	;# 
  3403     0D99                     	;# 
  3404     0D99                     	;# 
  3405     0D9A                     	;# 
  3406     0D9B                     	;# 
  3407     0D9C                     	;# 
  3408     0D9C                     	;# 
  3409     0D9D                     	;# 
  3410     0D9D                     	;# 
  3411     0D9E                     	;# 
  3412     0D9F                     	;# 
  3413     0DA0                     	;# 
  3414     0DA1                     	;# 
  3415     0DA1                     	;# 
  3416     0DA2                     	;# 
  3417     0DA3                     	;# 
  3418     0DA3                     	;# 
  3419     0DA4                     	;# 
  3420     0DA5                     	;# 
  3421     0DA5                     	;# 
  3422     0DA6                     	;# 
  3423     0DA7                     	;# 
  3424     0DA7                     	;# 
  3425     0DA8                     	;# 
  3426     0DA9                     	;# 
  3427     0DA9                     	;# 
  3428     0DAA                     	;# 
  3429     0DAB                     	;# 
  3430     0DAC                     	;# 
  3431     0DAC                     	;# 
  3432     0DAD                     	;# 
  3433     0DAD                     	;# 
  3434     0DAE                     	;# 
  3435     0DAF                     	;# 
  3436     0DB0                     	;# 
  3437     0DB1                     	;# 
  3438     0DB1                     	;# 
  3439     0DB2                     	;# 
  3440     0DB3                     	;# 
  3441     0DB3                     	;# 
  3442     0DB4                     	;# 
  3443     0DB5                     	;# 
  3444     0DB5                     	;# 
  3445     0DB6                     	;# 
  3446     0DB7                     	;# 
  3447     0DB7                     	;# 
  3448     0DB8                     	;# 
  3449     0DB9                     	;# 
  3450     0DB9                     	;# 
  3451     0DBA                     	;# 
  3452     0DBB                     	;# 
  3453     0DBC                     	;# 
  3454     0DBC                     	;# 
  3455     0DBD                     	;# 
  3456     0DBD                     	;# 
  3457     0DBE                     	;# 
  3458     0DBF                     	;# 
  3459     0DC0                     	;# 
  3460     0E0C                     	;# 
  3461     0E0D                     	;# 
  3462     0E0E                     	;# 
  3463     0E0F                     	;# 
  3464     0E10                     	;# 
  3465     0E11                     	;# 
  3466     0E12                     	;# 
  3467     0E13                     	;# 
  3468     0E14                     	;# 
  3469     0E15                     	;# 
  3470     0E15                     	;# 
  3471     0E15                     	;# 
  3472     0E16                     	;# 
  3473     0E16                     	;# 
  3474     0E16                     	;# 
  3475     0E17                     	;# 
  3476     0E17                     	;# 
  3477     0E17                     	;# 
  3478     0E18                     	;# 
  3479     0E18                     	;# 
  3480     0E18                     	;# 
  3481     0E19                     	;# 
  3482     0E1A                     	;# 
  3483     0E1B                     	;# 
  3484     0E1D                     	;# 
  3485     0E1E                     	;# 
  3486     0E1F                     	;# 
  3487     0E21                     	;# 
  3488     0E22                     	;# 
  3489     0E23                     	;# 
  3490     0E24                     	;# 
  3491     0E25                     	;# 
  3492     0E26                     	;# 
  3493     0E27                     	;# 
  3494     0E28                     	;# 
  3495     0E29                     	;# 
  3496     0E2D                     	;# 
  3497     0E2E                     	;# 
  3498     0E2F                     	;# 
  3499     0E30                     	;# 
  3500     0E31                     	;# 
  3501     0E32                     	;# 
  3502     0E35                     	;# 
  3503     0E36                     	;# 
  3504     0E37                     	;# 
  3505     0E38                     	;# 
  3506     0E39                     	;# 
  3507     0E3A                     	;# 
  3508     0E3B                     	;# 
  3509     0E3C                     	;# 
  3510     0E3D                     	;# 
  3511     0E3E                     	;# 
  3512     0E90                     	;# 
  3513     0E91                     	;# 
  3514     0E92                     	;# 
  3515     0E93                     	;# 
  3516     0E94                     	;# 
  3517     0E95                     	;# 
  3518     0E96                     	;# 
  3519     0E97                     	;# 
  3520     0E98                     	;# 
  3521     0E99                     	;# 
  3522     0E9A                     	;# 
  3523     0E9B                     	;# 
  3524     0E9C                     	;# 
  3525     0E9D                     	;# 
  3526     0E9E                     	;# 
  3527     0E9F                     	;# 
  3528     0EA0                     	;# 
  3529     0EA1                     	;# 
  3530     0EA2                     	;# 
  3531     0EA3                     	;# 
  3532     0EA4                     	;# 
  3533     0EA5                     	;# 
  3534     0EA6                     	;# 
  3535     0EA7                     	;# 
  3536     0F0F                     	;# 
  3537     0F10                     	;# 
  3538     0F11                     	;# 
  3539     0F12                     	;# 
  3540     0F13                     	;# 
  3541     0F14                     	;# 
  3542     0F15                     	;# 
  3543     0F16                     	;# 
  3544     0F17                     	;# 
  3545     0F18                     	;# 
  3546     0F19                     	;# 
  3547     0F1A                     	;# 
  3548     0F1B                     	;# 
  3549     0F1C                     	;# 
  3550     0F1D                     	;# 
  3551     0F1E                     	;# 
  3552     0F1F                     	;# 
  3553     0F20                     	;# 
  3554     0F21                     	;# 
  3555     0F22                     	;# 
  3556     0F23                     	;# 
  3557     0F24                     	;# 
  3558     0F25                     	;# 
  3559     0F26                     	;# 
  3560     0F27                     	;# 
  3561     0F28                     	;# 
  3562     0F29                     	;# 
  3563     0F2A                     	;# 
  3564     0F2B                     	;# 
  3565     0F2C                     	;# 
  3566     0F2D                     	;# 
  3567     0F2E                     	;# 
  3568     0F2F                     	;# 
  3569     0F30                     	;# 
  3570     0F31                     	;# 
  3571     0F32                     	;# 
  3572     0F33                     	;# 
  3573     0F34                     	;# 
  3574     0F35                     	;# 
  3575     0F36                     	;# 
  3576     0F37                     	;# 
  3577     0FE4                     	;# 
  3578     0FE5                     	;# 
  3579     0FE6                     	;# 
  3580     0FE7                     	;# 
  3581     0FE8                     	;# 
  3582     0FE9                     	;# 
  3583     0FEA                     	;# 
  3584     0FEB                     	;# 
  3585     0FED                     	;# 
  3586     0FEE                     	;# 
  3587     0FEF                     	;# 
  3588     0000                     	;# 
  3589     0001                     	;# 
  3590     0002                     	;# 
  3591     0003                     	;# 
  3592     0004                     	;# 
  3593     0005                     	;# 
  3594     0006                     	;# 
  3595     0007                     	;# 
  3596     0008                     	;# 
  3597     0009                     	;# 
  3598     000A                     	;# 
  3599     000B                     	;# 
  3600     000C                     	;# 
  3601     000D                     	;# 
  3602     000E                     	;# 
  3603     0010                     	;# 
  3604     0011                     	;# 
  3605     0012                     	;# 
  3606     0013                     	;# 
  3607     0014                     	;# 
  3608     0015                     	;# 
  3609     0016                     	;# 
  3610     0017                     	;# 
  3611     0018                     	;# 
  3612     0018                     	;# 
  3613     0019                     	;# 
  3614     001A                     	;# 
  3615     001B                     	;# 
  3616     001C                     	;# 
  3617     001C                     	;# 
  3618     001D                     	;# 
  3619     001E                     	;# 
  3620     001F                     	;# 
  3621     008C                     	;# 
  3622     008D                     	;# 
  3623     008E                     	;# 
  3624     0090                     	;# 
  3625     0091                     	;# 
  3626     0092                     	;# 
  3627     0093                     	;# 
  3628     0094                     	;# 
  3629     0095                     	;# 
  3630     0096                     	;# 
  3631     0097                     	;# 
  3632     0098                     	;# 
  3633     0099                     	;# 
  3634     009A                     	;# 
  3635     009B                     	;# 
  3636     009C                     	;# 
  3637     009D                     	;# 
  3638     009E                     	;# 
  3639     009F                     	;# 
  3640     010C                     	;# 
  3641     010D                     	;# 
  3642     010E                     	;# 
  3643     0111                     	;# 
  3644     0112                     	;# 
  3645     0113                     	;# 
  3646     0114                     	;# 
  3647     0115                     	;# 
  3648     0116                     	;# 
  3649     0117                     	;# 
  3650     0118                     	;# 
  3651     0119                     	;# 
  3652     011A                     	;# 
  3653     011B                     	;# 
  3654     011C                     	;# 
  3655     011D                     	;# 
  3656     018C                     	;# 
  3657     018D                     	;# 
  3658     018E                     	;# 
  3659     0191                     	;# 
  3660     0191                     	;# 
  3661     0192                     	;# 
  3662     0193                     	;# 
  3663     0193                     	;# 
  3664     0194                     	;# 
  3665     0195                     	;# 
  3666     0196                     	;# 
  3667     0197                     	;# 
  3668     0199                     	;# 
  3669     0199                     	;# 
  3670     0199                     	;# 
  3671     019A                     	;# 
  3672     019A                     	;# 
  3673     019A                     	;# 
  3674     019B                     	;# 
  3675     019B                     	;# 
  3676     019B                     	;# 
  3677     019B                     	;# 
  3678     019B                     	;# 
  3679     019C                     	;# 
  3680     019C                     	;# 
  3681     019C                     	;# 
  3682     019D                     	;# 
  3683     019D                     	;# 
  3684     019D                     	;# 
  3685     019E                     	;# 
  3686     019E                     	;# 
  3687     019E                     	;# 
  3688     019F                     	;# 
  3689     019F                     	;# 
  3690     019F                     	;# 
  3691     019F                     	;# 
  3692     019F                     	;# 
  3693     020C                     	;# 
  3694     020D                     	;# 
  3695     020E                     	;# 
  3696     0210                     	;# 
  3697     0211                     	;# 
  3698     0211                     	;# 
  3699     0212                     	;# 
  3700     0212                     	;# 
  3701     0213                     	;# 
  3702     0213                     	;# 
  3703     0214                     	;# 
  3704     0214                     	;# 
  3705     0215                     	;# 
  3706     0215                     	;# 
  3707     0215                     	;# 
  3708     0215                     	;# 
  3709     0216                     	;# 
  3710     0216                     	;# 
  3711     0217                     	;# 
  3712     0217                     	;# 
  3713     021B                     	;# 
  3714     021C                     	;# 
  3715     021D                     	;# 
  3716     021E                     	;# 
  3717     021F                     	;# 
  3718     028C                     	;# 
  3719     028D                     	;# 
  3720     028E                     	;# 
  3721     0291                     	;# 
  3722     0291                     	;# 
  3723     0292                     	;# 
  3724     0293                     	;# 
  3725     0294                     	;# 
  3726     0295                     	;# 
  3727     0295                     	;# 
  3728     0296                     	;# 
  3729     0297                     	;# 
  3730     0298                     	;# 
  3731     0299                     	;# 
  3732     0299                     	;# 
  3733     029A                     	;# 
  3734     029B                     	;# 
  3735     029C                     	;# 
  3736     029E                     	;# 
  3737     029F                     	;# 
  3738     030C                     	;# 
  3739     030D                     	;# 
  3740     030E                     	;# 
  3741     0315                     	;# 
  3742     0316                     	;# 
  3743     0317                     	;# 
  3744     0318                     	;# 
  3745     0319                     	;# 
  3746     031B                     	;# 
  3747     031C                     	;# 
  3748     031D                     	;# 
  3749     031E                     	;# 
  3750     031F                     	;# 
  3751     038C                     	;# 
  3752     038D                     	;# 
  3753     038E                     	;# 
  3754     0390                     	;# 
  3755     0391                     	;# 
  3756     0392                     	;# 
  3757     0393                     	;# 
  3758     0394                     	;# 
  3759     0395                     	;# 
  3760     0396                     	;# 
  3761     0397                     	;# 
  3762     0398                     	;# 
  3763     0399                     	;# 
  3764     039D                     	;# 
  3765     039E                     	;# 
  3766     039F                     	;# 
  3767     040D                     	;# 
  3768     040F                     	;# 
  3769     040F                     	;# 
  3770     0410                     	;# 
  3771     0411                     	;# 
  3772     0412                     	;# 
  3773     0413                     	;# 
  3774     0413                     	;# 
  3775     0414                     	;# 
  3776     0414                     	;# 
  3777     0415                     	;# 
  3778     0416                     	;# 
  3779     0417                     	;# 
  3780     0418                     	;# 
  3781     041A                     	;# 
  3782     041A                     	;# 
  3783     041B                     	;# 
  3784     041B                     	;# 
  3785     041C                     	;# 
  3786     041D                     	;# 
  3787     041E                     	;# 
  3788     041F                     	;# 
  3789     048E                     	;# 
  3790     048E                     	;# 
  3791     048F                     	;# 
  3792     0490                     	;# 
  3793     0491                     	;# 
  3794     0492                     	;# 
  3795     0493                     	;# 
  3796     0493                     	;# 
  3797     0494                     	;# 
  3798     0494                     	;# 
  3799     0495                     	;# 
  3800     0496                     	;# 
  3801     0497                     	;# 
  3802     0498                     	;# 
  3803     049A                     	;# 
  3804     049A                     	;# 
  3805     049B                     	;# 
  3806     049B                     	;# 
  3807     049C                     	;# 
  3808     049D                     	;# 
  3809     049E                     	;# 
  3810     049F                     	;# 
  3811     050F                     	;# 
  3812     0510                     	;# 
  3813     0511                     	;# 
  3814     0512                     	;# 
  3815     0513                     	;# 
  3816     0514                     	;# 
  3817     0515                     	;# 
  3818     0516                     	;# 
  3819     0517                     	;# 
  3820     0518                     	;# 
  3821     0519                     	;# 
  3822     051A                     	;# 
  3823     058D                     	;# 
  3824     058E                     	;# 
  3825     058F                     	;# 
  3826     058F                     	;# 
  3827     058F                     	;# 
  3828     0590                     	;# 
  3829     0590                     	;# 
  3830     0591                     	;# 
  3831     0592                     	;# 
  3832     0592                     	;# 
  3833     0592                     	;# 
  3834     0593                     	;# 
  3835     0593                     	;# 
  3836     0594                     	;# 
  3837     0595                     	;# 
  3838     0595                     	;# 
  3839     0596                     	;# 
  3840     0597                     	;# 
  3841     0597                     	;# 
  3842     0598                     	;# 
  3843     0599                     	;# 
  3844     0599                     	;# 
  3845     0599                     	;# 
  3846     059A                     	;# 
  3847     059A                     	;# 
  3848     059E                     	;# 
  3849     059F                     	;# 
  3850     059F                     	;# 
  3851     0614                     	;# 
  3852     0614                     	;# 
  3853     0615                     	;# 
  3854     0616                     	;# 
  3855     0617                     	;# 
  3856     0617                     	;# 
  3857     0618                     	;# 
  3858     0619                     	;# 
  3859     061A                     	;# 
  3860     061A                     	;# 
  3861     061B                     	;# 
  3862     061C                     	;# 
  3863     068D                     	;# 
  3864     068E                     	;# 
  3865     068F                     	;# 
  3866     0690                     	;# 
  3867     0691                     	;# 
  3868     0692                     	;# 
  3869     0693                     	;# 
  3870     0694                     	;# 
  3871     0695                     	;# 
  3872     0696                     	;# 
  3873     0697                     	;# 
  3874     0698                     	;# 
  3875     0699                     	;# 
  3876     069A                     	;# 
  3877     069B                     	;# 
  3878     069C                     	;# 
  3879     069D                     	;# 
  3880     069E                     	;# 
  3881     069F                     	;# 
  3882     070D                     	;# 
  3883     070E                     	;# 
  3884     070F                     	;# 
  3885     0710                     	;# 
  3886     0711                     	;# 
  3887     0712                     	;# 
  3888     0713                     	;# 
  3889     0714                     	;# 
  3890     0715                     	;# 
  3891     0716                     	;# 
  3892     0717                     	;# 
  3893     0718                     	;# 
  3894     0719                     	;# 
  3895     071A                     	;# 
  3896     071B                     	;# 
  3897     071C                     	;# 
  3898     071D                     	;# 
  3899     071E                     	;# 
  3900     071F                     	;# 
  3901     078E                     	;# 
  3902     078F                     	;# 
  3903     0790                     	;# 
  3904     0791                     	;# 
  3905     0792                     	;# 
  3906     0793                     	;# 
  3907     0794                     	;# 
  3908     0795                     	;# 
  3909     0796                     	;# 
  3910     0797                     	;# 
  3911     0798                     	;# 
  3912     0799                     	;# 
  3913     079A                     	;# 
  3914     079B                     	;# 
  3915     079C                     	;# 
  3916     079D                     	;# 
  3917     079E                     	;# 
  3918     079F                     	;# 
  3919     080D                     	;# 
  3920     080E                     	;# 
  3921     080F                     	;# 
  3922     0810                     	;# 
  3923     0811                     	;# 
  3924     0812                     	;# 
  3925     0813                     	;# 
  3926     0814                     	;# 
  3927     0815                     	;# 
  3928     0816                     	;# 
  3929     0817                     	;# 
  3930     0818                     	;# 
  3931     0819                     	;# 
  3932     081A                     	;# 
  3933     081B                     	;# 
  3934     081C                     	;# 
  3935     081D                     	;# 
  3936     081E                     	;# 
  3937     081F                     	;# 
  3938     090C                     	;# 
  3939     090D                     	;# 
  3940     090E                     	;# 
  3941     090F                     	;# 
  3942     0910                     	;# 
  3943     0911                     	;# 
  3944     0912                     	;# 
  3945     0913                     	;# 
  3946     0914                     	;# 
  3947     0915                     	;# 
  3948     0916                     	;# 
  3949     0917                     	;# 
  3950     0D8E                     	;# 
  3951     0D8F                     	;# 
  3952     0D90                     	;# 
  3953     0D91                     	;# 
  3954     0D91                     	;# 
  3955     0D92                     	;# 
  3956     0D93                     	;# 
  3957     0D93                     	;# 
  3958     0D94                     	;# 
  3959     0D95                     	;# 
  3960     0D95                     	;# 
  3961     0D96                     	;# 
  3962     0D97                     	;# 
  3963     0D97                     	;# 
  3964     0D98                     	;# 
  3965     0D99                     	;# 
  3966     0D99                     	;# 
  3967     0D9A                     	;# 
  3968     0D9B                     	;# 
  3969     0D9C                     	;# 
  3970     0D9C                     	;# 
  3971     0D9D                     	;# 
  3972     0D9D                     	;# 
  3973     0D9E                     	;# 
  3974     0D9F                     	;# 
  3975     0DA0                     	;# 
  3976     0DA1                     	;# 
  3977     0DA1                     	;# 
  3978     0DA2                     	;# 
  3979     0DA3                     	;# 
  3980     0DA3                     	;# 
  3981     0DA4                     	;# 
  3982     0DA5                     	;# 
  3983     0DA5                     	;# 
  3984     0DA6                     	;# 
  3985     0DA7                     	;# 
  3986     0DA7                     	;# 
  3987     0DA8                     	;# 
  3988     0DA9                     	;# 
  3989     0DA9                     	;# 
  3990     0DAA                     	;# 
  3991     0DAB                     	;# 
  3992     0DAC                     	;# 
  3993     0DAC                     	;# 
  3994     0DAD                     	;# 
  3995     0DAD                     	;# 
  3996     0DAE                     	;# 
  3997     0DAF                     	;# 
  3998     0DB0                     	;# 
  3999     0DB1                     	;# 
  4000     0DB1                     	;# 
  4001     0DB2                     	;# 
  4002     0DB3                     	;# 
  4003     0DB3                     	;# 
  4004     0DB4                     	;# 
  4005     0DB5                     	;# 
  4006     0DB5                     	;# 
  4007     0DB6                     	;# 
  4008     0DB7                     	;# 
  4009     0DB7                     	;# 
  4010     0DB8                     	;# 
  4011     0DB9                     	;# 
  4012     0DB9                     	;# 
  4013     0DBA                     	;# 
  4014     0DBB                     	;# 
  4015     0DBC                     	;# 
  4016     0DBC                     	;# 
  4017     0DBD                     	;# 
  4018     0DBD                     	;# 
  4019     0DBE                     	;# 
  4020     0DBF                     	;# 
  4021     0DC0                     	;# 
  4022     0E0C                     	;# 
  4023     0E0D                     	;# 
  4024     0E0E                     	;# 
  4025     0E0F                     	;# 
  4026     0E10                     	;# 
  4027     0E11                     	;# 
  4028     0E12                     	;# 
  4029     0E13                     	;# 
  4030     0E14                     	;# 
  4031     0E15                     	;# 
  4032     0E15                     	;# 
  4033     0E15                     	;# 
  4034     0E16                     	;# 
  4035     0E16                     	;# 
  4036     0E16                     	;# 
  4037     0E17                     	;# 
  4038     0E17                     	;# 
  4039     0E17                     	;# 
  4040     0E18                     	;# 
  4041     0E18                     	;# 
  4042     0E18                     	;# 
  4043     0E19                     	;# 
  4044     0E1A                     	;# 
  4045     0E1B                     	;# 
  4046     0E1D                     	;# 
  4047     0E1E                     	;# 
  4048     0E1F                     	;# 
  4049     0E21                     	;# 
  4050     0E22                     	;# 
  4051     0E23                     	;# 
  4052     0E24                     	;# 
  4053     0E25                     	;# 
  4054     0E26                     	;# 
  4055     0E27                     	;# 
  4056     0E28                     	;# 
  4057     0E29                     	;# 
  4058     0E2D                     	;# 
  4059     0E2E                     	;# 
  4060     0E2F                     	;# 
  4061     0E30                     	;# 
  4062     0E31                     	;# 
  4063     0E32                     	;# 
  4064     0E35                     	;# 
  4065     0E36                     	;# 
  4066     0E37                     	;# 
  4067     0E38                     	;# 
  4068     0E39                     	;# 
  4069     0E3A                     	;# 
  4070     0E3B                     	;# 
  4071     0E3C                     	;# 
  4072     0E3D                     	;# 
  4073     0E3E                     	;# 
  4074     0E90                     	;# 
  4075     0E91                     	;# 
  4076     0E92                     	;# 
  4077     0E93                     	;# 
  4078     0E94                     	;# 
  4079     0E95                     	;# 
  4080     0E96                     	;# 
  4081     0E97                     	;# 
  4082     0E98                     	;# 
  4083     0E99                     	;# 
  4084     0E9A                     	;# 
  4085     0E9B                     	;# 
  4086     0E9C                     	;# 
  4087     0E9D                     	;# 
  4088     0E9E                     	;# 
  4089     0E9F                     	;# 
  4090     0EA0                     	;# 
  4091     0EA1                     	;# 
  4092     0EA2                     	;# 
  4093     0EA3                     	;# 
  4094     0EA4                     	;# 
  4095     0EA5                     	;# 
  4096     0EA6                     	;# 
  4097     0EA7                     	;# 
  4098     0F0F                     	;# 
  4099     0F10                     	;# 
  4100     0F11                     	;# 
  4101     0F12                     	;# 
  4102     0F13                     	;# 
  4103     0F14                     	;# 
  4104     0F15                     	;# 
  4105     0F16                     	;# 
  4106     0F17                     	;# 
  4107     0F18                     	;# 
  4108     0F19                     	;# 
  4109     0F1A                     	;# 
  4110     0F1B                     	;# 
  4111     0F1C                     	;# 
  4112     0F1D                     	;# 
  4113     0F1E                     	;# 
  4114     0F1F                     	;# 
  4115     0F20                     	;# 
  4116     0F21                     	;# 
  4117     0F22                     	;# 
  4118     0F23                     	;# 
  4119     0F24                     	;# 
  4120     0F25                     	;# 
  4121     0F26                     	;# 
  4122     0F27                     	;# 
  4123     0F28                     	;# 
  4124     0F29                     	;# 
  4125     0F2A                     	;# 
  4126     0F2B                     	;# 
  4127     0F2C                     	;# 
  4128     0F2D                     	;# 
  4129     0F2E                     	;# 
  4130     0F2F                     	;# 
  4131     0F30                     	;# 
  4132     0F31                     	;# 
  4133     0F32                     	;# 
  4134     0F33                     	;# 
  4135     0F34                     	;# 
  4136     0F35                     	;# 
  4137     0F36                     	;# 
  4138     0F37                     	;# 
  4139     0FE4                     	;# 
  4140     0FE5                     	;# 
  4141     0FE6                     	;# 
  4142     0FE7                     	;# 
  4143     0FE8                     	;# 
  4144     0FE9                     	;# 
  4145     0FEA                     	;# 
  4146     0FEB                     	;# 
  4147     0FED                     	;# 
  4148     0FEE                     	;# 
  4149     0FEF                     	;# 
  4150     0000                     	;# 
  4151     0001                     	;# 
  4152     0002                     	;# 
  4153     0003                     	;# 
  4154     0004                     	;# 
  4155     0005                     	;# 
  4156     0006                     	;# 
  4157     0007                     	;# 
  4158     0008                     	;# 
  4159     0009                     	;# 
  4160     000A                     	;# 
  4161     000B                     	;# 
  4162     000C                     	;# 
  4163     000D                     	;# 
  4164     000E                     	;# 
  4165     0010                     	;# 
  4166     0011                     	;# 
  4167     0012                     	;# 
  4168     0013                     	;# 
  4169     0014                     	;# 
  4170     0015                     	;# 
  4171     0016                     	;# 
  4172     0017                     	;# 
  4173     0018                     	;# 
  4174     0018                     	;# 
  4175     0019                     	;# 
  4176     001A                     	;# 
  4177     001B                     	;# 
  4178     001C                     	;# 
  4179     001C                     	;# 
  4180     001D                     	;# 
  4181     001E                     	;# 
  4182     001F                     	;# 
  4183     008C                     	;# 
  4184     008D                     	;# 
  4185     008E                     	;# 
  4186     0090                     	;# 
  4187     0091                     	;# 
  4188     0092                     	;# 
  4189     0093                     	;# 
  4190     0094                     	;# 
  4191     0095                     	;# 
  4192     0096                     	;# 
  4193     0097                     	;# 
  4194     0098                     	;# 
  4195     0099                     	;# 
  4196     009A                     	;# 
  4197     009B                     	;# 
  4198     009C                     	;# 
  4199     009D                     	;# 
  4200     009E                     	;# 
  4201     009F                     	;# 
  4202     010C                     	;# 
  4203     010D                     	;# 
  4204     010E                     	;# 
  4205     0111                     	;# 
  4206     0112                     	;# 
  4207     0113                     	;# 
  4208     0114                     	;# 
  4209     0115                     	;# 
  4210     0116                     	;# 
  4211     0117                     	;# 
  4212     0118                     	;# 
  4213     0119                     	;# 
  4214     011A                     	;# 
  4215     011B                     	;# 
  4216     011C                     	;# 
  4217     011D                     	;# 
  4218     018C                     	;# 
  4219     018D                     	;# 
  4220     018E                     	;# 
  4221     0191                     	;# 
  4222     0191                     	;# 
  4223     0192                     	;# 
  4224     0193                     	;# 
  4225     0193                     	;# 
  4226     0194                     	;# 
  4227     0195                     	;# 
  4228     0196                     	;# 
  4229     0197                     	;# 
  4230     0199                     	;# 
  4231     0199                     	;# 
  4232     0199                     	;# 
  4233     019A                     	;# 
  4234     019A                     	;# 
  4235     019A                     	;# 
  4236     019B                     	;# 
  4237     019B                     	;# 
  4238     019B                     	;# 
  4239     019B                     	;# 
  4240     019B                     	;# 
  4241     019C                     	;# 
  4242     019C                     	;# 
  4243     019C                     	;# 
  4244     019D                     	;# 
  4245     019D                     	;# 
  4246     019D                     	;# 
  4247     019E                     	;# 
  4248     019E                     	;# 
  4249     019E                     	;# 
  4250     019F                     	;# 
  4251     019F                     	;# 
  4252     019F                     	;# 
  4253     019F                     	;# 
  4254     019F                     	;# 
  4255     020C                     	;# 
  4256     020D                     	;# 
  4257     020E                     	;# 
  4258     0210                     	;# 
  4259     0211                     	;# 
  4260     0211                     	;# 
  4261     0212                     	;# 
  4262     0212                     	;# 
  4263     0213                     	;# 
  4264     0213                     	;# 
  4265     0214                     	;# 
  4266     0214                     	;# 
  4267     0215                     	;# 
  4268     0215                     	;# 
  4269     0215                     	;# 
  4270     0215                     	;# 
  4271     0216                     	;# 
  4272     0216                     	;# 
  4273     0217                     	;# 
  4274     0217                     	;# 
  4275     021B                     	;# 
  4276     021C                     	;# 
  4277     021D                     	;# 
  4278     021E                     	;# 
  4279     021F                     	;# 
  4280     028C                     	;# 
  4281     028D                     	;# 
  4282     028E                     	;# 
  4283     0291                     	;# 
  4284     0291                     	;# 
  4285     0292                     	;# 
  4286     0293                     	;# 
  4287     0294                     	;# 
  4288     0295                     	;# 
  4289     0295                     	;# 
  4290     0296                     	;# 
  4291     0297                     	;# 
  4292     0298                     	;# 
  4293     0299                     	;# 
  4294     0299                     	;# 
  4295     029A                     	;# 
  4296     029B                     	;# 
  4297     029C                     	;# 
  4298     029E                     	;# 
  4299     029F                     	;# 
  4300     030C                     	;# 
  4301     030D                     	;# 
  4302     030E                     	;# 
  4303     0315                     	;# 
  4304     0316                     	;# 
  4305     0317                     	;# 
  4306     0318                     	;# 
  4307     0319                     	;# 
  4308     031B                     	;# 
  4309     031C                     	;# 
  4310     031D                     	;# 
  4311     031E                     	;# 
  4312     031F                     	;# 
  4313     038C                     	;# 
  4314     038D                     	;# 
  4315     038E                     	;# 
  4316     0390                     	;# 
  4317     0391                     	;# 
  4318     0392                     	;# 
  4319     0393                     	;# 
  4320     0394                     	;# 
  4321     0395                     	;# 
  4322     0396                     	;# 
  4323     0397                     	;# 
  4324     0398                     	;# 
  4325     0399                     	;# 
  4326     039D                     	;# 
  4327     039E                     	;# 
  4328     039F                     	;# 
  4329     040D                     	;# 
  4330     040F                     	;# 
  4331     040F                     	;# 
  4332     0410                     	;# 
  4333     0411                     	;# 
  4334     0412                     	;# 
  4335     0413                     	;# 
  4336     0413                     	;# 
  4337     0414                     	;# 
  4338     0414                     	;# 
  4339     0415                     	;# 
  4340     0416                     	;# 
  4341     0417                     	;# 
  4342     0418                     	;# 
  4343     041A                     	;# 
  4344     041A                     	;# 
  4345     041B                     	;# 
  4346     041B                     	;# 
  4347     041C                     	;# 
  4348     041D                     	;# 
  4349     041E                     	;# 
  4350     041F                     	;# 
  4351     048E                     	;# 
  4352     048E                     	;# 
  4353     048F                     	;# 
  4354     0490                     	;# 
  4355     0491                     	;# 
  4356     0492                     	;# 
  4357     0493                     	;# 
  4358     0493                     	;# 
  4359     0494                     	;# 
  4360     0494                     	;# 
  4361     0495                     	;# 
  4362     0496                     	;# 
  4363     0497                     	;# 
  4364     0498                     	;# 
  4365     049A                     	;# 
  4366     049A                     	;# 
  4367     049B                     	;# 
  4368     049B                     	;# 
  4369     049C                     	;# 
  4370     049D                     	;# 
  4371     049E                     	;# 
  4372     049F                     	;# 
  4373     050F                     	;# 
  4374     0510                     	;# 
  4375     0511                     	;# 
  4376     0512                     	;# 
  4377     0513                     	;# 
  4378     0514                     	;# 
  4379     0515                     	;# 
  4380     0516                     	;# 
  4381     0517                     	;# 
  4382     0518                     	;# 
  4383     0519                     	;# 
  4384     051A                     	;# 
  4385     058D                     	;# 
  4386     058E                     	;# 
  4387     058F                     	;# 
  4388     058F                     	;# 
  4389     058F                     	;# 
  4390     0590                     	;# 
  4391     0590                     	;# 
  4392     0591                     	;# 
  4393     0592                     	;# 
  4394     0592                     	;# 
  4395     0592                     	;# 
  4396     0593                     	;# 
  4397     0593                     	;# 
  4398     0594                     	;# 
  4399     0595                     	;# 
  4400     0595                     	;# 
  4401     0596                     	;# 
  4402     0597                     	;# 
  4403     0597                     	;# 
  4404     0598                     	;# 
  4405     0599                     	;# 
  4406     0599                     	;# 
  4407     0599                     	;# 
  4408     059A                     	;# 
  4409     059A                     	;# 
  4410     059E                     	;# 
  4411     059F                     	;# 
  4412     059F                     	;# 
  4413     0614                     	;# 
  4414     0614                     	;# 
  4415     0615                     	;# 
  4416     0616                     	;# 
  4417     0617                     	;# 
  4418     0617                     	;# 
  4419     0618                     	;# 
  4420     0619                     	;# 
  4421     061A                     	;# 
  4422     061A                     	;# 
  4423     061B                     	;# 
  4424     061C                     	;# 
  4425     068D                     	;# 
  4426     068E                     	;# 
  4427     068F                     	;# 
  4428     0690                     	;# 
  4429     0691                     	;# 
  4430     0692                     	;# 
  4431     0693                     	;# 
  4432     0694                     	;# 
  4433     0695                     	;# 
  4434     0696                     	;# 
  4435     0697                     	;# 
  4436     0698                     	;# 
  4437     0699                     	;# 
  4438     069A                     	;# 
  4439     069B                     	;# 
  4440     069C                     	;# 
  4441     069D                     	;# 
  4442     069E                     	;# 
  4443     069F                     	;# 
  4444     070D                     	;# 
  4445     070E                     	;# 
  4446     070F                     	;# 
  4447     0710                     	;# 
  4448     0711                     	;# 
  4449     0712                     	;# 
  4450     0713                     	;# 
  4451     0714                     	;# 
  4452     0715                     	;# 
  4453     0716                     	;# 
  4454     0717                     	;# 
  4455     0718                     	;# 
  4456     0719                     	;# 
  4457     071A                     	;# 
  4458     071B                     	;# 
  4459     071C                     	;# 
  4460     071D                     	;# 
  4461     071E                     	;# 
  4462     071F                     	;# 
  4463     078E                     	;# 
  4464     078F                     	;# 
  4465     0790                     	;# 
  4466     0791                     	;# 
  4467     0792                     	;# 
  4468     0793                     	;# 
  4469     0794                     	;# 
  4470     0795                     	;# 
  4471     0796                     	;# 
  4472     0797                     	;# 
  4473     0798                     	;# 
  4474     0799                     	;# 
  4475     079A                     	;# 
  4476     079B                     	;# 
  4477     079C                     	;# 
  4478     079D                     	;# 
  4479     079E                     	;# 
  4480     079F                     	;# 
  4481     080D                     	;# 
  4482     080E                     	;# 
  4483     080F                     	;# 
  4484     0810                     	;# 
  4485     0811                     	;# 
  4486     0812                     	;# 
  4487     0813                     	;# 
  4488     0814                     	;# 
  4489     0815                     	;# 
  4490     0816                     	;# 
  4491     0817                     	;# 
  4492     0818                     	;# 
  4493     0819                     	;# 
  4494     081A                     	;# 
  4495     081B                     	;# 
  4496     081C                     	;# 
  4497     081D                     	;# 
  4498     081E                     	;# 
  4499     081F                     	;# 
  4500     090C                     	;# 
  4501     090D                     	;# 
  4502     090E                     	;# 
  4503     090F                     	;# 
  4504     0910                     	;# 
  4505     0911                     	;# 
  4506     0912                     	;# 
  4507     0913                     	;# 
  4508     0914                     	;# 
  4509     0915                     	;# 
  4510     0916                     	;# 
  4511     0917                     	;# 
  4512     0D8E                     	;# 
  4513     0D8F                     	;# 
  4514     0D90                     	;# 
  4515     0D91                     	;# 
  4516     0D91                     	;# 
  4517     0D92                     	;# 
  4518     0D93                     	;# 
  4519     0D93                     	;# 
  4520     0D94                     	;# 
  4521     0D95                     	;# 
  4522     0D95                     	;# 
  4523     0D96                     	;# 
  4524     0D97                     	;# 
  4525     0D97                     	;# 
  4526     0D98                     	;# 
  4527     0D99                     	;# 
  4528     0D99                     	;# 
  4529     0D9A                     	;# 
  4530     0D9B                     	;# 
  4531     0D9C                     	;# 
  4532     0D9C                     	;# 
  4533     0D9D                     	;# 
  4534     0D9D                     	;# 
  4535     0D9E                     	;# 
  4536     0D9F                     	;# 
  4537     0DA0                     	;# 
  4538     0DA1                     	;# 
  4539     0DA1                     	;# 
  4540     0DA2                     	;# 
  4541     0DA3                     	;# 
  4542     0DA3                     	;# 
  4543     0DA4                     	;# 
  4544     0DA5                     	;# 
  4545     0DA5                     	;# 
  4546     0DA6                     	;# 
  4547     0DA7                     	;# 
  4548     0DA7                     	;# 
  4549     0DA8                     	;# 
  4550     0DA9                     	;# 
  4551     0DA9                     	;# 
  4552     0DAA                     	;# 
  4553     0DAB                     	;# 
  4554     0DAC                     	;# 
  4555     0DAC                     	;# 
  4556     0DAD                     	;# 
  4557     0DAD                     	;# 
  4558     0DAE                     	;# 
  4559     0DAF                     	;# 
  4560     0DB0                     	;# 
  4561     0DB1                     	;# 
  4562     0DB1                     	;# 
  4563     0DB2                     	;# 
  4564     0DB3                     	;# 
  4565     0DB3                     	;# 
  4566     0DB4                     	;# 
  4567     0DB5                     	;# 
  4568     0DB5                     	;# 
  4569     0DB6                     	;# 
  4570     0DB7                     	;# 
  4571     0DB7                     	;# 
  4572     0DB8                     	;# 
  4573     0DB9                     	;# 
  4574     0DB9                     	;# 
  4575     0DBA                     	;# 
  4576     0DBB                     	;# 
  4577     0DBC                     	;# 
  4578     0DBC                     	;# 
  4579     0DBD                     	;# 
  4580     0DBD                     	;# 
  4581     0DBE                     	;# 
  4582     0DBF                     	;# 
  4583     0DC0                     	;# 
  4584     0E0C                     	;# 
  4585     0E0D                     	;# 
  4586     0E0E                     	;# 
  4587     0E0F                     	;# 
  4588     0E10                     	;# 
  4589     0E11                     	;# 
  4590     0E12                     	;# 
  4591     0E13                     	;# 
  4592     0E14                     	;# 
  4593     0E15                     	;# 
  4594     0E15                     	;# 
  4595     0E15                     	;# 
  4596     0E16                     	;# 
  4597     0E16                     	;# 
  4598     0E16                     	;# 
  4599     0E17                     	;# 
  4600     0E17                     	;# 
  4601     0E17                     	;# 
  4602     0E18                     	;# 
  4603     0E18                     	;# 
  4604     0E18                     	;# 
  4605     0E19                     	;# 
  4606     0E1A                     	;# 
  4607     0E1B                     	;# 
  4608     0E1D                     	;# 
  4609     0E1E                     	;# 
  4610     0E1F                     	;# 
  4611     0E21                     	;# 
  4612     0E22                     	;# 
  4613     0E23                     	;# 
  4614     0E24                     	;# 
  4615     0E25                     	;# 
  4616     0E26                     	;# 
  4617     0E27                     	;# 
  4618     0E28                     	;# 
  4619     0E29                     	;# 
  4620     0E2D                     	;# 
  4621     0E2E                     	;# 
  4622     0E2F                     	;# 
  4623     0E30                     	;# 
  4624     0E31                     	;# 
  4625     0E32                     	;# 
  4626     0E35                     	;# 
  4627     0E36                     	;# 
  4628     0E37                     	;# 
  4629     0E38                     	;# 
  4630     0E39                     	;# 
  4631     0E3A                     	;# 
  4632     0E3B                     	;# 
  4633     0E3C                     	;# 
  4634     0E3D                     	;# 
  4635     0E3E                     	;# 
  4636     0E90                     	;# 
  4637     0E91                     	;# 
  4638     0E92                     	;# 
  4639     0E93                     	;# 
  4640     0E94                     	;# 
  4641     0E95                     	;# 
  4642     0E96                     	;# 
  4643     0E97                     	;# 
  4644     0E98                     	;# 
  4645     0E99                     	;# 
  4646     0E9A                     	;# 
  4647     0E9B                     	;# 
  4648     0E9C                     	;# 
  4649     0E9D                     	;# 
  4650     0E9E                     	;# 
  4651     0E9F                     	;# 
  4652     0EA0                     	;# 
  4653     0EA1                     	;# 
  4654     0EA2                     	;# 
  4655     0EA3                     	;# 
  4656     0EA4                     	;# 
  4657     0EA5                     	;# 
  4658     0EA6                     	;# 
  4659     0EA7                     	;# 
  4660     0F0F                     	;# 
  4661     0F10                     	;# 
  4662     0F11                     	;# 
  4663     0F12                     	;# 
  4664     0F13                     	;# 
  4665     0F14                     	;# 
  4666     0F15                     	;# 
  4667     0F16                     	;# 
  4668     0F17                     	;# 
  4669     0F18                     	;# 
  4670     0F19                     	;# 
  4671     0F1A                     	;# 
  4672     0F1B                     	;# 
  4673     0F1C                     	;# 
  4674     0F1D                     	;# 
  4675     0F1E                     	;# 
  4676     0F1F                     	;# 
  4677     0F20                     	;# 
  4678     0F21                     	;# 
  4679     0F22                     	;# 
  4680     0F23                     	;# 
  4681     0F24                     	;# 
  4682     0F25                     	;# 
  4683     0F26                     	;# 
  4684     0F27                     	;# 
  4685     0F28                     	;# 
  4686     0F29                     	;# 
  4687     0F2A                     	;# 
  4688     0F2B                     	;# 
  4689     0F2C                     	;# 
  4690     0F2D                     	;# 
  4691     0F2E                     	;# 
  4692     0F2F                     	;# 
  4693     0F30                     	;# 
  4694     0F31                     	;# 
  4695     0F32                     	;# 
  4696     0F33                     	;# 
  4697     0F34                     	;# 
  4698     0F35                     	;# 
  4699     0F36                     	;# 
  4700     0F37                     	;# 
  4701     0FE4                     	;# 
  4702     0FE5                     	;# 
  4703     0FE6                     	;# 
  4704     0FE7                     	;# 
  4705     0FE8                     	;# 
  4706     0FE9                     	;# 
  4707     0FEA                     	;# 
  4708     0FEB                     	;# 
  4709     0FED                     	;# 
  4710     0FEE                     	;# 
  4711     0FEF                     	;_str2
  4712                           
  4713                           	psect	idataBANK1
  4714     13EF                     __pidataBANK1:
  4715                           
  4716                           ;initializer for _REG
  4717     13EF  3400               	retlw	0
  4718     13F0  3430               	retlw	48
  4719     13F1  3459               	retlw	89
  4720     13F2  3418               	retlw	24
  4721     13F3  3404               	retlw	4
  4722     13F4  3417               	retlw	23
  4723     13F5  3410               	retlw	16
  4724     13F6  3424               	retlw	36
  4725                           
  4726                           ;initializer for _Posi_cmd
  4727     13F7  3400               	retlw	0
  4728     13F8  3420               	retlw	32
  4729     13F9  3402               	retlw	2
  4730     13FA  34B0               	retlw	176
  4731     13FB  3400               	retlw	0
  4732     13FC  3400               	retlw	0
  4733                           
  4734                           	psect	idataBANK2
  4735     09E5                     __pidataBANK2:
  4736                           
  4737                           ;initializer for _settei
  4738     09E5  3400               	retlw	0
  4739     09E6  3400               	retlw	0
  4740     09E7  340A               	retlw	10
  4741     09E8  3400               	retlw	0
  4742     09E9  3400               	retlw	0
  4743     09EA  343B               	retlw	59
  4744     09EB  340A               	retlw	10
  4745     09EC  3400               	retlw	0
  4746     09ED  343B               	retlw	59
  4747     09EE  3415               	retlw	21
  4748     09EF  3400               	retlw	0
  4749     09F0  3417               	retlw	23
  4750     09F1  3404               	retlw	4
  4751     09F2  3400               	retlw	0
  4752     09F3  3406               	retlw	6
  4753     09F4  3411               	retlw	17
  4754     09F5  3401               	retlw	1
  4755     09F6  341F               	retlw	31
  4756     09F7  340A               	retlw	10
  4757     09F8  3401               	retlw	1
  4758     09F9  340C               	retlw	12
  4759     09FA  3418               	retlw	24
  4760     09FB  3414               	retlw	20
  4761     09FC  3463               	retlw	99
  4762                           
  4763                           ;initializer for _alm_settei
  4764     09FD  341E               	retlw	30
  4765     09FE  3400               	retlw	0
  4766     09FF  343B               	retlw	59
  4767     0A00  3412               	retlw	18
  4768     0A01  3400               	retlw	0
  4769     0A02  3417               	retlw	23
  4770     0A03  3400               	retlw	0
  4771     0A04  3400               	retlw	0
  4772     0A05  3401               	retlw	1
  4773     0A06  3400               	retlw	0
  4774     0A07  3400               	retlw	0
  4775     0A08  3401               	retlw	1
  4776                           
  4777                           ;initializer for _DIR
  4778     0A09  34FC               	retlw	low (STR_10| (0+32768))
  4779     0A0A  3498               	retlw	high (STR_10| (0+32768))
  4780     0A0B  34FE               	retlw	low (STR_11| (0+32768))
  4781     0A0C  3498               	retlw	high (STR_11| (0+32768))
  4782                           
  4783                           ;initializer for _SRV
  4784     0A0D  34E1               	retlw	low (STR_8| (0+32768))
  4785     0A0E  3498               	retlw	high (STR_8| (0+32768))
  4786     0A0F  34D5               	retlw	low (STR_9| (0+32768))
  4787     0A10  3498               	retlw	high (STR_9| (0+32768))
  4788                           
  4789                           ;initializer for _Font12_data
  4790     0A11  3440               	retlw	64
  4791     0A12  3400               	retlw	0
  4792     0A13  3400               	retlw	0
  4793     0A14  3400               	retlw	0
  4794     0A15  3400               	retlw	0
  4795     0A16  3400               	retlw	0
  4796     0A17  3400               	retlw	0
  4797     0A18  3400               	retlw	0
  4798     0A19  3400               	retlw	0
  4799     0A1A  3400               	retlw	0
  4800     0A1B  3400               	retlw	0
  4801     0A1C  3400               	retlw	0
  4802     0A1D  3400               	retlw	0
  4803                           
  4804                           ;initializer for _CLR_cmd
  4805     0A1E  3400               	retlw	0
  4806     0A1F  3420               	retlw	32
  4807     0A20  3400               	retlw	0
  4808     0A21  3421               	retlw	33
  4809     0A22  3400               	retlw	0
  4810     0A23  347F               	retlw	127
  4811     0A24  3422               	retlw	34
  4812     0A25  3400               	retlw	0
  4813     0A26  3407               	retlw	7
  4814                           
  4815                           ;initializer for _Font6_data
  4816     0A27  3440               	retlw	64
  4817     0A28  3400               	retlw	0
  4818     0A29  3400               	retlw	0
  4819     0A2A  3400               	retlw	0
  4820     0A2B  3400               	retlw	0
  4821     0A2C  3400               	retlw	0
  4822     0A2D  3400               	retlw	0
  4823                           
  4824                           	psect	idataBANK3
  4825     099F                     __pidataBANK3:
  4826                           
  4827                           ;initializer for _alm_unit
  4828     099F  3454               	retlw	84
  4829     09A0  344F               	retlw	79
  4830     09A1  3450               	retlw	80
  4831     09A2  3400               	retlw	0
  4832     09A3  3400               	retlw	0
  4833     09A4  3400               	retlw	0
  4834     09A5  3400               	retlw	0
  4835     09A6  3400               	retlw	0
  4836     09A7  3400               	retlw	0
  4837     09A8  3400               	retlw	0
  4838     09A9  3442               	retlw	66
  4839     09AA  3454               	retlw	84
  4840     09AB  344D               	retlw	77
  4841     09AC  3400               	retlw	0
  4842     09AD  3400               	retlw	0
  4843     09AE  3400               	retlw	0
  4844     09AF  3400               	retlw	0
  4845     09B0  3400               	retlw	0
  4846     09B1  3400               	retlw	0
  4847     09B2  3400               	retlw	0
  4848     09B3  344C               	retlw	76
  4849     09B4  3400               	retlw	0
  4850     09B5  3400               	retlw	0
  4851     09B6  3400               	retlw	0
  4852     09B7  3400               	retlw	0
  4853     09B8  3400               	retlw	0
  4854     09B9  3400               	retlw	0
  4855     09BA  3400               	retlw	0
  4856     09BB  3400               	retlw	0
  4857     09BC  3400               	retlw	0
  4858     09BD  3452               	retlw	82
  4859     09BE  3400               	retlw	0
  4860     09BF  3400               	retlw	0
  4861     09C0  3400               	retlw	0
  4862     09C1  3400               	retlw	0
  4863     09C2  3400               	retlw	0
  4864     09C3  3400               	retlw	0
  4865     09C4  3400               	retlw	0
  4866     09C5  3400               	retlw	0
  4867     09C6  3400               	retlw	0
  4868                           
  4869                           ;initializer for _week
  4870     09C7  34DD               	retlw	low (STR_1| (0+32768))
  4871     09C8  3498               	retlw	high (STR_1| (0+32768))
  4872     09C9  34D9               	retlw	low (STR_2| (0+32768))
  4873     09CA  3498               	retlw	high (STR_2| (0+32768))
  4874     09CB  34CD               	retlw	low (STR_3| (0+32768))
  4875     09CC  3498               	retlw	high (STR_3| (0+32768))
  4876     09CD  34C9               	retlw	low (STR_4| (0+32768))
  4877     09CE  3498               	retlw	high (STR_4| (0+32768))
  4878     09CF  34E9               	retlw	low (STR_5| (0+32768))
  4879     09D0  3498               	retlw	high (STR_5| (0+32768))
  4880     09D1  34D1               	retlw	low (STR_6| (0+32768))
  4881     09D2  3498               	retlw	high (STR_6| (0+32768))
  4882     09D3  34E5               	retlw	low (STR_7| (0+32768))
  4883     09D4  3498               	retlw	high (STR_7| (0+32768))
  4884                           
  4885                           ;initializer for _unit2
  4886     09D5  344D               	retlw	77
  4887     09D6  3400               	retlw	0
  4888     09D7  3400               	retlw	0
  4889     09D8  3400               	retlw	0
  4890     09D9  3448               	retlw	72
  4891     09DA  3400               	retlw	0
  4892     09DB  3400               	retlw	0
  4893     09DC  3400               	retlw	0
  4894     09DD  3453               	retlw	83
  4895     09DE  3452               	retlw	82
  4896     09DF  3456               	retlw	86
  4897     09E0  3400               	retlw	0
  4898     09E1  3444               	retlw	68
  4899     09E2  3449               	retlw	73
  4900     09E3  3452               	retlw	82
  4901     09E4  3400               	retlw	0
  4902                           
  4903                           	psect	idataBANK4
  4904     0894                     __pidataBANK4:
  4905                           
  4906                           ;initializer for _unit
  4907     0894  3444               	retlw	68
  4908     0895  344D               	retlw	77
  4909     0896  3459               	retlw	89
  4910     0897  3431               	retlw	49
  4911     0898  3400               	retlw	0
  4912     0899  3400               	retlw	0
  4913     089A  3400               	retlw	0
  4914     089B  3400               	retlw	0
  4915     089C  3444               	retlw	68
  4916     089D  344D               	retlw	77
  4917     089E  3459               	retlw	89
  4918     089F  3432               	retlw	50
  4919     08A0  3400               	retlw	0
  4920     08A1  3400               	retlw	0
  4921     08A2  3400               	retlw	0
  4922     08A3  3400               	retlw	0
  4923     08A4  344D               	retlw	77
  4924     08A5  3449               	retlw	73
  4925     08A6  344E               	retlw	78
  4926     08A7  3455               	retlw	85
  4927     08A8  3454               	retlw	84
  4928     08A9  3445               	retlw	69
  4929     08AA  3453               	retlw	83
  4930     08AB  3400               	retlw	0
  4931     08AC  3448               	retlw	72
  4932     08AD  344F               	retlw	79
  4933     08AE  3455               	retlw	85
  4934     08AF  3452               	retlw	82
  4935     08B0  3400               	retlw	0
  4936     08B1  3400               	retlw	0
  4937     08B2  3400               	retlw	0
  4938     08B3  3400               	retlw	0
  4939     08B4  3457               	retlw	87
  4940     08B5  3445               	retlw	69
  4941     08B6  3445               	retlw	69
  4942     08B7  344B               	retlw	75
  4943     08B8  3400               	retlw	0
  4944     08B9  3400               	retlw	0
  4945     08BA  3400               	retlw	0
  4946     08BB  3400               	retlw	0
  4947     08BC  3444               	retlw	68
  4948     08BD  3441               	retlw	65
  4949     08BE  3459               	retlw	89
  4950     08BF  3400               	retlw	0
  4951     08C0  3400               	retlw	0
  4952     08C1  3400               	retlw	0
  4953     08C2  3400               	retlw	0
  4954     08C3  3400               	retlw	0
  4955     08C4  344D               	retlw	77
  4956     08C5  344F               	retlw	79
  4957     08C6  344E               	retlw	78
  4958     08C7  3454               	retlw	84
  4959     08C8  3448               	retlw	72
  4960     08C9  3400               	retlw	0
  4961     08CA  3400               	retlw	0
  4962     08CB  3400               	retlw	0
  4963     08CC  3459               	retlw	89
  4964     08CD  3445               	retlw	69
  4965     08CE  3441               	retlw	65
  4966     08CF  3452               	retlw	82
  4967     08D0  3400               	retlw	0
  4968     08D1  3400               	retlw	0
  4969     08D2  3400               	retlw	0
  4970     08D3  3400               	retlw	0
  4971                           
  4972                           	psect	stringtext1
  4973     02E5                     __pstringtext1:
  4974     02E5                     _font6:
  4975     02E5  3400               	retlw	0
  4976     02E6  3400               	retlw	0
  4977     02E7  3400               	retlw	0
  4978     02E8  3400               	retlw	0
  4979     02E9  3400               	retlw	0
  4980     02EA  3400               	retlw	0
  4981     02EB  3400               	retlw	0
  4982     02EC  3400               	retlw	0
  4983     02ED  344F               	retlw	79
  4984     02EE  3400               	retlw	0
  4985     02EF  3400               	retlw	0
  4986     02F0  3400               	retlw	0
  4987     02F1  3400               	retlw	0
  4988     02F2  3407               	retlw	7
  4989     02F3  3400               	retlw	0
  4990     02F4  3407               	retlw	7
  4991     02F5  3400               	retlw	0
  4992     02F6  3400               	retlw	0
  4993     02F7  3414               	retlw	20
  4994     02F8  347F               	retlw	127
  4995     02F9  3414               	retlw	20
  4996     02FA  347F               	retlw	127
  4997     02FB  3414               	retlw	20
  4998     02FC  3400               	retlw	0
  4999     02FD  3424               	retlw	36
  5000     02FE  342A               	retlw	42
  5001     02FF  347F               	retlw	127
  5002     0300  342A               	retlw	42
  5003     0301  3412               	retlw	18
  5004     0302  3400               	retlw	0
  5005     0303  3423               	retlw	35
  5006     0304  3413               	retlw	19
  5007     0305  3408               	retlw	8
  5008     0306  3464               	retlw	100
  5009     0307  3462               	retlw	98
  5010     0308  3400               	retlw	0
  5011     0309  3436               	retlw	54
  5012     030A  3449               	retlw	73
  5013     030B  3455               	retlw	85
  5014     030C  3422               	retlw	34
  5015     030D  3450               	retlw	80
  5016     030E  3400               	retlw	0
  5017     030F  3400               	retlw	0
  5018     0310  3405               	retlw	5
  5019     0311  3403               	retlw	3
  5020     0312  3400               	retlw	0
  5021     0313  3400               	retlw	0
  5022     0314  3400               	retlw	0
  5023     0315  3400               	retlw	0
  5024     0316  341C               	retlw	28
  5025     0317  3422               	retlw	34
  5026     0318  3441               	retlw	65
  5027     0319  3400               	retlw	0
  5028     031A  3400               	retlw	0
  5029     031B  3400               	retlw	0
  5030     031C  3441               	retlw	65
  5031     031D  3422               	retlw	34
  5032     031E  341C               	retlw	28
  5033     031F  3400               	retlw	0
  5034     0320  3400               	retlw	0
  5035     0321  3414               	retlw	20
  5036     0322  3408               	retlw	8
  5037     0323  343E               	retlw	62
  5038     0324  3408               	retlw	8
  5039     0325  3414               	retlw	20
  5040     0326  3400               	retlw	0
  5041     0327  3408               	retlw	8
  5042     0328  3408               	retlw	8
  5043     0329  343E               	retlw	62
  5044     032A  3408               	retlw	8
  5045     032B  3408               	retlw	8
  5046     032C  3400               	retlw	0
  5047     032D  3400               	retlw	0
  5048     032E  3450               	retlw	80
  5049     032F  3430               	retlw	48
  5050     0330  3400               	retlw	0
  5051     0331  3400               	retlw	0
  5052     0332  3400               	retlw	0
  5053     0333  3408               	retlw	8
  5054     0334  3408               	retlw	8
  5055     0335  3408               	retlw	8
  5056     0336  3408               	retlw	8
  5057     0337  3408               	retlw	8
  5058     0338  3400               	retlw	0
  5059     0339  3400               	retlw	0
  5060     033A  3460               	retlw	96
  5061     033B  3460               	retlw	96
  5062     033C  3400               	retlw	0
  5063     033D  3400               	retlw	0
  5064     033E  3400               	retlw	0
  5065     033F  3420               	retlw	32
  5066     0340  3410               	retlw	16
  5067     0341  3408               	retlw	8
  5068     0342  3404               	retlw	4
  5069     0343  3402               	retlw	2
  5070     0344  3400               	retlw	0
  5071     0345  343E               	retlw	62
  5072     0346  3451               	retlw	81
  5073     0347  3449               	retlw	73
  5074     0348  3445               	retlw	69
  5075     0349  343E               	retlw	62
  5076     034A  3400               	retlw	0
  5077     034B  3400               	retlw	0
  5078     034C  3442               	retlw	66
  5079     034D  347F               	retlw	127
  5080     034E  3440               	retlw	64
  5081     034F  3400               	retlw	0
  5082     0350  3400               	retlw	0
  5083     0351  3442               	retlw	66
  5084     0352  3461               	retlw	97
  5085     0353  3451               	retlw	81
  5086     0354  3449               	retlw	73
  5087     0355  3446               	retlw	70
  5088     0356  3400               	retlw	0
  5089     0357  3421               	retlw	33
  5090     0358  3441               	retlw	65
  5091     0359  3445               	retlw	69
  5092     035A  344B               	retlw	75
  5093     035B  3431               	retlw	49
  5094     035C  3400               	retlw	0
  5095     035D  3418               	retlw	24
  5096     035E  3414               	retlw	20
  5097     035F  3412               	retlw	18
  5098     0360  347F               	retlw	127
  5099     0361  3410               	retlw	16
  5100     0362  3400               	retlw	0
  5101     0363  3427               	retlw	39
  5102     0364  3445               	retlw	69
  5103     0365  3445               	retlw	69
  5104     0366  3445               	retlw	69
  5105     0367  3439               	retlw	57
  5106     0368  3400               	retlw	0
  5107     0369  343C               	retlw	60
  5108     036A  344A               	retlw	74
  5109     036B  3449               	retlw	73
  5110     036C  3449               	retlw	73
  5111     036D  3430               	retlw	48
  5112     036E  3400               	retlw	0
  5113     036F  3401               	retlw	1
  5114     0370  3471               	retlw	113
  5115     0371  3409               	retlw	9
  5116     0372  3405               	retlw	5
  5117     0373  3403               	retlw	3
  5118     0374  3400               	retlw	0
  5119     0375  3436               	retlw	54
  5120     0376  3449               	retlw	73
  5121     0377  3449               	retlw	73
  5122     0378  3449               	retlw	73
  5123     0379  3436               	retlw	54
  5124     037A  3400               	retlw	0
  5125     037B  3406               	retlw	6
  5126     037C  3449               	retlw	73
  5127     037D  3449               	retlw	73
  5128     037E  3429               	retlw	41
  5129     037F  341E               	retlw	30
  5130     0380  3400               	retlw	0
  5131     0381  3400               	retlw	0
  5132     0382  3436               	retlw	54
  5133     0383  3436               	retlw	54
  5134     0384  3400               	retlw	0
  5135     0385  3400               	retlw	0
  5136     0386  3400               	retlw	0
  5137     0387  3400               	retlw	0
  5138     0388  3456               	retlw	86
  5139     0389  3436               	retlw	54
  5140     038A  3400               	retlw	0
  5141     038B  3400               	retlw	0
  5142     038C  3400               	retlw	0
  5143     038D  3408               	retlw	8
  5144     038E  3414               	retlw	20
  5145     038F  3422               	retlw	34
  5146     0390  3441               	retlw	65
  5147     0391  3400               	retlw	0
  5148     0392  3400               	retlw	0
  5149     0393  3414               	retlw	20
  5150     0394  3414               	retlw	20
  5151     0395  3414               	retlw	20
  5152     0396  3414               	retlw	20
  5153     0397  3414               	retlw	20
  5154     0398  3400               	retlw	0
  5155     0399  3400               	retlw	0
  5156     039A  3441               	retlw	65
  5157     039B  3422               	retlw	34
  5158     039C  3414               	retlw	20
  5159     039D  3408               	retlw	8
  5160     039E  3400               	retlw	0
  5161     039F  3402               	retlw	2
  5162     03A0  3401               	retlw	1
  5163     03A1  3451               	retlw	81
  5164     03A2  3409               	retlw	9
  5165     03A3  3406               	retlw	6
  5166     03A4  3400               	retlw	0
  5167     03A5  3432               	retlw	50
  5168     03A6  3449               	retlw	73
  5169     03A7  3479               	retlw	121
  5170     03A8  3441               	retlw	65
  5171     03A9  343E               	retlw	62
  5172     03AA  3400               	retlw	0
  5173     03AB  347E               	retlw	126
  5174     03AC  3411               	retlw	17
  5175     03AD  3411               	retlw	17
  5176     03AE  3411               	retlw	17
  5177     03AF  347E               	retlw	126
  5178     03B0  3400               	retlw	0
  5179     03B1  347F               	retlw	127
  5180     03B2  3449               	retlw	73
  5181     03B3  3449               	retlw	73
  5182     03B4  3449               	retlw	73
  5183     03B5  3436               	retlw	54
  5184     03B6  3400               	retlw	0
  5185     03B7  343E               	retlw	62
  5186     03B8  3441               	retlw	65
  5187     03B9  3441               	retlw	65
  5188     03BA  3441               	retlw	65
  5189     03BB  3422               	retlw	34
  5190     03BC  3400               	retlw	0
  5191     03BD  347F               	retlw	127
  5192     03BE  3441               	retlw	65
  5193     03BF  3441               	retlw	65
  5194     03C0  3422               	retlw	34
  5195     03C1  341C               	retlw	28
  5196     03C2  3400               	retlw	0
  5197     03C3  347F               	retlw	127
  5198     03C4  3449               	retlw	73
  5199     03C5  3449               	retlw	73
  5200     03C6  3449               	retlw	73
  5201     03C7  3441               	retlw	65
  5202     03C8  3400               	retlw	0
  5203     03C9  347F               	retlw	127
  5204     03CA  3409               	retlw	9
  5205     03CB  3409               	retlw	9
  5206     03CC  3409               	retlw	9
  5207     03CD  3401               	retlw	1
  5208     03CE  3400               	retlw	0
  5209     03CF  343E               	retlw	62
  5210     03D0  3441               	retlw	65
  5211     03D1  3449               	retlw	73
  5212     03D2  3449               	retlw	73
  5213     03D3  347A               	retlw	122
  5214     03D4  3400               	retlw	0
  5215     03D5  347F               	retlw	127
  5216     03D6  3408               	retlw	8
  5217     03D7  3408               	retlw	8
  5218     03D8  3408               	retlw	8
  5219     03D9  347F               	retlw	127
  5220     03DA  3400               	retlw	0
  5221     03DB  3400               	retlw	0
  5222     03DC  3441               	retlw	65
  5223     03DD  347F               	retlw	127
  5224     03DE  3441               	retlw	65
  5225     03DF  3400               	retlw	0
  5226     03E0  3400               	retlw	0
  5227     03E1  3420               	retlw	32
  5228     03E2  3440               	retlw	64
  5229     03E3  3441               	retlw	65
  5230     03E4  343F               	retlw	63
  5231     03E5  3401               	retlw	1
  5232     03E6  3400               	retlw	0
  5233     03E7  347F               	retlw	127
  5234     03E8  3408               	retlw	8
  5235     03E9  3414               	retlw	20
  5236     03EA  3422               	retlw	34
  5237     03EB  3441               	retlw	65
  5238     03EC  3400               	retlw	0
  5239     03ED  347F               	retlw	127
  5240     03EE  3440               	retlw	64
  5241     03EF  3440               	retlw	64
  5242     03F0  3440               	retlw	64
  5243     03F1  3440               	retlw	64
  5244     03F2  3400               	retlw	0
  5245     03F3  347F               	retlw	127
  5246     03F4  3402               	retlw	2
  5247     03F5  340C               	retlw	12
  5248     03F6  3402               	retlw	2
  5249     03F7  347F               	retlw	127
  5250     03F8  3400               	retlw	0
  5251     03F9  347F               	retlw	127
  5252     03FA  3404               	retlw	4
  5253     03FB  3408               	retlw	8
  5254     03FC  3410               	retlw	16
  5255     03FD  347F               	retlw	127
  5256     03FE  3400               	retlw	0
  5257     03FF  343E               	retlw	62
  5258     0400  3441               	retlw	65
  5259     0401  3441               	retlw	65
  5260     0402  3441               	retlw	65
  5261     0403  343E               	retlw	62
  5262     0404  3400               	retlw	0
  5263     0405  347F               	retlw	127
  5264     0406  3409               	retlw	9
  5265     0407  3409               	retlw	9
  5266     0408  3409               	retlw	9
  5267     0409  3406               	retlw	6
  5268     040A  3400               	retlw	0
  5269     040B  343E               	retlw	62
  5270     040C  3441               	retlw	65
  5271     040D  3451               	retlw	81
  5272     040E  3421               	retlw	33
  5273     040F  345E               	retlw	94
  5274     0410  3400               	retlw	0
  5275     0411  347F               	retlw	127
  5276     0412  3409               	retlw	9
  5277     0413  3419               	retlw	25
  5278     0414  3429               	retlw	41
  5279     0415  3446               	retlw	70
  5280     0416  3400               	retlw	0
  5281     0417  3446               	retlw	70
  5282     0418  3449               	retlw	73
  5283     0419  3449               	retlw	73
  5284     041A  3449               	retlw	73
  5285     041B  3431               	retlw	49
  5286     041C  3400               	retlw	0
  5287     041D  3401               	retlw	1
  5288     041E  3401               	retlw	1
  5289     041F  347F               	retlw	127
  5290     0420  3401               	retlw	1
  5291     0421  3401               	retlw	1
  5292     0422  3400               	retlw	0
  5293     0423  343F               	retlw	63
  5294     0424  3440               	retlw	64
  5295     0425  3440               	retlw	64
  5296     0426  3440               	retlw	64
  5297     0427  343F               	retlw	63
  5298     0428  3400               	retlw	0
  5299     0429  341F               	retlw	31
  5300     042A  3420               	retlw	32
  5301     042B  3440               	retlw	64
  5302     042C  3420               	retlw	32
  5303     042D  341F               	retlw	31
  5304     042E  3400               	retlw	0
  5305     042F  343F               	retlw	63
  5306     0430  3440               	retlw	64
  5307     0431  3438               	retlw	56
  5308     0432  3440               	retlw	64
  5309     0433  343F               	retlw	63
  5310     0434  3400               	retlw	0
  5311     0435  3463               	retlw	99
  5312     0436  3414               	retlw	20
  5313     0437  3408               	retlw	8
  5314     0438  3414               	retlw	20
  5315     0439  3463               	retlw	99
  5316     043A  3400               	retlw	0
  5317     043B  3407               	retlw	7
  5318     043C  3408               	retlw	8
  5319     043D  3470               	retlw	112
  5320     043E  3408               	retlw	8
  5321     043F  3407               	retlw	7
  5322     0440  3400               	retlw	0
  5323     0441  3461               	retlw	97
  5324     0442  3451               	retlw	81
  5325     0443  3449               	retlw	73
  5326     0444  3445               	retlw	69
  5327     0445  3443               	retlw	67
  5328     0446  3400               	retlw	0
  5329     0447  3400               	retlw	0
  5330     0448  347F               	retlw	127
  5331     0449  3441               	retlw	65
  5332     044A  3441               	retlw	65
  5333     044B  3400               	retlw	0
  5334     044C  3400               	retlw	0
  5335     044D  3402               	retlw	2
  5336     044E  3404               	retlw	4
  5337     044F  3408               	retlw	8
  5338     0450  3410               	retlw	16
  5339     0451  3420               	retlw	32
  5340     0452  3400               	retlw	0
  5341     0453  3400               	retlw	0
  5342     0454  3441               	retlw	65
  5343     0455  3441               	retlw	65
  5344     0456  347F               	retlw	127
  5345     0457  3400               	retlw	0
  5346     0458  3400               	retlw	0
  5347     0459  3404               	retlw	4
  5348     045A  3402               	retlw	2
  5349     045B  3401               	retlw	1
  5350     045C  3402               	retlw	2
  5351     045D  3404               	retlw	4
  5352     045E  3400               	retlw	0
  5353     045F  3440               	retlw	64
  5354     0460  3440               	retlw	64
  5355     0461  3440               	retlw	64
  5356     0462  3440               	retlw	64
  5357     0463  3440               	retlw	64
  5358     0464  3400               	retlw	0
  5359     0465  3400               	retlw	0
  5360     0466  3401               	retlw	1
  5361     0467  3402               	retlw	2
  5362     0468  3404               	retlw	4
  5363     0469  3400               	retlw	0
  5364     046A  3400               	retlw	0
  5365     046B  3420               	retlw	32
  5366     046C  3454               	retlw	84
  5367     046D  3454               	retlw	84
  5368     046E  3454               	retlw	84
  5369     046F  3478               	retlw	120
  5370     0470  3400               	retlw	0
  5371     0471  347F               	retlw	127
  5372     0472  3448               	retlw	72
  5373     0473  3444               	retlw	68
  5374     0474  3444               	retlw	68
  5375     0475  3438               	retlw	56
  5376     0476  3400               	retlw	0
  5377     0477  3438               	retlw	56
  5378     0478  3444               	retlw	68
  5379     0479  3444               	retlw	68
  5380     047A  3444               	retlw	68
  5381     047B  3420               	retlw	32
  5382     047C  3400               	retlw	0
  5383     047D  3438               	retlw	56
  5384     047E  3444               	retlw	68
  5385     047F  3444               	retlw	68
  5386     0480  3448               	retlw	72
  5387     0481  347F               	retlw	127
  5388     0482  3400               	retlw	0
  5389     0483  3438               	retlw	56
  5390     0484  3454               	retlw	84
  5391     0485  3454               	retlw	84
  5392     0486  3454               	retlw	84
  5393     0487  3418               	retlw	24
  5394     0488  3400               	retlw	0
  5395     0489  3408               	retlw	8
  5396     048A  347E               	retlw	126
  5397     048B  3409               	retlw	9
  5398     048C  3401               	retlw	1
  5399     048D  3402               	retlw	2
  5400     048E  3400               	retlw	0
  5401     048F  340C               	retlw	12
  5402     0490  3452               	retlw	82
  5403     0491  3452               	retlw	82
  5404     0492  3452               	retlw	82
  5405     0493  343E               	retlw	62
  5406     0494  3400               	retlw	0
  5407     0495  347F               	retlw	127
  5408     0496  3408               	retlw	8
  5409     0497  3404               	retlw	4
  5410     0498  3404               	retlw	4
  5411     0499  3478               	retlw	120
  5412     049A  3400               	retlw	0
  5413     049B  3400               	retlw	0
  5414     049C  3444               	retlw	68
  5415     049D  347D               	retlw	125
  5416     049E  3440               	retlw	64
  5417     049F  3400               	retlw	0
  5418     04A0  3400               	retlw	0
  5419     04A1  3420               	retlw	32
  5420     04A2  3440               	retlw	64
  5421     04A3  3444               	retlw	68
  5422     04A4  343D               	retlw	61
  5423     04A5  3400               	retlw	0
  5424     04A6  3400               	retlw	0
  5425     04A7  347F               	retlw	127
  5426     04A8  3410               	retlw	16
  5427     04A9  3428               	retlw	40
  5428     04AA  3444               	retlw	68
  5429     04AB  3400               	retlw	0
  5430     04AC  3400               	retlw	0
  5431     04AD  3400               	retlw	0
  5432     04AE  3441               	retlw	65
  5433     04AF  347F               	retlw	127
  5434     04B0  3440               	retlw	64
  5435     04B1  3400               	retlw	0
  5436     04B2  3400               	retlw	0
  5437     04B3  347C               	retlw	124
  5438     04B4  3404               	retlw	4
  5439     04B5  3418               	retlw	24
  5440     04B6  3404               	retlw	4
  5441     04B7  3478               	retlw	120
  5442     04B8  3400               	retlw	0
  5443     04B9  347C               	retlw	124
  5444     04BA  3408               	retlw	8
  5445     04BB  3404               	retlw	4
  5446     04BC  3404               	retlw	4
  5447     04BD  3478               	retlw	120
  5448     04BE  3400               	retlw	0
  5449     04BF  3438               	retlw	56
  5450     04C0  3444               	retlw	68
  5451     04C1  3444               	retlw	68
  5452     04C2  3444               	retlw	68
  5453     04C3  3438               	retlw	56
  5454     04C4  3400               	retlw	0
  5455     04C5  347C               	retlw	124
  5456     04C6  3414               	retlw	20
  5457     04C7  3414               	retlw	20
  5458     04C8  3414               	retlw	20
  5459     04C9  3408               	retlw	8
  5460     04CA  3400               	retlw	0
  5461     04CB  3408               	retlw	8
  5462     04CC  3414               	retlw	20
  5463     04CD  3414               	retlw	20
  5464     04CE  3418               	retlw	24
  5465     04CF  347C               	retlw	124
  5466     04D0  3400               	retlw	0
  5467     04D1  347C               	retlw	124
  5468     04D2  3408               	retlw	8
  5469     04D3  3404               	retlw	4
  5470     04D4  3404               	retlw	4
  5471     04D5  3408               	retlw	8
  5472     04D6  3400               	retlw	0
  5473     04D7  3448               	retlw	72
  5474     04D8  3454               	retlw	84
  5475     04D9  3454               	retlw	84
  5476     04DA  3454               	retlw	84
  5477     04DB  3420               	retlw	32
  5478     04DC  3400               	retlw	0
  5479     04DD  3404               	retlw	4
  5480     04DE  343F               	retlw	63
  5481     04DF  3444               	retlw	68
  5482     04E0  3440               	retlw	64
  5483     04E1  3420               	retlw	32
  5484     04E2  3400               	retlw	0
  5485     04E3  343C               	retlw	60
  5486     04E4  3440               	retlw	64
  5487     04E5  3440               	retlw	64
  5488     04E6  3420               	retlw	32
  5489     04E7  347C               	retlw	124
  5490     04E8  3400               	retlw	0
  5491     04E9  341C               	retlw	28
  5492     04EA  3420               	retlw	32
  5493     04EB  3440               	retlw	64
  5494     04EC  3420               	retlw	32
  5495     04ED  341C               	retlw	28
  5496     04EE  3400               	retlw	0
  5497     04EF  343C               	retlw	60
  5498     04F0  3440               	retlw	64
  5499     04F1  3430               	retlw	48
  5500     04F2  3440               	retlw	64
  5501     04F3  343C               	retlw	60
  5502     04F4  3400               	retlw	0
  5503     04F5  3444               	retlw	68
  5504     04F6  3428               	retlw	40
  5505     04F7  3410               	retlw	16
  5506     04F8  3428               	retlw	40
  5507     04F9  3444               	retlw	68
  5508     04FA  3400               	retlw	0
  5509     04FB  340C               	retlw	12
  5510     04FC  3450               	retlw	80
  5511     04FD  3450               	retlw	80
  5512     04FE  3450               	retlw	80
  5513     04FF  343C               	retlw	60
  5514     0500  3400               	retlw	0
  5515     0501  3444               	retlw	68
  5516     0502  3464               	retlw	100
  5517     0503  3454               	retlw	84
  5518     0504  344C               	retlw	76
  5519     0505  3444               	retlw	68
  5520     0506  3400               	retlw	0
  5521     0507                     __end_of_font6:
  5522                           
  5523                           	psect	stringtext2
  5524     1000                     __pstringtext2:
  5525     1000                     _font12:
  5526     1000  3400               	retlw	0
  5527     1001  3400               	retlw	0
  5528     1002  3400               	retlw	0
  5529     1003  3400               	retlw	0
  5530     1004  3400               	retlw	0
  5531     1005  3400               	retlw	0
  5532     1006  3400               	retlw	0
  5533     1007  3400               	retlw	0
  5534     1008  3400               	retlw	0
  5535     1009  3400               	retlw	0
  5536     100A  3400               	retlw	0
  5537     100B  3400               	retlw	0
  5538     100C  3400               	retlw	0
  5539     100D  3400               	retlw	0
  5540     100E  3400               	retlw	0
  5541     100F  3400               	retlw	0
  5542     1010  3400               	retlw	0
  5543     1011  3400               	retlw	0
  5544     1012  3400               	retlw	0
  5545     1013  3400               	retlw	0
  5546     1014  3400               	retlw	0
  5547     1015  3400               	retlw	0
  5548     1016  3400               	retlw	0
  5549     1017  3400               	retlw	0
  5550     1018  3400               	retlw	0
  5551     1019  3400               	retlw	0
  5552     101A  3400               	retlw	0
  5553     101B  3400               	retlw	0
  5554     101C  3400               	retlw	0
  5555     101D  3400               	retlw	0
  5556     101E  3400               	retlw	0
  5557     101F  3400               	retlw	0
  5558     1020  3400               	retlw	0
  5559     1021  3400               	retlw	0
  5560     1022  3400               	retlw	0
  5561     1023  3400               	retlw	0
  5562     1024  3400               	retlw	0
  5563     1025  3400               	retlw	0
  5564     1026  3400               	retlw	0
  5565     1027  3400               	retlw	0
  5566     1028  341C               	retlw	28
  5567     1029  341C               	retlw	28
  5568     102A  341C               	retlw	28
  5569     102B  3400               	retlw	0
  5570     102C  3400               	retlw	0
  5571     102D  3400               	retlw	0
  5572     102E  3400               	retlw	0
  5573     102F  3400               	retlw	0
  5574     1030  3400               	retlw	0
  5575     1031  34FC               	retlw	252
  5576     1032  34FC               	retlw	252
  5577     1033  3480               	retlw	128
  5578     1034  3480               	retlw	128
  5579     1035  3480               	retlw	128
  5580     1036  3480               	retlw	128
  5581     1037  3480               	retlw	128
  5582     1038  3480               	retlw	128
  5583     1039  34FC               	retlw	252
  5584     103A  34FC               	retlw	252
  5585     103B  3400               	retlw	0
  5586     103C  3400               	retlw	0
  5587     103D  343F               	retlw	63
  5588     103E  343F               	retlw	63
  5589     103F  3401               	retlw	1
  5590     1040  3401               	retlw	1
  5591     1041  3401               	retlw	1
  5592     1042  3401               	retlw	1
  5593     1043  3401               	retlw	1
  5594     1044  3401               	retlw	1
  5595     1045  343F               	retlw	63
  5596     1046  343F               	retlw	63
  5597     1047  3400               	retlw	0
  5598     1048  3400               	retlw	0
  5599     1049  34FC               	retlw	252
  5600     104A  34FC               	retlw	252
  5601     104B  3478               	retlw	120
  5602     104C  34E0               	retlw	224
  5603     104D  34C0               	retlw	192
  5604     104E  34C0               	retlw	192
  5605     104F  34E0               	retlw	224
  5606     1050  3478               	retlw	120
  5607     1051  34FC               	retlw	252
  5608     1052  34FC               	retlw	252
  5609     1053  3400               	retlw	0
  5610     1054  3400               	retlw	0
  5611     1055  343F               	retlw	63
  5612     1056  343F               	retlw	63
  5613     1057  3400               	retlw	0
  5614     1058  3400               	retlw	0
  5615     1059  3401               	retlw	1
  5616     105A  3401               	retlw	1
  5617     105B  3400               	retlw	0
  5618     105C  3400               	retlw	0
  5619     105D  343F               	retlw	63
  5620     105E  343F               	retlw	63
  5621     105F  3400               	retlw	0
  5622     1060  3400               	retlw	0
  5623     1061  34FC               	retlw	252
  5624     1062  34FC               	retlw	252
  5625     1063  3400               	retlw	0
  5626     1064  3480               	retlw	128
  5627     1065  34C0               	retlw	192
  5628     1066  3460               	retlw	96
  5629     1067  3430               	retlw	48
  5630     1068  3410               	retlw	16
  5631     1069  3400               	retlw	0
  5632     106A  3400               	retlw	0
  5633     106B  3400               	retlw	0
  5634     106C  3400               	retlw	0
  5635     106D  343F               	retlw	63
  5636     106E  343F               	retlw	63
  5637     106F  3403               	retlw	3
  5638     1070  3403               	retlw	3
  5639     1071  3406               	retlw	6
  5640     1072  340C               	retlw	12
  5641     1073  3418               	retlw	24
  5642     1074  3430               	retlw	48
  5643     1075  3420               	retlw	32
  5644     1076  3400               	retlw	0
  5645     1077  3400               	retlw	0
  5646     1078  3400               	retlw	0
  5647     1079  3430               	retlw	48
  5648     107A  3430               	retlw	48
  5649     107B  3430               	retlw	48
  5650     107C  3430               	retlw	48
  5651     107D  3430               	retlw	48
  5652     107E  3430               	retlw	48
  5653     107F  34F0               	retlw	240
  5654     1080  3470               	retlw	112
  5655     1081  3430               	retlw	48
  5656     1082  3400               	retlw	0
  5657     1083  3400               	retlw	0
  5658     1084  3400               	retlw	0
  5659     1085  3430               	retlw	48
  5660     1086  3438               	retlw	56
  5661     1087  343C               	retlw	60
  5662     1088  3436               	retlw	54
  5663     1089  3433               	retlw	51
  5664     108A  3431               	retlw	49
  5665     108B  3430               	retlw	48
  5666     108C  3430               	retlw	48
  5667     108D  3430               	retlw	48
  5668     108E  3400               	retlw	0
  5669     108F  3400               	retlw	0
  5670     1090  3400               	retlw	0
  5671     1091  34F0               	retlw	240
  5672     1092  34F8               	retlw	248
  5673     1093  340C               	retlw	12
  5674     1094  340C               	retlw	12
  5675     1095  340C               	retlw	12
  5676     1096  340C               	retlw	12
  5677     1097  340C               	retlw	12
  5678     1098  340C               	retlw	12
  5679     1099  34F8               	retlw	248
  5680     109A  34F0               	retlw	240
  5681     109B  3400               	retlw	0
  5682     109C  3400               	retlw	0
  5683     109D  340F               	retlw	15
  5684     109E  341F               	retlw	31
  5685     109F  3430               	retlw	48
  5686     10A0  3430               	retlw	48
  5687     10A1  3430               	retlw	48
  5688     10A2  3430               	retlw	48
  5689     10A3  3430               	retlw	48
  5690     10A4  3430               	retlw	48
  5691     10A5  341F               	retlw	31
  5692     10A6  340F               	retlw	15
  5693     10A7  3400               	retlw	0
  5694     10A8  3400               	retlw	0
  5695     10A9  3400               	retlw	0
  5696     10AA  3400               	retlw	0
  5697     10AB  3400               	retlw	0
  5698     10AC  340C               	retlw	12
  5699     10AD  34FC               	retlw	252
  5700     10AE  34FC               	retlw	252
  5701     10AF  3400               	retlw	0
  5702     10B0  3400               	retlw	0
  5703     10B1  3400               	retlw	0
  5704     10B2  3400               	retlw	0
  5705     10B3  3400               	retlw	0
  5706     10B4  3400               	retlw	0
  5707     10B5  3400               	retlw	0
  5708     10B6  3400               	retlw	0
  5709     10B7  3400               	retlw	0
  5710     10B8  3430               	retlw	48
  5711     10B9  343F               	retlw	63
  5712     10BA  343F               	retlw	63
  5713     10BB  3430               	retlw	48
  5714     10BC  3400               	retlw	0
  5715     10BD  3400               	retlw	0
  5716     10BE  3400               	retlw	0
  5717     10BF  3400               	retlw	0
  5718     10C0  3400               	retlw	0
  5719     10C1  3430               	retlw	48
  5720     10C2  3438               	retlw	56
  5721     10C3  340C               	retlw	12
  5722     10C4  340C               	retlw	12
  5723     10C5  340C               	retlw	12
  5724     10C6  348C               	retlw	140
  5725     10C7  348C               	retlw	140
  5726     10C8  34CC               	retlw	204
  5727     10C9  34F8               	retlw	248
  5728     10CA  3470               	retlw	112
  5729     10CB  3400               	retlw	0
  5730     10CC  3400               	retlw	0
  5731     10CD  3438               	retlw	56
  5732     10CE  343C               	retlw	60
  5733     10CF  343E               	retlw	62
  5734     10D0  3437               	retlw	55
  5735     10D1  3433               	retlw	51
  5736     10D2  3431               	retlw	49
  5737     10D3  3431               	retlw	49
  5738     10D4  3430               	retlw	48
  5739     10D5  3430               	retlw	48
  5740     10D6  3430               	retlw	48
  5741     10D7  3400               	retlw	0
  5742     10D8  3400               	retlw	0
  5743     10D9  3418               	retlw	24
  5744     10DA  341C               	retlw	28
  5745     10DB  340C               	retlw	12
  5746     10DC  348C               	retlw	140
  5747     10DD  348C               	retlw	140
  5748     10DE  348C               	retlw	140
  5749     10DF  348C               	retlw	140
  5750     10E0  34CC               	retlw	204
  5751     10E1  34F8               	retlw	248
  5752     10E2  3470               	retlw	112
  5753     10E3  3400               	retlw	0
  5754     10E4  3400               	retlw	0
  5755     10E5  3418               	retlw	24
  5756     10E6  3438               	retlw	56
  5757     10E7  3430               	retlw	48
  5758     10E8  3431               	retlw	49
  5759     10E9  3431               	retlw	49
  5760     10EA  3431               	retlw	49
  5761     10EB  3431               	retlw	49
  5762     10EC  3433               	retlw	51
  5763     10ED  341F               	retlw	31
  5764     10EE  340E               	retlw	14
  5765     10EF  3400               	retlw	0
  5766     10F0  3400               	retlw	0
  5767     10F1  3400               	retlw	0
  5768     10F2  3400               	retlw	0
  5769     10F3  3480               	retlw	128
  5770     10F4  34C0               	retlw	192
  5771     10F5  3460               	retlw	96
  5772     10F6  3430               	retlw	48
  5773     10F7  3418               	retlw	24
  5774     10F8  34FC               	retlw	252
  5775     10F9  34FC               	retlw	252
  5776     10FA  3400               	retlw	0
  5777     10FB  3400               	retlw	0
  5778     10FC  3400               	retlw	0
  5779     10FD  340E               	retlw	14
  5780     10FE  340F               	retlw	15
  5781     10FF  340D               	retlw	13
  5782     1100  340C               	retlw	12
  5783     1101  340C               	retlw	12
  5784     1102  340C               	retlw	12
  5785     1103  340C               	retlw	12
  5786     1104  343F               	retlw	63
  5787     1105  343F               	retlw	63
  5788     1106  340C               	retlw	12
  5789     1107  3400               	retlw	0
  5790     1108  3400               	retlw	0
  5791     1109  34FC               	retlw	252
  5792     110A  34FC               	retlw	252
  5793     110B  34CC               	retlw	204
  5794     110C  34CC               	retlw	204
  5795     110D  34CC               	retlw	204
  5796     110E  34CC               	retlw	204
  5797     110F  34CC               	retlw	204
  5798     1110  34CC               	retlw	204
  5799     1111  348C               	retlw	140
  5800     1112  340C               	retlw	12
  5801     1113  3400               	retlw	0
  5802     1114  3400               	retlw	0
  5803     1115  3418               	retlw	24
  5804     1116  3438               	retlw	56
  5805     1117  3430               	retlw	48
  5806     1118  3430               	retlw	48
  5807     1119  3430               	retlw	48
  5808     111A  3430               	retlw	48
  5809     111B  3430               	retlw	48
  5810     111C  3430               	retlw	48
  5811     111D  341F               	retlw	31
  5812     111E  340F               	retlw	15
  5813     111F  3400               	retlw	0
  5814     1120  3400               	retlw	0
  5815     1121  34F0               	retlw	240
  5816     1122  34F8               	retlw	248
  5817     1123  349C               	retlw	156
  5818     1124  348C               	retlw	140
  5819     1125  348C               	retlw	140
  5820     1126  348C               	retlw	140
  5821     1127  348C               	retlw	140
  5822     1128  348C               	retlw	140
  5823     1129  3418               	retlw	24
  5824     112A  3418               	retlw	24
  5825     112B  3400               	retlw	0
  5826     112C  3400               	retlw	0
  5827     112D  340F               	retlw	15
  5828     112E  341F               	retlw	31
  5829     112F  3431               	retlw	49
  5830     1130  3431               	retlw	49
  5831     1131  3431               	retlw	49
  5832     1132  3431               	retlw	49
  5833     1133  3431               	retlw	49
  5834     1134  3431               	retlw	49
  5835     1135  341F               	retlw	31
  5836     1136  340E               	retlw	14
  5837     1137  3400               	retlw	0
  5838     1138  3400               	retlw	0
  5839     1139  340C               	retlw	12
  5840     113A  340C               	retlw	12
  5841     113B  340C               	retlw	12
  5842     113C  340C               	retlw	12
  5843     113D  340C               	retlw	12
  5844     113E  348C               	retlw	140
  5845     113F  34CC               	retlw	204
  5846     1140  347C               	retlw	124
  5847     1141  343C               	retlw	60
  5848     1142  340C               	retlw	12
  5849     1143  3400               	retlw	0
  5850     1144  3400               	retlw	0
  5851     1145  3400               	retlw	0
  5852     1146  3400               	retlw	0
  5853     1147  3400               	retlw	0
  5854     1148  3400               	retlw	0
  5855     1149  343E               	retlw	62
  5856     114A  343F               	retlw	63
  5857     114B  3401               	retlw	1
  5858     114C  3400               	retlw	0
  5859     114D  3400               	retlw	0
  5860     114E  3400               	retlw	0
  5861     114F  3400               	retlw	0
  5862     1150  3400               	retlw	0
  5863     1151  3470               	retlw	112
  5864     1152  34F8               	retlw	248
  5865     1153  3488               	retlw	136
  5866     1154  348C               	retlw	140
  5867     1155  348C               	retlw	140
  5868     1156  348C               	retlw	140
  5869     1157  348C               	retlw	140
  5870     1158  3488               	retlw	136
  5871     1159  34F8               	retlw	248
  5872     115A  3470               	retlw	112
  5873     115B  3400               	retlw	0
  5874     115C  3400               	retlw	0
  5875     115D  340E               	retlw	14
  5876     115E  341F               	retlw	31
  5877     115F  3411               	retlw	17
  5878     1160  3431               	retlw	49
  5879     1161  3431               	retlw	49
  5880     1162  3431               	retlw	49
  5881     1163  3431               	retlw	49
  5882     1164  3411               	retlw	17
  5883     1165  341F               	retlw	31
  5884     1166  340E               	retlw	14
  5885     1167  3400               	retlw	0
  5886     1168  3400               	retlw	0
  5887     1169  3478               	retlw	120
  5888     116A  34FC               	retlw	252
  5889     116B  348C               	retlw	140
  5890     116C  348C               	retlw	140
  5891     116D  348C               	retlw	140
  5892     116E  348C               	retlw	140
  5893     116F  348C               	retlw	140
  5894     1170  348C               	retlw	140
  5895     1171  34F8               	retlw	248
  5896     1172  34F0               	retlw	240
  5897     1173  3400               	retlw	0
  5898     1174  3400               	retlw	0
  5899     1175  3400               	retlw	0
  5900     1176  3430               	retlw	48
  5901     1177  3431               	retlw	49
  5902     1178  3431               	retlw	49
  5903     1179  3431               	retlw	49
  5904     117A  3431               	retlw	49
  5905     117B  3431               	retlw	49
  5906     117C  3439               	retlw	57
  5907     117D  341F               	retlw	31
  5908     117E  340F               	retlw	15
  5909     117F  3400               	retlw	0
  5910     1180                     __end_of_font12:
  5911                           
  5912                           	psect	stringtext3
  5913     1821                     __pstringtext3:
  5914     1821                     _i2c_fsmStateTable:
  5915     1821  34E0               	retlw	low _I2C_DO_IDLE
  5916     1822  3412               	retlw	high _I2C_DO_IDLE
  5917     1823  3441               	retlw	low _I2C_DO_SEND_ADR_READ
  5918     1824  3413               	retlw	high _I2C_DO_SEND_ADR_READ
  5919     1825  3431               	retlw	low _I2C_DO_SEND_ADR_WRITE
  5920     1826  3413               	retlw	high _I2C_DO_SEND_ADR_WRITE
  5921     1827  3482               	retlw	low _I2C_DO_TX
  5922     1828  340A               	retlw	high _I2C_DO_TX
  5923     1829  34D4               	retlw	low _I2C_DO_RX
  5924     182A  3408               	retlw	high _I2C_DO_RX
  5925     182B  342A               	retlw	low _I2C_DO_RCEN
  5926     182C  3413               	retlw	high _I2C_DO_RCEN
  5927     182D  346B               	retlw	low _I2C_DO_TX_EMPTY
  5928     182E  3416               	retlw	high _I2C_DO_TX_EMPTY
  5929     182F  34E5               	retlw	low _I2C_DO_SEND_RESTART_READ
  5930     1830  3412               	retlw	high _I2C_DO_SEND_RESTART_READ
  5931     1831  34EA               	retlw	low _I2C_DO_SEND_RESTART_WRITE
  5932     1832  3412               	retlw	high _I2C_DO_SEND_RESTART_WRITE
  5933     1833  34EF               	retlw	low _I2C_DO_SEND_RESTART
  5934     1834  3412               	retlw	high _I2C_DO_SEND_RESTART
  5935     1835  34F4               	retlw	low _I2C_DO_SEND_STOP
  5936     1836  3412               	retlw	high _I2C_DO_SEND_STOP
  5937     1837  34F9               	retlw	low _I2C_DO_RX_ACK
  5938     1838  3412               	retlw	high _I2C_DO_RX_ACK
  5939     1839  34FE               	retlw	low _I2C_DO_RX_NACK_STOP
  5940     183A  3412               	retlw	high _I2C_DO_RX_NACK_STOP
  5941     183B  3403               	retlw	low _I2C_DO_RX_NACK_RESTART
  5942     183C  3413               	retlw	high _I2C_DO_RX_NACK_RESTART
  5943     183D  3408               	retlw	low _I2C_DO_RESET
  5944     183E  3413               	retlw	high _I2C_DO_RESET
  5945     183F  34C1               	retlw	low _I2C_DO_ADDRESS_NACK
  5946     1840  3415               	retlw	high _I2C_DO_ADDRESS_NACK
  5947     1841                     __end_of_i2c_fsmStateTable:
  5948                           
  5949                           	psect	stringtext4
  5950     1898                     __pstringtext4:
  5951     1898                     _dpowers:
  5952     1898  3401               	retlw	1
  5953     1899  3400               	retlw	0
  5954     189A  340A               	retlw	10
  5955     189B  3400               	retlw	0
  5956     189C  3464               	retlw	100
  5957     189D  3400               	retlw	0
  5958     189E  34E8               	retlw	232
  5959     189F  3403               	retlw	3
  5960     18A0  3410               	retlw	16
  5961     18A1  3427               	retlw	39
  5962     18A2                     __end_of_dpowers:
  5963                           
  5964                           	psect	stringtext5
  5965     18A2                     __pstringtext5:
  5966     18A2                     _hexpowers:
  5967     18A2  3401               	retlw	1
  5968     18A3  3400               	retlw	0
  5969     18A4  3410               	retlw	16
  5970     18A5  3400               	retlw	0
  5971     18A6  3400               	retlw	0
  5972     18A7  3401               	retlw	1
  5973     18A8  3400               	retlw	0
  5974     18A9  3410               	retlw	16
  5975     18AA                     __end_of_hexpowers:
  5976                           
  5977                           	psect	nvBANK2
  5978     016D                     __pnvBANK2:
  5979     016D                     _TMR2_InterruptHandler:
  5980     016D                     	ds	2
  5981     000D                     _PORTBbits	set	13
  5982     000E                     _PORTCbits	set	14
  5983     000C                     _PORTAbits	set	12
  5984     000B                     _INTCONbits	set	11
  5985     0012                     _PIR2bits	set	18
  5986     0011                     _PIR1bits	set	17
  5987     0092                     _PIE2bits	set	146
  5988     0091                     _PIE1bits	set	145
  5989     0097                     _OPTION_REGbits	set	151
  5990     008E                     _TRISC	set	142
  5991     008D                     _TRISB	set	141
  5992     008C                     _TRISA	set	140
  5993     0090                     _TRISE	set	144
  5994     0099                     _WDTCON	set	153
  5995     009D                     _BORCON	set	157
  5996     009A                     _OSCTUNE	set	154
  5997     009C                     _OSCSTAT	set	156
  5998     009B                     _OSCCON	set	155
  5999     010E                     _LATC	set	270
  6000     010D                     _LATB	set	269
  6001     010C                     _LATA	set	268
  6002     018C                     _ANSELA	set	396
  6003     018D                     _ANSELB	set	397
  6004     018E                     _ANSELC	set	398
  6005     0214                     _SSP1STATbits	set	532
  6006     0216                     _SSP1CON2bits	set	534
  6007     0211                     _SSP1BUF	set	529
  6008     0215                     _SSP1CON1bits	set	533
  6009     0212                     _SSP1ADD	set	530
  6010     0216                     _SSP1CON2	set	534
  6011     0215                     _SSP1CON1	set	533
  6012     0214                     _SSP1STAT	set	532
  6013     020E                     _WPUC	set	526
  6014     020C                     _WPUA	set	524
  6015     020D                     _WPUB	set	525
  6016     0210                     _WPUE	set	528
  6017     028E                     _ODCONC	set	654
  6018     028D                     _ODCONB	set	653
  6019     028C                     _ODCONA	set	652
  6020     030E                     _SLRCONC	set	782
  6021     030D                     _SLRCONB	set	781
  6022     030C                     _SLRCONA	set	780
  6023     038E                     _INLVLC	set	910
  6024     038D                     _INLVLB	set	909
  6025     038C                     _INLVLA	set	908
  6026     0494                     _PR2	set	1172
  6027     0493                     _TMR2	set	1171
  6028     0495                     _T2CONbits	set	1173
  6029     0498                     _T2RSTbits	set	1176
  6030     0496                     _T2HLTbits	set	1174
  6031     0495                     _T2CON	set	1173
  6032     0493                     _T2TMR	set	1171
  6033     0494                     _T2PR	set	1172
  6034     0498                     _T2RST	set	1176
  6035     0496                     _T2HLT	set	1174
  6036     0497                     _T2CLKCON	set	1175
  6037     0DAD                     _PWM6INTFbits	set	3501
  6038     0DAF                     _PWM6LDCONbits	set	3503
  6039     0DAB                     _PWM6CONbits	set	3499
  6040     0DAB                     _PWM6CON	set	3499
  6041     0DA9                     _PWM6TMRL	set	3497
  6042     0DAA                     _PWM6TMRH	set	3498
  6043     0DA7                     _PWM6OFL	set	3495
  6044     0DA8                     _PWM6OFH	set	3496
  6045     0DA5                     _PWM6PRL	set	3493
  6046     0DA6                     _PWM6PRH	set	3494
  6047     0DA3                     _PWM6DCL	set	3491
  6048     0DA4                     _PWM6DCH	set	3492
  6049     0DA1                     _PWM6PHL	set	3489
  6050     0DA2                     _PWM6PHH	set	3490
  6051     0DB0                     _PWM6OFCON	set	3504
  6052     0DAF                     _PWM6LDCON	set	3503
  6053     0DAE                     _PWM6CLKCON	set	3502
  6054     0DAD                     _PWM6INTF	set	3501
  6055     0DAC                     _PWM6INTE	set	3500
  6056     0DBD                     _PWM11INTFbits	set	3517
  6057     0DBF                     _PWM11LDCONbits	set	3519
  6058     0DBB                     _PWM11CONbits	set	3515
  6059     0DBB                     _PWM11CON	set	3515
  6060     0DB9                     _PWM11TMRL	set	3513
  6061     0DBA                     _PWM11TMRH	set	3514
  6062     0DB7                     _PWM11OFL	set	3511
  6063     0DB8                     _PWM11OFH	set	3512
  6064     0DB5                     _PWM11PRL	set	3509
  6065     0DB6                     _PWM11PRH	set	3510
  6066     0DB3                     _PWM11DCL	set	3507
  6067     0DB4                     _PWM11DCH	set	3508
  6068     0DB1                     _PWM11PHL	set	3505
  6069     0DB2                     _PWM11PHH	set	3506
  6070     0DC0                     _PWM11OFCON	set	3520
  6071     0DBF                     _PWM11LDCON	set	3519
  6072     0DBE                     _PWM11CLKCON	set	3518
  6073     0DBD                     _PWM11INTF	set	3517
  6074     0DBC                     _PWM11INTE	set	3516
  6075     0E3A                     _SSPCLKPPS	set	3642
  6076     0E3B                     _SSPDATPPS	set	3643
  6077     0E95                     _RA5PPS	set	3733
  6078     0EA4                     _RC4PPS	set	3748
  6079     0EA3                     _RC3PPS	set	3747
  6080     0EA0                     _RC0PPS	set	3744
  6081                           
  6082                           	psect	stringtext6
  6083     1180                     __pstringtext6:
  6084     1180                     STR_24:
  6085     1180  3420               	retlw	32	;' '
  6086     1181  3420               	retlw	32	;' '
  6087     1182  3420               	retlw	32	;' '
  6088     1183  3420               	retlw	32	;' '
  6089     1184  3420               	retlw	32	;' '
  6090     1185  3420               	retlw	32	;' '
  6091     1186  3420               	retlw	32	;' '
  6092     1187  3420               	retlw	32	;' '
  6093     1188  3420               	retlw	32	;' '
  6094     1189  3420               	retlw	32	;' '
  6095     118A  3420               	retlw	32	;' '
  6096     118B  3420               	retlw	32	;' '
  6097     118C  3420               	retlw	32	;' '
  6098     118D  3420               	retlw	32	;' '
  6099     118E  3420               	retlw	32	;' '
  6100     118F  3420               	retlw	32	;' '
  6101     1190  3420               	retlw	32	;' '
  6102     1191  3420               	retlw	32	;' '
  6103     1192  3420               	retlw	32	;' '
  6104     1193  3420               	retlw	32	;' '
  6105     1194  3420               	retlw	32	;' '
  6106     1195  3420               	retlw	32	;' '
  6107     1196  3420               	retlw	32	;' '
  6108     1197  3420               	retlw	32	;' '
  6109     1198  3420               	retlw	32	;' '
  6110     1199  3420               	retlw	32	;' '
  6111     119A  3420               	retlw	32	;' '
  6112     119B  3420               	retlw	32	;' '
  6113     119C  3420               	retlw	32	;' '
  6114     119D  3420               	retlw	32	;' '
  6115     119E  3420               	retlw	32	;' '
  6116     119F  3420               	retlw	32	;' '
  6117     11A0  3420               	retlw	32	;' '
  6118     11A1  3420               	retlw	32	;' '
  6119     11A2  3420               	retlw	32	;' '
  6120     11A3  3420               	retlw	32	;' '
  6121     11A4  3420               	retlw	32	;' '
  6122     11A5  3420               	retlw	32	;' '
  6123     11A6  3420               	retlw	32	;' '
  6124     11A7  3420               	retlw	32	;' '
  6125     11A8  3420               	retlw	32	;' '
  6126     11A9  3420               	retlw	32	;' '
  6127     11AA  3420               	retlw	32	;' '
  6128     11AB  3420               	retlw	32	;' '
  6129     11AC  3420               	retlw	32	;' '
  6130     11AD  3420               	retlw	32	;' '
  6131     11AE  3420               	retlw	32	;' '
  6132     11AF  3420               	retlw	32	;' '
  6133     11B0  3420               	retlw	32	;' '
  6134     11B1  3420               	retlw	32	;' '
  6135     11B2  3420               	retlw	32	;' '
  6136     11B3  3420               	retlw	32	;' '
  6137     11B4  3420               	retlw	32	;' '
  6138     11B5  3420               	retlw	32	;' '
  6139     11B6  3420               	retlw	32	;' '
  6140     11B7  3420               	retlw	32	;' '
  6141     11B8  3420               	retlw	32	;' '
  6142     11B9  3420               	retlw	32	;' '
  6143     11BA  3420               	retlw	32	;' '
  6144     11BB  3420               	retlw	32	;' '
  6145     11BC  3420               	retlw	32	;' '
  6146     11BD  3400               	retlw	0
  6147                           
  6148                           	psect	stringtext7
  6149     1800                     __pstringtext7:
  6150     1800                     STR_35:
  6151     1800  3425               	retlw	37	;'%'
  6152     1801  3430               	retlw	48	;'0'
  6153     1802  3432               	retlw	50	;'2'
  6154     1803  3464               	retlw	100	;'d'
  6155     1804  343A               	retlw	58	;':'
  6156     1805  3425               	retlw	37	;'%'
  6157     1806  3430               	retlw	48	;'0'
  6158     1807  3432               	retlw	50	;'2'
  6159     1808  3464               	retlw	100	;'d'
  6160     1809  3420               	retlw	32	;' '
  6161     180A  3420               	retlw	32	;' '
  6162     180B  3420               	retlw	32	;' '
  6163     180C  3425               	retlw	37	;'%'
  6164     180D  3473               	retlw	115	;'s'
  6165     180E  3420               	retlw	32	;' '
  6166     180F  3425               	retlw	37	;'%'
  6167     1810  3473               	retlw	115	;'s'
  6168     1811  3420               	retlw	32	;' '
  6169     1812  3420               	retlw	32	;' '
  6170     1813  3420               	retlw	32	;' '
  6171     1814  3420               	retlw	32	;' '
  6172     1815  3420               	retlw	32	;' '
  6173     1816  3420               	retlw	32	;' '
  6174     1817  3420               	retlw	32	;' '
  6175     1818  3420               	retlw	32	;' '
  6176     1819  3420               	retlw	32	;' '
  6177     181A  3420               	retlw	32	;' '
  6178     181B  3420               	retlw	32	;' '
  6179     181C  3420               	retlw	32	;' '
  6180     181D  3420               	retlw	32	;' '
  6181     181E  3420               	retlw	32	;' '
  6182     181F  3420               	retlw	32	;' '
  6183     1820  3400               	retlw	0
  6184                           
  6185                           	psect	stringtext8
  6186     1841                     __pstringtext8:
  6187     1841                     STR_30:
  6188     1841  3425               	retlw	37	;'%'
  6189     1842  3464               	retlw	100	;'d'
  6190     1843  343A               	retlw	58	;':'
  6191     1844  3420               	retlw	32	;' '
  6192     1845  3425               	retlw	37	;'%'
  6193     1846  3473               	retlw	115	;'s'
  6194     1847  3420               	retlw	32	;' '
  6195     1848  343A               	retlw	58	;':'
  6196     1849  3425               	retlw	37	;'%'
  6197     184A  3464               	retlw	100	;'d'
  6198     184B  3420               	retlw	32	;' '
  6199     184C  3420               	retlw	32	;' '
  6200     184D  3420               	retlw	32	;' '
  6201     184E  3420               	retlw	32	;' '
  6202     184F  3420               	retlw	32	;' '
  6203     1850  3420               	retlw	32	;' '
  6204     1851  3420               	retlw	32	;' '
  6205     1852  3420               	retlw	32	;' '
  6206     1853  3420               	retlw	32	;' '
  6207     1854  3420               	retlw	32	;' '
  6208     1855  3420               	retlw	32	;' '
  6209     1856  3420               	retlw	32	;' '
  6210     1857  3420               	retlw	32	;' '
  6211     1858  3420               	retlw	32	;' '
  6212     1859  3420               	retlw	32	;' '
  6213     185A  3400               	retlw	0
  6214                           
  6215                           	psect	stringtext9
  6216     185B                     __pstringtext9:
  6217     185B                     STR_37:
  6218     185B  3430               	retlw	48	;'0'
  6219     185C  3431               	retlw	49	;'1'
  6220     185D  3432               	retlw	50	;'2'
  6221     185E  3433               	retlw	51	;'3'
  6222     185F  3434               	retlw	52	;'4'
  6223     1860  3435               	retlw	53	;'5'
  6224     1861  3436               	retlw	54	;'6'
  6225     1862  3437               	retlw	55	;'7'
  6226     1863  3438               	retlw	56	;'8'
  6227     1864  3439               	retlw	57	;'9'
  6228     1865  3461               	retlw	97	;'a'
  6229     1866  3462               	retlw	98	;'b'
  6230     1867  3463               	retlw	99	;'c'
  6231     1868  3464               	retlw	100	;'d'
  6232     1869  3465               	retlw	101	;'e'
  6233     186A  3466               	retlw	102	;'f'
  6234     186B  3400               	retlw	0
  6235                           
  6236                           	psect	stringtext10
  6237     186C                     __pstringtext10:
  6238     186C                     STR_29:
  6239     186C  3443               	retlw	67	;'C'
  6240     186D  344C               	retlw	76	;'L'
  6241     186E  344F               	retlw	79	;'O'
  6242     186F  3443               	retlw	67	;'C'
  6243     1870  344B               	retlw	75	;'K'
  6244     1871  3420               	retlw	32	;' '
  6245     1872  3441               	retlw	65	;'A'
  6246     1873  3444               	retlw	68	;'D'
  6247     1874  344A               	retlw	74	;'J'
  6248     1875  3420               	retlw	32	;' '
  6249     1876  344D               	retlw	77	;'M'
  6250     1877  344F               	retlw	79	;'O'
  6251     1878  3444               	retlw	68	;'D'
  6252     1879  3445               	retlw	69	;'E'
  6253     187A  3420               	retlw	32	;' '
  6254     187B  3400               	retlw	0
  6255                           
  6256                           	psect	stringtext11
  6257     187C                     __pstringtext11:
  6258     187C                     STR_31:
  6259     187C  3441               	retlw	65	;'A'
  6260     187D  344C               	retlw	76	;'L'
  6261     187E  3441               	retlw	65	;'A'
  6262     187F  3452               	retlw	82	;'R'
  6263     1880  344D               	retlw	77	;'M'
  6264     1881  3420               	retlw	32	;' '
  6265     1882  3453               	retlw	83	;'S'
  6266     1883  3445               	retlw	69	;'E'
  6267     1884  3454               	retlw	84	;'T'
  6268     1885  3420               	retlw	32	;' '
  6269     1886  344D               	retlw	77	;'M'
  6270     1887  344F               	retlw	79	;'O'
  6271     1888  3444               	retlw	68	;'D'
  6272     1889  3445               	retlw	69	;'E'
  6273     188A  3420               	retlw	32	;' '
  6274     188B  3400               	retlw	0
  6275                           
  6276                           	psect	stringtext12
  6277     188C                     __pstringtext12:
  6278     188C                     STR_23:
  6279     188C  344D               	retlw	77	;'M'
  6280     188D  344F               	retlw	79	;'O'
  6281     188E  3456               	retlw	86	;'V'
  6282     188F  3445               	retlw	69	;'E'
  6283     1890  3420               	retlw	32	;' '
  6284     1891  3453               	retlw	83	;'S'
  6285     1892  3445               	retlw	69	;'E'
  6286     1893  3452               	retlw	82	;'R'
  6287     1894  3456               	retlw	86	;'V'
  6288     1895  344F               	retlw	79	;'O'
  6289     1896  3420               	retlw	32	;' '
  6290     1897  3400               	retlw	0
  6291                           
  6292                           	psect	stringtext13
  6293     18AA                     __pstringtext13:
  6294     18AA                     STR_36:
  6295     18AA  3428               	retlw	40	;'('
  6296     18AB  346E               	retlw	110	;'n'
  6297     18AC  3475               	retlw	117	;'u'
  6298     18AD  346C               	retlw	108	;'l'
  6299     18AE  346C               	retlw	108	;'l'
  6300     18AF  3429               	retlw	41	;')'
  6301     18B0  3400               	retlw	0
  6302                           
  6303                           	psect	stringtext14
  6304     18B1                     __pstringtext14:
  6305     18B1                     STR_12:
  6306     18B1  3425               	retlw	37	;'%'
  6307     18B2  3430               	retlw	48	;'0'
  6308     18B3  3432               	retlw	50	;'2'
  6309     18B4  3478               	retlw	120	;'x'
  6310     18B5  343A               	retlw	58	;':'
  6311     18B6  3400               	retlw	0
  6312                           
  6313                           	psect	stringtext15
  6314     18B7                     __pstringtext15:
  6315     18B7                     STR_19:
  6316     18B7  3428               	retlw	40	;'('
  6317     18B8  3425               	retlw	37	;'%'
  6318     18B9  3473               	retlw	115	;'s'
  6319     18BA  3429               	retlw	41	;')'
  6320     18BB  3400               	retlw	0
  6321                           
  6322                           	psect	stringtext16
  6323     18BC                     __pstringtext16:
  6324     18BC                     STR_14:
  6325     18BC  3425               	retlw	37	;'%'
  6326     18BD  3430               	retlw	48	;'0'
  6327     18BE  3432               	retlw	50	;'2'
  6328     18BF  3478               	retlw	120	;'x'
  6329     18C0  3400               	retlw	0
  6330                           
  6331                           	psect	stringtext17
  6332     18C1                     __pstringtext17:
  6333     18C1                     STR_18:
  6334     18C1  3425               	retlw	37	;'%'
  6335     18C2  3478               	retlw	120	;'x'
  6336     18C3  3420               	retlw	32	;' '
  6337     18C4  3400               	retlw	0
  6338                           
  6339                           	psect	stringtext18
  6340     18C5                     __pstringtext18:
  6341     18C5                     STR_16:
  6342     18C5  3425               	retlw	37	;'%'
  6343     18C6  3478               	retlw	120	;'x'
  6344     18C7  342F               	retlw	47	;'/'
  6345     18C8  3400               	retlw	0
  6346                           
  6347                           	psect	stringtext19
  6348     18C9                     __pstringtext19:
  6349     18C9                     STR_4:
  6350     18C9  3457               	retlw	87	;'W'
  6351     18CA  3445               	retlw	69	;'E'
  6352     18CB  3444               	retlw	68	;'D'
  6353     18CC  3400               	retlw	0
  6354                           
  6355                           	psect	stringtext20
  6356     18CD                     __pstringtext20:
  6357     18CD                     STR_3:
  6358     18CD  3454               	retlw	84	;'T'
  6359     18CE  3455               	retlw	85	;'U'
  6360     18CF  3445               	retlw	69	;'E'
  6361     18D0  3400               	retlw	0
  6362                           
  6363                           	psect	stringtext21
  6364     18D1                     __pstringtext21:
  6365     18D1                     STR_6:
  6366     18D1  3446               	retlw	70	;'F'
  6367     18D2  3452               	retlw	82	;'R'
  6368     18D3  3449               	retlw	73	;'I'
  6369     18D4  3400               	retlw	0
  6370                           
  6371                           	psect	stringtext22
  6372     18D5                     __pstringtext22:
  6373     18D5                     STR_9:
  6374     18D5  3442               	retlw	66	;'B'
  6375     18D6  3454               	retlw	84	;'T'
  6376     18D7  344D               	retlw	77	;'M'
  6377     18D8  3400               	retlw	0
  6378                           
  6379                           	psect	stringtext23
  6380     18D9                     __pstringtext23:
  6381     18D9                     STR_2:
  6382     18D9  344D               	retlw	77	;'M'
  6383     18DA  344F               	retlw	79	;'O'
  6384     18DB  344E               	retlw	78	;'N'
  6385     18DC  3400               	retlw	0
  6386                           
  6387                           	psect	stringtext24
  6388     18DD                     __pstringtext24:
  6389     18DD                     STR_1:
  6390     18DD  3453               	retlw	83	;'S'
  6391     18DE  3455               	retlw	85	;'U'
  6392     18DF  344E               	retlw	78	;'N'
  6393     18E0  3400               	retlw	0
  6394                           
  6395                           	psect	stringtext25
  6396     18E1                     __pstringtext25:
  6397     18E1                     STR_8:
  6398     18E1  3454               	retlw	84	;'T'
  6399     18E2  344F               	retlw	79	;'O'
  6400     18E3  3450               	retlw	80	;'P'
  6401     18E4  3400               	retlw	0
  6402                           
  6403                           	psect	stringtext26
  6404     18E5                     __pstringtext26:
  6405     18E5                     STR_7:
  6406     18E5  3453               	retlw	83	;'S'
  6407     18E6  3441               	retlw	65	;'A'
  6408     18E7  3454               	retlw	84	;'T'
  6409     18E8  3400               	retlw	0
  6410                           
  6411                           	psect	stringtext27
  6412     18E9                     __pstringtext27:
  6413     18E9                     STR_5:
  6414     18E9  3454               	retlw	84	;'T'
  6415     18EA  3448               	retlw	72	;'H'
  6416     18EB  3455               	retlw	85	;'U'
  6417     18EC  3400               	retlw	0
  6418                           
  6419                           	psect	stringtext28
  6420     18ED                     __pstringtext28:
  6421     18ED                     STR_15:
  6422     18ED  3432               	retlw	50	;'2'
  6423     18EE  3430               	retlw	48	;'0'
  6424     18EF  3400               	retlw	0
  6425                           
  6426                           	psect	stringtext29
  6427     18F0                     __pstringtext29:
  6428     18F0                     STR_25:
  6429     18F0  3441               	retlw	65	;'A'
  6430     18F1  3441               	retlw	65	;'A'
  6431     18F2  3400               	retlw	0
  6432                           
  6433                           	psect	stringtext30
  6434     18F3                     __pstringtext30:
  6435     18F3                     STR_26:
  6436     18F3  3442               	retlw	66	;'B'
  6437     18F4  3442               	retlw	66	;'B'
  6438     18F5  3400               	retlw	0
  6439                           
  6440                           	psect	stringtext31
  6441     18F6                     __pstringtext31:
  6442     18F6                     STR_27:
  6443     18F6  3443               	retlw	67	;'C'
  6444     18F7  3443               	retlw	67	;'C'
  6445     18F8  3400               	retlw	0
  6446                           
  6447                           	psect	stringtext32
  6448     18F9                     __pstringtext32:
  6449     18F9                     STR_28:
  6450     18F9  3444               	retlw	68	;'D'
  6451     18FA  3444               	retlw	68	;'D'
  6452     18FB  3400               	retlw	0
  6453                           
  6454                           	psect	stringtext33
  6455     18FC                     __pstringtext33:
  6456     18FC                     STR_10:
  6457     18FC  344C               	retlw	76	;'L'
  6458     18FD  3400               	retlw	0
  6459                           
  6460                           	psect	stringtext34
  6461     18FE                     __pstringtext34:
  6462     18FE                     STR_11:
  6463     18FE  3452               	retlw	82	;'R'
  6464     18FF  3400               	retlw	0
  6465                           
  6466                           	psect	stringtext35
  6467     0000                     __pstringtext35:
  6468     11AD                     
  6469                           	psect	cinit
  6470     0038                     start_initialization:	
  6471                           ; #config settings
  6472                           
  6473     0038                     __initialization:	;BIGRAM_1
  6474                           
  6475                           ; Initialize objects allocated to BANK1
  6476     0038  30EF               	movlw	low __pidataBANK1
  6477     0039  0084               	movwf	4
  6478     003A  3093               	movlw	(high __pidataBANK1)| (0+128)
  6479     003B  0085               	movwf	5
  6480     003C  30E1               	movlw	low __pdataBANK1
  6481     003D  0086               	movwf	6
  6482     003E  3000               	movlw	high __pdataBANK1
  6483     003F  0087               	movwf	7
  6484     0040  3000               	movlw	0
  6485     0041  00FF               	movwf	btemp+1
  6486     0042  300E               	movlw	14
  6487     0043  3193  23BC  3180   	fcall	init_ram
  6488                           
  6489                           ; Initialize objects allocated to BANK2
  6490     0046  30E5               	movlw	low __pidataBANK2
  6491     0047  0084               	movwf	4
  6492     0048  3089               	movlw	(high __pidataBANK2)| (0+128)
  6493     0049  0085               	movwf	5
  6494     004A  3020               	movlw	low __pdataBANK2
  6495     004B  0086               	movwf	6
  6496     004C  3001               	movlw	high __pdataBANK2
  6497     004D  0087               	movwf	7
  6498     004E  3000               	movlw	0
  6499     004F  00FF               	movwf	btemp+1
  6500     0050  3049               	movlw	73
  6501     0051  3193  23BC  3180   	fcall	init_ram
  6502                           
  6503                           ; Initialize objects allocated to BANK3
  6504     0054  309F               	movlw	low __pidataBANK3
  6505     0055  0084               	movwf	4
  6506     0056  3089               	movlw	(high __pidataBANK3)| (0+128)
  6507     0057  0085               	movwf	5
  6508     0058  30A0               	movlw	low __pdataBANK3
  6509     0059  0086               	movwf	6
  6510     005A  3001               	movlw	high __pdataBANK3
  6511     005B  0087               	movwf	7
  6512     005C  3000               	movlw	0
  6513     005D  00FF               	movwf	btemp+1
  6514     005E  3046               	movlw	70
  6515     005F  3193  23BC  3180   	fcall	init_ram
  6516                           
  6517                           ; Initialize objects allocated to BANK4
  6518     0062  3094               	movlw	low __pidataBANK4
  6519     0063  0084               	movwf	4
  6520     0064  3088               	movlw	(high __pidataBANK4)| (0+128)
  6521     0065  0085               	movwf	5
  6522     0066  3020               	movlw	low __pdataBANK4
  6523     0067  0086               	movwf	6
  6524     0068  3002               	movlw	high __pdataBANK4
  6525     0069  0087               	movwf	7
  6526     006A  3000               	movlw	0
  6527     006B  00FF               	movwf	btemp+1
  6528     006C  3040               	movlw	64
  6529     006D  3193  23BC  3180   	fcall	init_ram
  6530                           
  6531                           ; Clear objects allocated to BIGRAM_1
  6532     0070  30F0               	movlw	low (0+9712)
  6533     0071  0084               	movwf	4
  6534     0072  3025               	movlw	high (0+9712)
  6535     0073  0085               	movwf	5
  6536     0074  3000               	movlw	0
  6537     0075  00FE               	movwf	btemp
  6538     0076  3002               	movlw	2
  6539     0077  00FF               	movwf	btemp+1
  6540     0078  3193  23B0  3180   	fcall	clear_ram0
  6541                           
  6542                           ; Clear objects allocated to BANK0
  6543     007B  01D8               	clrf	__pbssBANK0& (0+127)
  6544     007C  01D9               	clrf	(__pbssBANK0+1)& (0+127)
  6545     007D  01DA               	clrf	(__pbssBANK0+2)& (0+127)
  6546     007E  01DB               	clrf	(__pbssBANK0+3)& (0+127)
  6547     007F  01DC               	clrf	(__pbssBANK0+4)& (0+127)
  6548     0080  01DD               	clrf	(__pbssBANK0+5)& (0+127)
  6549     0081  01DE               	clrf	(__pbssBANK0+6)& (0+127)
  6550                           
  6551                           ; Clear objects allocated to BANK1
  6552     0082  30A0               	movlw	low __pbssBANK1
  6553     0083  0084               	movwf	4
  6554     0084  3000               	movlw	high __pbssBANK1
  6555     0085  0085               	movwf	5
  6556     0086  3041               	movlw	65
  6557     0087  00FE               	movwf	btemp
  6558     0088  3000               	movlw	0
  6559     0089  00FF               	movwf	btemp+1
  6560     008A  3193  23B0  3180   	fcall	clear_ram0
  6561                           
  6562                           ; Clear objects allocated to BANK2
  6563     008D  0022               	movlb	2	; select bank2
  6564     008E  01E9               	clrf	__pbssBANK2& (0+127)
  6565     008F  01EA               	clrf	(__pbssBANK2+1)& (0+127)
  6566     0090  01EB               	clrf	(__pbssBANK2+2)& (0+127)
  6567     0091  01EC               	clrf	(__pbssBANK2+3)& (0+127)
  6568     0092                     end_of_initialization:	
  6569                           ;End of C runtime variable initialization code
  6570                           
  6571     0092                     __end_of__initialization:
  6572     0092  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  6573     0093  0020               	movlb	0
  6574     0094  318E  2E54         	ljmp	_main	;jump to C main() function
  6575                           
  6576                           	psect	bssBANK0
  6577     0058                     __pbssBANK0:
  6578     0058                     _kind:
  6579     0058                     	ds	2
  6580     005A                     _DD:
  6581     005A                     	ds	1
  6582     005B                     _CC:
  6583     005B                     	ds	1
  6584     005C                     _BB:
  6585     005C                     	ds	1
  6586     005D                     _AA:
  6587     005D                     	ds	1
  6588     005E                     _Page:
  6589     005E                     	ds	1
  6590                           
  6591                           	psect	bssBANK1
  6592     00A0                     __pbssBANK1:
  6593     00A0                     _I2C_Status:
  6594     00A0                     	ds	30
  6595     00BE                     _res:
  6596     00BE                     	ds	4
  6597     00C2                     _adj_mode:
  6598     00C2                     	ds	2
  6599     00C4                     _tadj:
  6600     00C4                     	ds	2
  6601     00C6                     _wait:
  6602     00C6                     	ds	2
  6603     00C8                     _swipe_count:
  6604     00C8                     	ds	2
  6605     00CA                     _Duty2_cmp:
  6606     00CA                     	ds	2
  6607     00CC                     _Duty2:
  6608     00CC                     	ds	2
  6609     00CE                     _Duty_cmp:
  6610     00CE                     	ds	2
  6611     00D0                     _Duty:
  6612     00D0                     	ds	2
  6613     00D2                     _result:
  6614     00D2                     	ds	2
  6615     00D4                     _MSSP_InterruptHandler:
  6616     00D4                     	ds	2
  6617     00D6                     _REG_addr:
  6618     00D6                     	ds	1
  6619     00D7                     _ALM_H:
  6620     00D7                     	ds	1
  6621     00D8                     _ALM_M:
  6622     00D8                     	ds	1
  6623     00D9                     _Duty_add:
  6624     00D9                     	ds	1
  6625     00DA                     _alm_active:
  6626     00DA                     	ds	1
  6627     00DB                     _alm_set_flg:
  6628     00DB                     	ds	1
  6629     00DC                     _set_flg:
  6630     00DC                     	ds	1
  6631     00DD                     _Size:
  6632     00DD                     	ds	1
  6633     00DE                     _Hi_col:
  6634     00DE                     	ds	1
  6635     00DF                     _Low_col:
  6636     00DF                     	ds	1
  6637     00E0                     _Column:
  6638     00E0                     	ds	1
  6639                           
  6640                           	psect	dataBANK1
  6641     00E1                     __pdataBANK1:
  6642     00E1                     _REG:
  6643     00E1                     	ds	8
  6644     00E9                     _Posi_cmd:
  6645     00E9                     	ds	6
  6646                           
  6647                           	psect	bssBANK2
  6648     0169                     __pbssBANK2:
  6649     0169                     _Message:
  6650     0169                     	ds	2
  6651     016B                     _count:
  6652     016B                     	ds	2
  6653                           
  6654                           	psect	dataBANK2
  6655     0120                     __pdataBANK2:
  6656     0120                     _settei:
  6657     0120                     	ds	24
  6658     0138                     _alm_settei:
  6659     0138                     	ds	12
  6660     0144                     _DIR:
  6661     0144                     	ds	4
  6662     0148                     _SRV:
  6663     0148                     	ds	4
  6664     014C                     _Font12_data:
  6665     014C                     	ds	13
  6666     0159                     _CLR_cmd:
  6667     0159                     	ds	9
  6668     0162                     _Font6_data:
  6669     0162                     	ds	7
  6670                           
  6671                           	psect	dataBANK3
  6672     01A0                     __pdataBANK3:
  6673     01A0                     _alm_unit:
  6674     01A0                     	ds	40
  6675     01C8                     _week:
  6676     01C8                     	ds	14
  6677     01D6                     _unit2:
  6678     01D6                     	ds	16
  6679                           
  6680                           	psect	dataBANK4
  6681     0220                     __pdataBANK4:
  6682     0220                     _unit:
  6683     0220                     	ds	64
  6684                           
  6685                           	psect	inittext
  6686     13BC                     init_ram:
  6687     13BC  00FE               	movwf	btemp
  6688     13BD                     initloop:
  6689     13BD  0012               	moviw fsr0++
  6690     13BE  001E               	movwi fsr1++
  6691     13BF  3001               	movlw	1
  6692     13C0  02FE               	subwf	btemp,f
  6693     13C1  3000               	movlw	0
  6694     13C2  3BFF               	subwfb	btemp+1,f
  6695     13C3  087F               	movf	btemp+1,w
  6696     13C4  047E               	iorwf	btemp,w
  6697     13C5  1D03               	skipz
  6698     13C6  2BBD               	goto	initloop
  6699     13C7  3400               	retlw	0
  6700                           
  6701                           	psect	clrtext
  6702     13B0                     clear_ram0:	
  6703                           ;	Called with FSR0 containing the base address, and
  6704                           ;	btemp/btemp+1 has the size to clear
  6705                           
  6706     13B0  0064               	clrwdt	;clear the watchdog before getting into this loop
  6707     13B1                     clrloop0:
  6708     13B1  0180               	clrf	0	;clear RAM location pointed to by FSR
  6709     13B2  3101               	addfsr 0,1
  6710     13B3  3001               	movlw	1
  6711     13B4  02FE               	subwf	btemp,f
  6712     13B5  3000               	movlw	0
  6713     13B6  3BFF               	subwfb	btemp+1,f
  6714     13B7  087F               	movf	btemp+1,w
  6715     13B8  047E               	iorwf	btemp,w
  6716     13B9  1D03               	skipz
  6717     13BA  2BB1               	goto	clrloop0	;have we reached the end yet?
  6718     13BB  3400               	retlw	0	;all done for this memory range, return
  6719                           
  6720                           	psect	cstackCOMMON
  6721     0070                     __pcstackCOMMON:
  6722     0070                     ?_isdigit:
  6723     0070                     ?_I2C_Open:	
  6724                           ; 1 bit 
  6725                           
  6726     0070                     ?_I2C_MasterWrite:	
  6727                           ; 1 bytes @ 0x0
  6728                           
  6729     0070                     ?_I2C_Close:	
  6730                           ; 1 bytes @ 0x0
  6731                           
  6732     0070                     ?_I2C_MasterRead:	
  6733                           ; 1 bytes @ 0x0
  6734                           
  6735     0070                     ?_I2C_Initialize:	
  6736                           ; 1 bytes @ 0x0
  6737                           
  6738     0070                     ?_PIN_MANAGER_Initialize:	
  6739                           ; 1 bytes @ 0x0
  6740                           
  6741     0070                     ?_OSCILLATOR_Initialize:	
  6742                           ; 1 bytes @ 0x0
  6743                           
  6744     0070                     ?_WDT_Initialize:	
  6745                           ; 1 bytes @ 0x0
  6746                           
  6747     0070                     ?_PWM6_Initialize:	
  6748                           ; 1 bytes @ 0x0
  6749                           
  6750     0070                     ?_TMR2_Initialize:	
  6751                           ; 1 bytes @ 0x0
  6752                           
  6753     0070                     ?_TMR2_DefaultInterruptHandler:	
  6754                           ; 1 bytes @ 0x0
  6755                           
  6756     0070                     ??_TMR2_DefaultInterruptHandler:	
  6757                           ; 1 bytes @ 0x0
  6758                           
  6759     0070                     ?_TMR2_CallBack:	
  6760                           ; 1 bytes @ 0x0
  6761                           
  6762     0070                     ?_I2C_DO_IDLE:	
  6763                           ; 1 bytes @ 0x0
  6764                           
  6765     0070                     ??_I2C_DO_IDLE:	
  6766                           ; 1 bytes @ 0x0
  6767                           
  6768     0070                     ?_I2C_DO_SEND_ADR_READ:	
  6769                           ; 1 bytes @ 0x0
  6770                           
  6771     0070                     ??_I2C_DO_SEND_ADR_READ:	
  6772                           ; 1 bytes @ 0x0
  6773                           
  6774     0070                     ?_I2C_DO_SEND_ADR_WRITE:	
  6775                           ; 1 bytes @ 0x0
  6776                           
  6777     0070                     ?_I2C_DO_TX:	
  6778                           ; 1 bytes @ 0x0
  6779                           
  6780     0070                     ?_I2C_DO_RX:	
  6781                           ; 1 bytes @ 0x0
  6782                           
  6783     0070                     ?_I2C_DO_RCEN:	
  6784                           ; 1 bytes @ 0x0
  6785                           
  6786     0070                     ??_I2C_DO_RCEN:	
  6787                           ; 1 bytes @ 0x0
  6788                           
  6789     0070                     ?_I2C_DO_TX_EMPTY:	
  6790                           ; 1 bytes @ 0x0
  6791                           
  6792     0070                     ?_I2C_DO_SEND_RESTART_READ:	
  6793                           ; 1 bytes @ 0x0
  6794                           
  6795     0070                     ??_I2C_DO_SEND_RESTART_READ:	
  6796                           ; 1 bytes @ 0x0
  6797                           
  6798     0070                     ?_I2C_DO_SEND_RESTART_WRITE:	
  6799                           ; 1 bytes @ 0x0
  6800                           
  6801     0070                     ??_I2C_DO_SEND_RESTART_WRITE:	
  6802                           ; 1 bytes @ 0x0
  6803                           
  6804     0070                     ?_I2C_DO_SEND_RESTART:	
  6805                           ; 1 bytes @ 0x0
  6806                           
  6807     0070                     ??_I2C_DO_SEND_RESTART:	
  6808                           ; 1 bytes @ 0x0
  6809                           
  6810     0070                     ?_I2C_DO_SEND_STOP:	
  6811                           ; 1 bytes @ 0x0
  6812                           
  6813     0070                     ??_I2C_DO_SEND_STOP:	
  6814                           ; 1 bytes @ 0x0
  6815                           
  6816     0070                     ?_I2C_DO_RX_ACK:	
  6817                           ; 1 bytes @ 0x0
  6818                           
  6819     0070                     ??_I2C_DO_RX_ACK:	
  6820                           ; 1 bytes @ 0x0
  6821                           
  6822     0070                     ?_I2C_DO_RX_NACK_STOP:	
  6823                           ; 1 bytes @ 0x0
  6824                           
  6825     0070                     ??_I2C_DO_RX_NACK_STOP:	
  6826                           ; 1 bytes @ 0x0
  6827                           
  6828     0070                     ?_I2C_DO_RX_NACK_RESTART:	
  6829                           ; 1 bytes @ 0x0
  6830                           
  6831     0070                     ??_I2C_DO_RX_NACK_RESTART:	
  6832                           ; 1 bytes @ 0x0
  6833                           
  6834     0070                     ?_I2C_DO_RESET:	
  6835                           ; 1 bytes @ 0x0
  6836                           
  6837     0070                     ??_I2C_DO_RESET:	
  6838                           ; 1 bytes @ 0x0
  6839                           
  6840     0070                     ?_I2C_DO_ADDRESS_NACK:	
  6841                           ; 1 bytes @ 0x0
  6842                           
  6843     0070                     ?_I2C_MasterIsr:	
  6844                           ; 1 bytes @ 0x0
  6845                           
  6846     0070                     ?_I2C_MasterClearIrq:	
  6847                           ; 1 bytes @ 0x0
  6848                           
  6849     0070                     ?_I2C_MasterOpen:	
  6850                           ; 1 bytes @ 0x0
  6851                           
  6852     0070                     ?_I2C_MasterEnableIrq:	
  6853                           ; 1 bytes @ 0x0
  6854                           
  6855     0070                     ?_I2C_MasterDisableIrq:	
  6856                           ; 1 bytes @ 0x0
  6857                           
  6858     0070                     ?_I2C_MasterClose:	
  6859                           ; 1 bytes @ 0x0
  6860                           
  6861     0070                     ?_I2C_MasterStart:	
  6862                           ; 1 bytes @ 0x0
  6863                           
  6864     0070                     ?_I2C_MasterFsm:	
  6865                           ; 1 bytes @ 0x0
  6866                           
  6867     0070                     ?_I2C_MasterIsNack:	
  6868                           ; 1 bytes @ 0x0
  6869                           
  6870     0070                     ??_I2C_MasterIsNack:	
  6871                           ; 1 bytes @ 0x0
  6872                           
  6873     0070                     ?_I2C_MasterSendTxData:	
  6874                           ; 1 bytes @ 0x0
  6875                           
  6876     0070                     ??_I2C_MasterSendTxData:	
  6877                           ; 1 bytes @ 0x0
  6878                           
  6879     0070                     ?_I2C_MasterGetRxData:	
  6880                           ; 1 bytes @ 0x0
  6881                           
  6882     0070                     ??_I2C_MasterGetRxData:	
  6883                           ; 1 bytes @ 0x0
  6884                           
  6885     0070                     ?_I2C_MasterSendAck:	
  6886                           ; 1 bytes @ 0x0
  6887                           
  6888     0070                     ??_I2C_MasterSendAck:	
  6889                           ; 1 bytes @ 0x0
  6890                           
  6891     0070                     ?_I2C_MasterStartRx:	
  6892                           ; 1 bytes @ 0x0
  6893                           
  6894     0070                     ??_I2C_MasterStartRx:	
  6895                           ; 1 bytes @ 0x0
  6896                           
  6897     0070                     ?_I2C_MasterSetIrq:	
  6898                           ; 1 bytes @ 0x0
  6899                           
  6900     0070                     ??_I2C_MasterSetIrq:	
  6901                           ; 1 bytes @ 0x0
  6902                           
  6903     0070                     ?_I2C_MasterEnableRestart:	
  6904                           ; 1 bytes @ 0x0
  6905                           
  6906     0070                     ??_I2C_MasterEnableRestart:	
  6907                           ; 1 bytes @ 0x0
  6908                           
  6909     0070                     ?_I2C_MasterStop:	
  6910                           ; 1 bytes @ 0x0
  6911                           
  6912     0070                     ??_I2C_MasterStop:	
  6913                           ; 1 bytes @ 0x0
  6914                           
  6915     0070                     ?_I2C_MasterSendNack:	
  6916                           ; 1 bytes @ 0x0
  6917                           
  6918     0070                     ??_I2C_MasterSendNack:	
  6919                           ; 1 bytes @ 0x0
  6920                           
  6921     0070                     ?_PWM11_Initialize:	
  6922                           ; 1 bytes @ 0x0
  6923                           
  6924     0070                     ?_PWM11_LoadBufferSet:	
  6925                           ; 1 bytes @ 0x0
  6926                           
  6927     0070                     ?_SYSTEM_Initialize:	
  6928                           ; 1 bytes @ 0x0
  6929                           
  6930     0070                     ?_TMR2_ISR:	
  6931                           ; 1 bytes @ 0x0
  6932                           
  6933     0070                     ?_I2C_MasterOperation:	
  6934                           ; 1 bytes @ 0x0
  6935                           
  6936     0070                     ?_INTERRUPT_InterruptManager:	
  6937                           ; 1 bytes @ 0x0
  6938                           
  6939     0070                     ?_PWM6_LoadBufferSet:	
  6940                           ; 1 bytes @ 0x0
  6941                           
  6942     0070                     ?_Time_data_write:	
  6943                           ; 1 bytes @ 0x0
  6944                           
  6945     0070                     ?_Time_data_read:	
  6946                           ; 1 bytes @ 0x0
  6947                           
  6948     0070                     ?_Alarm_set:	
  6949                           ; 1 bytes @ 0x0
  6950                           
  6951     0070                     ?_Clock_set:	
  6952                           ; 1 bytes @ 0x0
  6953                           
  6954     0070                     ?_OLED_cmd:	
  6955                           ; 1 bytes @ 0x0
  6956                           
  6957     0070                     ?_OLED_data:	
  6958                           ; 1 bytes @ 0x0
  6959                           
  6960     0070                     ?_OLED_init:	
  6961                           ; 1 bytes @ 0x0
  6962                           
  6963     0070                     ?_OLED_clr:	
  6964                           ; 1 bytes @ 0x0
  6965                           
  6966     0070                     ?_chr6:	
  6967                           ; 1 bytes @ 0x0
  6968                           
  6969     0070                     ?_chr12:	
  6970                           ; 1 bytes @ 0x0
  6971                           
  6972     0070                     ?_putch:	
  6973                           ; 1 bytes @ 0x0
  6974                           
  6975     0070                     ?_RTC_disp:	
  6976                           ; 1 bytes @ 0x0
  6977                           
  6978     0070                     ?_MoveServo:	
  6979                           ; 1 bytes @ 0x0
  6980                           
  6981     0070                     ?_TMR2_Process:	
  6982                           ; 1 bytes @ 0x0
  6983                           
  6984     0070                     ?_main:	
  6985                           ; 1 bytes @ 0x0
  6986                           
  6987     0070                     ?i1_PWM11_LoadBufferSet:	
  6988                           ; 1 bytes @ 0x0
  6989                           
  6990     0070                     ??i1_PWM11_LoadBufferSet:	
  6991                           ; 1 bytes @ 0x0
  6992                           
  6993     0070                     ?i1_PWM11_DutyCycleSet:	
  6994                           ; 1 bytes @ 0x0
  6995                           
  6996     0070                     ?i1_I2C_SetBuffer:	
  6997                           ; 1 bytes @ 0x0
  6998                           
  6999     0070                     ?i1_I2C_SetCallback:	
  7000                           ; 1 bytes @ 0x0
  7001                           
  7002     0070                     ?i1_I2C_MasterClearIrq:	
  7003                           ; 1 bytes @ 0x0
  7004                           
  7005     0070                     ??i1_I2C_MasterClearIrq:	
  7006                           ; 1 bytes @ 0x0
  7007                           
  7008     0070                     ?i1_PWM6_LoadBufferSet:	
  7009                           ; 1 bytes @ 0x0
  7010                           
  7011     0070                     ??i1_PWM6_LoadBufferSet:	
  7012                           ; 1 bytes @ 0x0
  7013                           
  7014     0070                     ?i1_PWM6_DutyCycleSet:	
  7015                           ; 1 bytes @ 0x0
  7016                           
  7017     0070                     ?i1___bmul:	
  7018                           ; 1 bytes @ 0x0
  7019                           
  7020     0070                     I2C_MasterSendTxData@data:	
  7021                           ; 1 bytes @ 0x0
  7022                           
  7023     0070                     i1___bmul@multiplicand:	
  7024                           ; 1 bytes @ 0x0
  7025                           
  7026     0070                     i1PWM11_DutyCycleSet@dutyCycleCount:	
  7027                           ; 1 bytes @ 0x0
  7028                           
  7029     0070                     i1I2C_SetBuffer@buffer:	
  7030                           ; 2 bytes @ 0x0
  7031                           
  7032     0070                     i1I2C_SetCallback@cb:	
  7033                           ; 2 bytes @ 0x0
  7034                           
  7035     0070                     i1PWM6_DutyCycleSet@dutyCycleCount:	
  7036                           ; 2 bytes @ 0x0
  7037                           
  7038                           
  7039                           ; 2 bytes @ 0x0
  7040     0070                     	ds	1
  7041     0071                     ??_I2C_DO_SEND_ADR_WRITE:
  7042     0071                     ??i1___bmul:	
  7043                           ; 1 bytes @ 0x1
  7044                           
  7045                           
  7046                           ; 1 bytes @ 0x1
  7047     0071                     	ds	1
  7048     0072                     ??i1_PWM11_DutyCycleSet:
  7049     0072                     ??i1_PWM6_DutyCycleSet:	
  7050                           ; 1 bytes @ 0x2
  7051                           
  7052     0072                     ?i1_Pen_swipe:	
  7053                           ; 1 bytes @ 0x2
  7054                           
  7055     0072                     ?i1_Pen_swipe2:	
  7056                           ; 1 bytes @ 0x2
  7057                           
  7058     0072                     i1I2C_SetCallback@ptr:	
  7059                           ; 1 bytes @ 0x2
  7060                           
  7061     0072                     i1___bmul@product:	
  7062                           ; 1 bytes @ 0x2
  7063                           
  7064     0072                     i1I2C_SetBuffer@bufferSize:	
  7065                           ; 1 bytes @ 0x2
  7066                           
  7067     0072                     i1Pen_swipe@set_duty:	
  7068                           ; 2 bytes @ 0x2
  7069                           
  7070     0072                     i1Pen_swipe2@set_duty:	
  7071                           ; 2 bytes @ 0x2
  7072                           
  7073                           
  7074                           ; 2 bytes @ 0x2
  7075     0072                     	ds	1
  7076     0073                     ??i1_I2C_SetCallback:
  7077     0073                     i1I2C_SetCallback@idx:	
  7078                           ; 1 bytes @ 0x3
  7079                           
  7080     0073                     i1___bmul@multiplier:	
  7081                           ; 1 bytes @ 0x3
  7082                           
  7083                           
  7084                           ; 1 bytes @ 0x3
  7085     0073                     	ds	1
  7086     0074                     ?_Time_Adj:
  7087     0074                     ?_Alm_Adj:	
  7088                           ; 1 bytes @ 0x4
  7089                           
  7090     0074                     ??i1_I2C_SetBuffer:	
  7091                           ; 1 bytes @ 0x4
  7092                           
  7093     0074                     ?i1_I2C_SetDataCompleteCallback:	
  7094                           ; 1 bytes @ 0x4
  7095                           
  7096     0074                     ??i1_Pen_swipe:	
  7097                           ; 1 bytes @ 0x4
  7098                           
  7099     0074                     ??i1_Pen_swipe2:	
  7100                           ; 1 bytes @ 0x4
  7101                           
  7102     0074                     Time_Adj@num:	
  7103                           ; 1 bytes @ 0x4
  7104                           
  7105     0074                     Alm_Adj@num:	
  7106                           ; 2 bytes @ 0x4
  7107                           
  7108     0074                     i1I2C_SetDataCompleteCallback@cb:	
  7109                           ; 2 bytes @ 0x4
  7110                           
  7111                           
  7112                           ; 2 bytes @ 0x4
  7113     0074                     	ds	2
  7114     0076                     ??_Time_Adj:
  7115     0076                     ??_Alm_Adj:	
  7116                           ; 1 bytes @ 0x6
  7117                           
  7118     0076                     i1I2C_SetDataCompleteCallback@ptr:	
  7119                           ; 1 bytes @ 0x6
  7120                           
  7121                           
  7122                           ; 1 bytes @ 0x6
  7123     0076                     	ds	1
  7124     0077                     ?_rd1RegCompleteHandler:
  7125     0077                     ?_rd2RegCompleteHandler:	
  7126                           ; 1 bytes @ 0x7
  7127                           
  7128     0077                     ?_wr1RegCompleteHandler:	
  7129                           ; 1 bytes @ 0x7
  7130                           
  7131     0077                     ?_wr2RegCompleteHandler:	
  7132                           ; 1 bytes @ 0x7
  7133                           
  7134     0077                     ?_rdBlkRegCompleteHandler:	
  7135                           ; 1 bytes @ 0x7
  7136                           
  7137     0077                     ??_TMR2_CallBack:	
  7138                           ; 1 bytes @ 0x7
  7139                           
  7140     0077                     ?_I2C_CallbackReturnStop:	
  7141                           ; 1 bytes @ 0x7
  7142                           
  7143     0077                     ?_I2C_CallbackReturnReset:	
  7144                           ; 1 bytes @ 0x7
  7145                           
  7146     0077                     ??_TMR2_ISR:	
  7147                           ; 1 bytes @ 0x7
  7148                           
  7149     0077                     ??_TMR2_Process:	
  7150                           ; 1 bytes @ 0x7
  7151                           
  7152     0077                     ??i1_I2C_SetDataCompleteCallback:	
  7153                           ; 1 bytes @ 0x7
  7154                           
  7155     0077                     rd1RegCompleteHandler@ptr:	
  7156                           ; 1 bytes @ 0x7
  7157                           
  7158     0077                     rd2RegCompleteHandler@ptr:	
  7159                           ; 1 bytes @ 0x7
  7160                           
  7161     0077                     wr1RegCompleteHandler@ptr:	
  7162                           ; 1 bytes @ 0x7
  7163                           
  7164     0077                     wr2RegCompleteHandler@ptr:	
  7165                           ; 1 bytes @ 0x7
  7166                           
  7167     0077                     rdBlkRegCompleteHandler@ptr:	
  7168                           ; 1 bytes @ 0x7
  7169                           
  7170     0077                     I2C_CallbackReturnStop@funPtr:	
  7171                           ; 1 bytes @ 0x7
  7172                           
  7173     0077                     I2C_CallbackReturnReset@funPtr:	
  7174                           ; 1 bytes @ 0x7
  7175                           
  7176                           
  7177                           ; 1 bytes @ 0x7
  7178     0077                     	ds	1
  7179     0078                     ??_rd1RegCompleteHandler:
  7180     0078                     ??_rd2RegCompleteHandler:	
  7181                           ; 1 bytes @ 0x8
  7182                           
  7183     0078                     ??_wr1RegCompleteHandler:	
  7184                           ; 1 bytes @ 0x8
  7185                           
  7186     0078                     ??_wr2RegCompleteHandler:	
  7187                           ; 1 bytes @ 0x8
  7188                           
  7189     0078                     ??_rdBlkRegCompleteHandler:	
  7190                           ; 1 bytes @ 0x8
  7191                           
  7192     0078                     ??_I2C_DO_TX:	
  7193                           ; 1 bytes @ 0x8
  7194                           
  7195     0078                     ??_I2C_DO_RX:	
  7196                           ; 1 bytes @ 0x8
  7197                           
  7198     0078                     ??_I2C_DO_TX_EMPTY:	
  7199                           ; 1 bytes @ 0x8
  7200                           
  7201     0078                     ??_I2C_DO_ADDRESS_NACK:	
  7202                           ; 1 bytes @ 0x8
  7203                           
  7204     0078                     ??_I2C_CallbackReturnStop:	
  7205                           ; 1 bytes @ 0x8
  7206                           
  7207     0078                     ??_I2C_CallbackReturnReset:	
  7208                           ; 1 bytes @ 0x8
  7209                           
  7210                           
  7211                           ; 1 bytes @ 0x8
  7212     0078                     	ds	2
  7213     007A                     _I2C_DO_TX$1209:
  7214                           
  7215                           ; 2 bytes @ 0xA
  7216     007A                     	ds	2
  7217     007C                     ??_I2C_MasterFsm:
  7218                           
  7219                           ; 1 bytes @ 0xC
  7220     007C                     	ds	2
  7221     007E                     ??_I2C_MasterIsr:
  7222     007E                     ??_INTERRUPT_InterruptManager:	
  7223                           ; 1 bytes @ 0xE
  7224                           
  7225                           
  7226                           	psect	cstackBANK0
  7227     0020                     __pcstackBANK0:	
  7228                           ; 1 bytes @ 0xE
  7229                           
  7230     0020                     ?_I2C_SetBuffer:
  7231     0020                     ??_I2C_Close:	
  7232                           ; 1 bytes @ 0x0
  7233                           
  7234     0020                     ??_I2C_Initialize:	
  7235                           ; 1 bytes @ 0x0
  7236                           
  7237     0020                     ??_PIN_MANAGER_Initialize:	
  7238                           ; 1 bytes @ 0x0
  7239                           
  7240     0020                     ??_OSCILLATOR_Initialize:	
  7241                           ; 1 bytes @ 0x0
  7242                           
  7243     0020                     ??_WDT_Initialize:	
  7244                           ; 1 bytes @ 0x0
  7245                           
  7246     0020                     ??_PWM6_Initialize:	
  7247                           ; 1 bytes @ 0x0
  7248                           
  7249     0020                     ?_TMR2_SetInterruptHandler:	
  7250                           ; 1 bytes @ 0x0
  7251                           
  7252     0020                     ?_I2C_SetInterruptHandler:	
  7253                           ; 1 bytes @ 0x0
  7254                           
  7255     0020                     ??_I2C_MasterClearIrq:	
  7256                           ; 1 bytes @ 0x0
  7257                           
  7258     0020                     ??_I2C_MasterOpen:	
  7259                           ; 1 bytes @ 0x0
  7260                           
  7261     0020                     ??_I2C_MasterEnableIrq:	
  7262                           ; 1 bytes @ 0x0
  7263                           
  7264     0020                     ??_I2C_MasterDisableIrq:	
  7265                           ; 1 bytes @ 0x0
  7266                           
  7267     0020                     ??_I2C_MasterClose:	
  7268                           ; 1 bytes @ 0x0
  7269                           
  7270     0020                     ??_I2C_MasterStart:	
  7271                           ; 1 bytes @ 0x0
  7272                           
  7273     0020                     ?_I2C_SetCallback:	
  7274                           ; 1 bytes @ 0x0
  7275                           
  7276     0020                     ??_isdigit:	
  7277                           ; 1 bytes @ 0x0
  7278                           
  7279     0020                     ??_PWM11_Initialize:	
  7280                           ; 1 bytes @ 0x0
  7281                           
  7282     0020                     ??_PWM11_LoadBufferSet:	
  7283                           ; 1 bytes @ 0x0
  7284                           
  7285     0020                     ?_PWM11_DutyCycleSet:	
  7286                           ; 1 bytes @ 0x0
  7287                           
  7288     0020                     ??_I2C_MasterOperation:	
  7289                           ; 1 bytes @ 0x0
  7290                           
  7291     0020                     ??_PWM6_LoadBufferSet:	
  7292                           ; 1 bytes @ 0x0
  7293                           
  7294     0020                     ?_PWM6_DutyCycleSet:	
  7295                           ; 1 bytes @ 0x0
  7296                           
  7297     0020                     ?___bmul:	
  7298                           ; 1 bytes @ 0x0
  7299                           
  7300     0020                     ?___wmul:	
  7301                           ; 1 bytes @ 0x0
  7302                           
  7303     0020                     ?___awdiv:	
  7304                           ; 2 bytes @ 0x0
  7305                           
  7306     0020                     ?___awmod:	
  7307                           ; 2 bytes @ 0x0
  7308                           
  7309     0020                     ?___lwdiv:	
  7310                           ; 2 bytes @ 0x0
  7311                           
  7312     0020                     I2C_Close@returnValue:	
  7313                           ; 2 bytes @ 0x0
  7314                           
  7315     0020                     I2C_MasterOperation@read:	
  7316                           ; 1 bytes @ 0x0
  7317                           
  7318     0020                     ___bmul@multiplicand:	
  7319                           ; 1 bytes @ 0x0
  7320                           
  7321     0020                     _isdigit$2223:	
  7322                           ; 1 bytes @ 0x0
  7323                           
  7324     0020                     PWM11_DutyCycleSet@dutyCycleCount:	
  7325                           ; 1 bytes @ 0x0
  7326                           
  7327     0020                     TMR2_SetInterruptHandler@InterruptHandler:	
  7328                           ; 2 bytes @ 0x0
  7329                           
  7330     0020                     I2C_SetBuffer@buffer:	
  7331                           ; 2 bytes @ 0x0
  7332                           
  7333     0020                     I2C_SetInterruptHandler@InterruptHandler:	
  7334                           ; 2 bytes @ 0x0
  7335                           
  7336     0020                     I2C_SetCallback@cb:	
  7337                           ; 2 bytes @ 0x0
  7338                           
  7339     0020                     PWM6_DutyCycleSet@dutyCycleCount:	
  7340                           ; 2 bytes @ 0x0
  7341                           
  7342     0020                     ___wmul@multiplier:	
  7343                           ; 2 bytes @ 0x0
  7344                           
  7345     0020                     ___awdiv@divisor:	
  7346                           ; 2 bytes @ 0x0
  7347                           
  7348     0020                     ___awmod@divisor:	
  7349                           ; 2 bytes @ 0x0
  7350                           
  7351     0020                     ___lwdiv@divisor:	
  7352                           ; 2 bytes @ 0x0
  7353                           
  7354                           
  7355                           ; 2 bytes @ 0x0
  7356     0020                     	ds	1
  7357     0021                     ??___bmul:
  7358     0021                     I2C_MasterOperation@returnValue:	
  7359                           ; 1 bytes @ 0x1
  7360                           
  7361     0021                     isdigit@c:	
  7362                           ; 1 bytes @ 0x1
  7363                           
  7364                           
  7365                           ; 1 bytes @ 0x1
  7366     0021                     	ds	1
  7367     0022                     ??_I2C_Open:
  7368     0022                     ??_I2C_MasterWrite:	
  7369                           ; 1 bytes @ 0x2
  7370                           
  7371     0022                     ??_I2C_MasterRead:	
  7372                           ; 1 bytes @ 0x2
  7373                           
  7374     0022                     ??_TMR2_Initialize:	
  7375                           ; 1 bytes @ 0x2
  7376                           
  7377     0022                     ??_TMR2_SetInterruptHandler:	
  7378                           ; 1 bytes @ 0x2
  7379                           
  7380     0022                     ??_I2C_SetInterruptHandler:	
  7381                           ; 1 bytes @ 0x2
  7382                           
  7383     0022                     ??_PWM11_DutyCycleSet:	
  7384                           ; 1 bytes @ 0x2
  7385                           
  7386     0022                     ??_SYSTEM_Initialize:	
  7387                           ; 1 bytes @ 0x2
  7388                           
  7389     0022                     ??_PWM6_DutyCycleSet:	
  7390                           ; 1 bytes @ 0x2
  7391                           
  7392     0022                     ?_Pen_swipe:	
  7393                           ; 1 bytes @ 0x2
  7394                           
  7395     0022                     ?_Pen_swipe2:	
  7396                           ; 1 bytes @ 0x2
  7397                           
  7398     0022                     I2C_Open@address:	
  7399                           ; 1 bytes @ 0x2
  7400                           
  7401     0022                     I2C_SetCallback@ptr:	
  7402                           ; 1 bytes @ 0x2
  7403                           
  7404     0022                     ___bmul@product:	
  7405                           ; 1 bytes @ 0x2
  7406                           
  7407     0022                     I2C_SetBuffer@bufferSize:	
  7408                           ; 1 bytes @ 0x2
  7409                           
  7410     0022                     Pen_swipe@set_duty:	
  7411                           ; 2 bytes @ 0x2
  7412                           
  7413     0022                     Pen_swipe2@set_duty:	
  7414                           ; 2 bytes @ 0x2
  7415                           
  7416     0022                     ___wmul@multiplicand:	
  7417                           ; 2 bytes @ 0x2
  7418                           
  7419     0022                     ___awdiv@dividend:	
  7420                           ; 2 bytes @ 0x2
  7421                           
  7422     0022                     ___awmod@dividend:	
  7423                           ; 2 bytes @ 0x2
  7424                           
  7425     0022                     ___lwdiv@dividend:	
  7426                           ; 2 bytes @ 0x2
  7427                           
  7428                           
  7429                           ; 2 bytes @ 0x2
  7430     0022                     	ds	1
  7431     0023                     ??_I2C_SetCallback:
  7432     0023                     I2C_Open@returnValue:	
  7433                           ; 1 bytes @ 0x3
  7434                           
  7435     0023                     I2C_SetCallback@idx:	
  7436                           ; 1 bytes @ 0x3
  7437                           
  7438     0023                     ___bmul@multiplier:	
  7439                           ; 1 bytes @ 0x3
  7440                           
  7441                           
  7442                           ; 1 bytes @ 0x3
  7443     0023                     	ds	1
  7444     0024                     ?_I2C_SetDataCompleteCallback:
  7445     0024                     ??_I2C_SetBuffer:	
  7446                           ; 1 bytes @ 0x4
  7447                           
  7448     0024                     ?_I2C_SetAddressNackCallback:	
  7449                           ; 1 bytes @ 0x4
  7450                           
  7451     0024                     ?_I2C_ReadNBytes:	
  7452                           ; 1 bytes @ 0x4
  7453                           
  7454     0024                     ??_Pen_swipe:	
  7455                           ; 1 bytes @ 0x4
  7456                           
  7457     0024                     ??_Pen_swipe2:	
  7458                           ; 1 bytes @ 0x4
  7459                           
  7460     0024                     ??___wmul:	
  7461                           ; 1 bytes @ 0x4
  7462                           
  7463     0024                     ??___awdiv:	
  7464                           ; 1 bytes @ 0x4
  7465                           
  7466     0024                     ??___awmod:	
  7467                           ; 1 bytes @ 0x4
  7468                           
  7469     0024                     ??___lwdiv:	
  7470                           ; 1 bytes @ 0x4
  7471                           
  7472     0024                     I2C_ReadNBytes@data:	
  7473                           ; 1 bytes @ 0x4
  7474                           
  7475     0024                     I2C_SetDataCompleteCallback@cb:	
  7476                           ; 1 bytes @ 0x4
  7477                           
  7478     0024                     I2C_SetAddressNackCallback@cb:	
  7479                           ; 2 bytes @ 0x4
  7480                           
  7481     0024                     ___wmul@product:	
  7482                           ; 2 bytes @ 0x4
  7483                           
  7484                           
  7485                           ; 2 bytes @ 0x4
  7486     0024                     	ds	1
  7487     0025                     ___awdiv@counter:
  7488     0025                     ___awmod@counter:	
  7489                           ; 1 bytes @ 0x5
  7490                           
  7491     0025                     I2C_ReadNBytes@len:	
  7492                           ; 1 bytes @ 0x5
  7493                           
  7494     0025                     ___lwdiv@quotient:	
  7495                           ; 2 bytes @ 0x5
  7496                           
  7497                           
  7498                           ; 2 bytes @ 0x5
  7499     0025                     	ds	1
  7500     0026                     I2C_SetDataCompleteCallback@ptr:
  7501     0026                     ___awdiv@sign:	
  7502                           ; 1 bytes @ 0x6
  7503                           
  7504     0026                     ___awmod@sign:	
  7505                           ; 1 bytes @ 0x6
  7506                           
  7507     0026                     I2C_SetAddressNackCallback@ptr:	
  7508                           ; 1 bytes @ 0x6
  7509                           
  7510                           
  7511                           ; 2 bytes @ 0x6
  7512     0026                     	ds	1
  7513     0027                     ??_I2C_SetDataCompleteCallback:
  7514     0027                     ??_I2C_ReadNBytes:	
  7515                           ; 1 bytes @ 0x7
  7516                           
  7517     0027                     I2C_ReadNBytes@address:	
  7518                           ; 1 bytes @ 0x7
  7519                           
  7520     0027                     ___lwdiv@counter:	
  7521                           ; 1 bytes @ 0x7
  7522                           
  7523     0027                     ___awdiv@quotient:	
  7524                           ; 1 bytes @ 0x7
  7525                           
  7526                           
  7527                           ; 2 bytes @ 0x7
  7528     0027                     	ds	1
  7529     0028                     ??_I2C_SetAddressNackCallback:
  7530     0028                     ?_I2C_Write1ByteRegister:	
  7531                           ; 1 bytes @ 0x8
  7532                           
  7533     0028                     ?_I2C_WriteNBytes:	
  7534                           ; 1 bytes @ 0x8
  7535                           
  7536     0028                     ?___lwmod:	
  7537                           ; 1 bytes @ 0x8
  7538                           
  7539     0028                     I2C_Write1ByteRegister@reg:	
  7540                           ; 2 bytes @ 0x8
  7541                           
  7542     0028                     I2C_WriteNBytes@data:	
  7543                           ; 1 bytes @ 0x8
  7544                           
  7545     0028                     ___lwmod@divisor:	
  7546                           ; 2 bytes @ 0x8
  7547                           
  7548                           
  7549                           ; 2 bytes @ 0x8
  7550     0028                     	ds	1
  7551     0029                     ?_div:
  7552     0029                     I2C_Write1ByteRegister@data:	
  7553                           ; 4 bytes @ 0x9
  7554                           
  7555     0029                     div@number:	
  7556                           ; 1 bytes @ 0x9
  7557                           
  7558                           
  7559                           ; 2 bytes @ 0x9
  7560     0029                     	ds	1
  7561     002A                     ??_I2C_Write1ByteRegister:
  7562     002A                     I2C_Write1ByteRegister@address:	
  7563                           ; 1 bytes @ 0xA
  7564                           
  7565     002A                     I2C_WriteNBytes@len:	
  7566                           ; 1 bytes @ 0xA
  7567                           
  7568     002A                     ___lwmod@dividend:	
  7569                           ; 2 bytes @ 0xA
  7570                           
  7571                           
  7572                           ; 2 bytes @ 0xA
  7573     002A                     	ds	1
  7574     002B                     ??_Time_data_write:
  7575     002B                     ?_ALM_set:	
  7576                           ; 1 bytes @ 0xB
  7577                           
  7578     002B                     ??_OLED_cmd:	
  7579                           ; 1 bytes @ 0xB
  7580                           
  7581     002B                     ??_OLED_data:	
  7582                           ; 1 bytes @ 0xB
  7583                           
  7584     002B                     ALM_set@HH:	
  7585                           ; 1 bytes @ 0xB
  7586                           
  7587     002B                     OLED_cmd@cmd:	
  7588                           ; 1 bytes @ 0xB
  7589                           
  7590     002B                     OLED_data@dat:	
  7591                           ; 1 bytes @ 0xB
  7592                           
  7593     002B                     div@denom:	
  7594                           ; 1 bytes @ 0xB
  7595                           
  7596                           
  7597                           ; 2 bytes @ 0xB
  7598     002B                     	ds	1
  7599     002C                     ??_I2C_WriteNBytes:
  7600     002C                     ??_ALM_set:	
  7601                           ; 1 bytes @ 0xC
  7602                           
  7603     002C                     ??_OLED_init:	
  7604                           ; 1 bytes @ 0xC
  7605                           
  7606     002C                     ??___lwmod:	
  7607                           ; 1 bytes @ 0xC
  7608                           
  7609     002C                     I2C_WriteNBytes@address:	
  7610                           ; 1 bytes @ 0xC
  7611                           
  7612     002C                     ALM_set@MM:	
  7613                           ; 1 bytes @ 0xC
  7614                           
  7615                           
  7616                           ; 1 bytes @ 0xC
  7617     002C                     	ds	1
  7618     002D                     ??_div:
  7619     002D                     ??_Time_data_read:	
  7620                           ; 1 bytes @ 0xD
  7621                           
  7622     002D                     ??_OLED_clr:	
  7623                           ; 1 bytes @ 0xD
  7624                           
  7625     002D                     ?_font6_posi:	
  7626                           ; 1 bytes @ 0xD
  7627                           
  7628     002D                     ??_chr6:	
  7629                           ; 1 bytes @ 0xD
  7630                           
  7631     002D                     ??_chr12:	
  7632                           ; 1 bytes @ 0xD
  7633                           
  7634     002D                     font6_posi@column:	
  7635                           ; 1 bytes @ 0xD
  7636                           
  7637     002D                     ___lwmod@counter:	
  7638                           ; 1 bytes @ 0xD
  7639                           
  7640     002D                     OLED_clr@i:	
  7641                           ; 1 bytes @ 0xD
  7642                           
  7643     002D                     div@rv:	
  7644                           ; 2 bytes @ 0xD
  7645                           
  7646                           
  7647                           ; 4 bytes @ 0xD
  7648     002D                     	ds	1
  7649     002E                     ??_font6_posi:
  7650                           
  7651                           ; 1 bytes @ 0xE
  7652     002E                     	ds	1
  7653     002F                     font6_posi@page:
  7654                           
  7655                           ; 1 bytes @ 0xF
  7656     002F                     	ds	2
  7657     0031                     ??_Alarm_set:
  7658     0031                     ??_Clock_set:	
  7659                           ; 1 bytes @ 0x11
  7660                           
  7661                           
  7662                           ; 1 bytes @ 0x11
  7663     0031                     	ds	2
  7664     0033                     chr6@c:
  7665     0033                     chr12@temp:	
  7666                           ; 1 bytes @ 0x13
  7667                           
  7668     0033                     Clock_set@i:	
  7669                           ; 1 bytes @ 0x13
  7670                           
  7671                           
  7672                           ; 2 bytes @ 0x13
  7673     0033                     	ds	1
  7674     0034                     chr6@i:
  7675     0034                     chr12@c:	
  7676                           ; 1 bytes @ 0x14
  7677                           
  7678                           
  7679                           ; 1 bytes @ 0x14
  7680     0034                     	ds	1
  7681     0035                     chr12@i:
  7682                           
  7683                           ; 1 bytes @ 0x15
  7684     0035                     	ds	1
  7685     0036                     ??_putch:
  7686     0036                     putch@c:	
  7687                           ; 1 bytes @ 0x16
  7688                           
  7689                           
  7690                           ; 1 bytes @ 0x16
  7691     0036                     	ds	1
  7692     0037                     ?_printf:
  7693     0037                     printf@f:	
  7694                           ; 2 bytes @ 0x17
  7695                           
  7696                           
  7697                           ; 2 bytes @ 0x17
  7698     0037                     	ds	10
  7699     0041                     ??_printf:
  7700                           
  7701                           ; 1 bytes @ 0x21
  7702     0041                     	ds	4
  7703     0045                     printf@idx:
  7704                           
  7705                           ; 1 bytes @ 0x25
  7706     0045                     	ds	1
  7707     0046                     printf@prec:
  7708                           
  7709                           ; 1 bytes @ 0x26
  7710     0046                     	ds	1
  7711     0047                     printf@cp:
  7712                           
  7713                           ; 2 bytes @ 0x27
  7714     0047                     	ds	2
  7715     0049                     printf@ap:
  7716                           
  7717                           ; 1 bytes @ 0x29
  7718     0049                     	ds	1
  7719     004A                     printf@len:
  7720                           
  7721                           ; 2 bytes @ 0x2A
  7722     004A                     	ds	2
  7723     004C                     printf@val:
  7724                           
  7725                           ; 2 bytes @ 0x2C
  7726     004C                     	ds	2
  7727     004E                     printf@flag:
  7728                           
  7729                           ; 1 bytes @ 0x2E
  7730     004E                     	ds	1
  7731     004F                     printf@width:
  7732                           
  7733                           ; 2 bytes @ 0x2F
  7734     004F                     	ds	2
  7735     0051                     printf@c:
  7736                           
  7737                           ; 1 bytes @ 0x31
  7738     0051                     	ds	1
  7739     0052                     ??_RTC_disp:
  7740     0052                     ??_MoveServo:	
  7741                           ; 1 bytes @ 0x32
  7742                           
  7743                           
  7744                           ; 1 bytes @ 0x32
  7745     0052                     	ds	2
  7746     0054                     ??_main:
  7747                           
  7748                           ; 1 bytes @ 0x34
  7749     0054                     	ds	4
  7750                           
  7751                           	psect	maintext
  7752     0E54                     __pmaintext:	
  7753 ;;
  7754 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  7755 ;;
  7756 ;; *************** function _main *****************
  7757 ;; Defined at:
  7758 ;;		line 463 in file "main.c"
  7759 ;; Parameters:    Size  Location     Type
  7760 ;;		None
  7761 ;; Auto vars:     Size  Location     Type
  7762 ;;		None
  7763 ;; Return value:  Size  Location     Type
  7764 ;;                  1    wreg      void 
  7765 ;; Registers used:
  7766 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7767 ;; Tracked objects:
  7768 ;;		On entry : B1F/0
  7769 ;;		On exit  : 0/0
  7770 ;;		Unchanged: 0/0
  7771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7774 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7775 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7776 ;;Total ram usage:        4 bytes
  7777 ;; Hardware stack levels required when called: 15
  7778 ;; This function calls:
  7779 ;;		_Alarm_set
  7780 ;;		_Clock_set
  7781 ;;		_MoveServo
  7782 ;;		_OLED_clr
  7783 ;;		_OLED_init
  7784 ;;		_RTC_disp
  7785 ;;		_SYSTEM_Initialize
  7786 ;;		_TMR2_SetInterruptHandler
  7787 ;;		_Time_data_read
  7788 ;;		_Time_data_write
  7789 ;;		___bmul
  7790 ;;		_font6_posi
  7791 ;;		_printf
  7792 ;; This function is called by:
  7793 ;;		Startup code after reset
  7794 ;; This function uses a non-reentrant model
  7795 ;;
  7796                           
  7797     0E54                     _main:	
  7798                           ;psect for function _main
  7799                           
  7800     0E54                     l5011:	
  7801                           ;incstack = 0
  7802                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7803                           
  7804                           
  7805                           ;main.c: 465: SYSTEM_Initialize();
  7806     0E54  3194  24F8  318E   	fcall	_SYSTEM_Initialize
  7807                           
  7808                           ;main.c: 466: TMR2_SetInterruptHandler(TMR2_Process);
  7809     0E57  3007               	movlw	low _TMR2_Process
  7810     0E58  0020               	movlb	0	; select bank0
  7811     0E59  00A0               	movwf	TMR2_SetInterruptHandler@InterruptHandler
  7812     0E5A  3005               	movlw	high _TMR2_Process
  7813     0E5B  00A1               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
  7814     0E5C  3193  236E  318E   	fcall	_TMR2_SetInterruptHandler
  7815     0E5F                     l5013:
  7816                           
  7817                           ;main.c: 467: (INTCONbits.GIE = 1);
  7818     0E5F  178B               	bsf	11,7	;volatile
  7819     0E60                     l5015:
  7820                           
  7821                           ;main.c: 468: (INTCONbits.PEIE = 1);
  7822     0E60  170B               	bsf	11,6	;volatile
  7823     0E61                     l5017:
  7824                           
  7825                           ;main.c: 470: OLED_init();
  7826     0E61  3193  23E2  318E   	fcall	_OLED_init
  7827     0E64                     l5019:
  7828                           
  7829                           ;main.c: 471: OLED_clr();
  7830     0E64  3196  2601  318E   	fcall	_OLED_clr
  7831     0E67                     l5021:
  7832                           
  7833                           ;main.c: 476: Time_data_write();
  7834     0E67  3187  27AE  318E   	fcall	_Time_data_write
  7835     0E6A                     l5023:
  7836                           
  7837                           ;main.c: 477: Time_data_read();
  7838     0E6A  3195  253D  318E   	fcall	_Time_data_read
  7839     0E6D                     l5025:
  7840                           
  7841                           ;main.c: 478: OLED_clr();
  7842     0E6D  3196  2601  318E   	fcall	_OLED_clr
  7843     0E70                     l5027:
  7844                           
  7845                           ;main.c: 479: RTC_disp();
  7846     0E70  318C  2456  318E   	fcall	_RTC_disp
  7847     0E73                     l5029:
  7848                           
  7849                           ;main.c: 481: adj_mode=0;
  7850     0E73  0021               	movlb	1	; select bank1
  7851     0E74  01C2               	clrf	_adj_mode^(0+128)
  7852     0E75  01C3               	clrf	(_adj_mode+1)^(0+128)
  7853     0E76                     l5031:
  7854                           
  7855                           ;main.c: 482: set_flg=0;
  7856     0E76  01DC               	clrf	_set_flg^(0+128)
  7857     0E77                     l5033:
  7858                           
  7859                           ;main.c: 483: count=0;
  7860     0E77  0022               	movlb	2	; select bank2
  7861     0E78  01EB               	clrf	_count^(0+256)
  7862     0E79  01EC               	clrf	(_count+1)^(0+256)
  7863     0E7A                     l5035:
  7864                           
  7865                           ;main.c: 485: alm_active=0;
  7866     0E7A  0021               	movlb	1	; select bank1
  7867     0E7B  01DA               	clrf	_alm_active^(0+128)
  7868     0E7C                     l5037:
  7869                           
  7870                           ;main.c: 488: {;main.c: 490: AA=0;
  7871     0E7C  0020               	movlb	0	; select bank0
  7872     0E7D  01DD               	clrf	_AA
  7873     0E7E                     l5039:
  7874                           
  7875                           ;main.c: 491: BB=0;
  7876     0E7E  01DC               	clrf	_BB
  7877     0E7F                     l5041:
  7878                           
  7879                           ;main.c: 492: CC=0;
  7880     0E7F  01DB               	clrf	_CC
  7881     0E80                     l5043:
  7882                           
  7883                           ;main.c: 493: DD=0;
  7884     0E80  01DA               	clrf	_DD
  7885     0E81                     l5045:
  7886                           
  7887                           ;main.c: 496: Time_data_read();
  7888     0E81  3195  253D  318E   	fcall	_Time_data_read
  7889     0E84                     l5047:
  7890                           
  7891                           ;main.c: 497: RTC_disp();
  7892     0E84  318C  2456  318E   	fcall	_RTC_disp
  7893     0E87                     l5049:
  7894                           
  7895                           ;main.c: 499: font6_posi(5, 0);
  7896     0E87  0020               	movlb	0	; select bank0
  7897     0E88  01AD               	clrf	font6_posi@column
  7898     0E89  3005               	movlw	5
  7899     0E8A  3197  2764  318E   	fcall	_font6_posi
  7900     0E8D                     l5051:
  7901                           
  7902                           ;main.c: 500: printf("                                                             ");
  7903     0E8D  3080               	movlw	low (STR_24| (0+32768))
  7904     0E8E  0020               	movlb	0	; select bank0
  7905     0E8F  00B7               	movwf	printf@f
  7906     0E90  3091               	movlw	high (STR_24| (0+32768))
  7907     0E91  00B8               	movwf	printf@f+1
  7908     0E92  3180  2096  318E   	fcall	_printf
  7909     0E95                     l5053:
  7910                           
  7911                           ;main.c: 502: if(PORTAbits.RA1==0){
  7912     0E95  0020               	movlb	0	; select bank0
  7913     0E96  188C               	btfsc	12,1	;volatile
  7914     0E97  2E99               	goto	u4141
  7915     0E98  2E9A               	goto	u4140
  7916     0E99                     u4141:
  7917     0E99  2EA9               	goto	l5061
  7918     0E9A                     u4140:
  7919     0E9A                     l5055:
  7920                           
  7921                           ;main.c: 503: AA=1;
  7922     0E9A  01DD               	clrf	_AA
  7923     0E9B  0ADD               	incf	_AA,f
  7924     0E9C                     l5057:
  7925                           
  7926                           ;main.c: 504: font6_posi(5, 0);
  7927     0E9C  01AD               	clrf	font6_posi@column
  7928     0E9D  3005               	movlw	5
  7929     0E9E  3197  2764  318E   	fcall	_font6_posi
  7930     0EA1                     l5059:
  7931                           
  7932                           ;main.c: 505: printf("AA");
  7933     0EA1  30F0               	movlw	low (STR_25| (0+32768))
  7934     0EA2  0020               	movlb	0	; select bank0
  7935     0EA3  00B7               	movwf	printf@f
  7936     0EA4  3098               	movlw	high (STR_25| (0+32768))
  7937     0EA5  00B8               	movwf	printf@f+1
  7938     0EA6  3180  2096  318E   	fcall	_printf
  7939     0EA9                     l5061:
  7940                           
  7941                           ;main.c: 506: };main.c: 507: if(PORTAbits.RA0==0){
  7942     0EA9  0020               	movlb	0	; select bank0
  7943     0EAA  180C               	btfsc	12,0	;volatile
  7944     0EAB  2EAD               	goto	u4151
  7945     0EAC  2EAE               	goto	u4150
  7946     0EAD                     u4151:
  7947     0EAD  2EBE               	goto	l5069
  7948     0EAE                     u4150:
  7949     0EAE                     l5063:
  7950                           
  7951                           ;main.c: 508: BB=1;
  7952     0EAE  01DC               	clrf	_BB
  7953     0EAF  0ADC               	incf	_BB,f
  7954     0EB0                     l5065:
  7955                           
  7956                           ;main.c: 509: font6_posi(5, 15);
  7957     0EB0  300F               	movlw	15
  7958     0EB1  00AD               	movwf	font6_posi@column
  7959     0EB2  3005               	movlw	5
  7960     0EB3  3197  2764  318E   	fcall	_font6_posi
  7961     0EB6                     l5067:
  7962                           
  7963                           ;main.c: 510: printf("BB");
  7964     0EB6  30F3               	movlw	low (STR_26| (0+32768))
  7965     0EB7  0020               	movlb	0	; select bank0
  7966     0EB8  00B7               	movwf	printf@f
  7967     0EB9  3098               	movlw	high (STR_26| (0+32768))
  7968     0EBA  00B8               	movwf	printf@f+1
  7969     0EBB  3180  2096  318E   	fcall	_printf
  7970     0EBE                     l5069:
  7971                           
  7972                           ;main.c: 511: };main.c: 512: if(PORTCbits.RC6==0){
  7973     0EBE  0020               	movlb	0	; select bank0
  7974     0EBF  1B0E               	btfsc	14,6	;volatile
  7975     0EC0  2EC2               	goto	u4161
  7976     0EC1  2EC3               	goto	u4160
  7977     0EC2                     u4161:
  7978     0EC2  2ED3               	goto	l5077
  7979     0EC3                     u4160:
  7980     0EC3                     l5071:
  7981                           
  7982                           ;main.c: 513: CC=1;
  7983     0EC3  01DB               	clrf	_CC
  7984     0EC4  0ADB               	incf	_CC,f
  7985     0EC5                     l5073:
  7986                           
  7987                           ;main.c: 514: font6_posi(5, 30);
  7988     0EC5  301E               	movlw	30
  7989     0EC6  00AD               	movwf	font6_posi@column
  7990     0EC7  3005               	movlw	5
  7991     0EC8  3197  2764  318E   	fcall	_font6_posi
  7992     0ECB                     l5075:
  7993                           
  7994                           ;main.c: 515: printf("CC");
  7995     0ECB  30F6               	movlw	low (STR_27| (0+32768))
  7996     0ECC  0020               	movlb	0	; select bank0
  7997     0ECD  00B7               	movwf	printf@f
  7998     0ECE  3098               	movlw	high (STR_27| (0+32768))
  7999     0ECF  00B8               	movwf	printf@f+1
  8000     0ED0  3180  2096  318E   	fcall	_printf
  8001     0ED3                     l5077:
  8002                           
  8003                           ;main.c: 516: };main.c: 517: if(PORTCbits.RC5==0){
  8004     0ED3  0020               	movlb	0	; select bank0
  8005     0ED4  1A8E               	btfsc	14,5	;volatile
  8006     0ED5  2ED7               	goto	u4171
  8007     0ED6  2ED8               	goto	u4170
  8008     0ED7                     u4171:
  8009     0ED7  2EE8               	goto	l5085
  8010     0ED8                     u4170:
  8011     0ED8                     l5079:
  8012                           
  8013                           ;main.c: 518: DD=1;
  8014     0ED8  01DA               	clrf	_DD
  8015     0ED9  0ADA               	incf	_DD,f
  8016     0EDA                     l5081:
  8017                           
  8018                           ;main.c: 519: font6_posi(5, 45);
  8019     0EDA  302D               	movlw	45
  8020     0EDB  00AD               	movwf	font6_posi@column
  8021     0EDC  3005               	movlw	5
  8022     0EDD  3197  2764  318E   	fcall	_font6_posi
  8023     0EE0                     l5083:
  8024                           
  8025                           ;main.c: 520: printf("DD");
  8026     0EE0  30F9               	movlw	low (STR_28| (0+32768))
  8027     0EE1  0020               	movlb	0	; select bank0
  8028     0EE2  00B7               	movwf	printf@f
  8029     0EE3  3098               	movlw	high (STR_28| (0+32768))
  8030     0EE4  00B8               	movwf	printf@f+1
  8031     0EE5  3180  2096  318E   	fcall	_printf
  8032     0EE8                     l5085:
  8033                           
  8034                           ;main.c: 521: };main.c: 524: if(alm_active==1 & PORTBbits.RB0==0){
  8035     0EE8  0020               	movlb	0	; select bank0
  8036     0EE9  1C0D               	btfss	13,0	;volatile
  8037     0EEA  2EEC               	goto	u4181
  8038     0EEB  2EEE               	goto	u4180
  8039     0EEC                     u4181:
  8040     0EEC  3001               	movlw	1
  8041     0EED  2EEF               	goto	u4182
  8042     0EEE                     u4180:
  8043     0EEE  3000               	movlw	0
  8044     0EEF                     u4182:
  8045     0EEF  00D4               	movwf	??_main
  8046     0EF0  0021               	movlb	1	; select bank1
  8047     0EF1  035A               	decf	_alm_active^(0+128),w
  8048     0EF2  1903               	btfsc	3,2
  8049     0EF3  2EF5               	goto	u4191
  8050     0EF4  2EF7               	goto	u4190
  8051     0EF5                     u4191:
  8052     0EF5  3001               	movlw	1
  8053     0EF6  2EF8               	goto	u4192
  8054     0EF7                     u4190:
  8055     0EF7  3000               	movlw	0
  8056     0EF8                     u4192:
  8057     0EF8  0020               	movlb	0	; select bank0
  8058     0EF9  0554               	andwf	??_main,w
  8059     0EFA  3800               	iorlw	0
  8060     0EFB  1903               	skipnz
  8061     0EFC  2EFE               	goto	u4201
  8062     0EFD  2EFF               	goto	u4200
  8063     0EFE                     u4201:
  8064     0EFE  2F02               	goto	l5089
  8065     0EFF                     u4200:
  8066     0EFF                     l5087:
  8067                           
  8068                           ;main.c: 525: MoveServo();
  8069     0EFF  318B  23F0  318E   	fcall	_MoveServo
  8070     0F02                     l5089:
  8071                           
  8072                           ;main.c: 527: };main.c: 530: if(adj_mode ==1){
  8073     0F02  0021               	movlb	1	; select bank1
  8074     0F03  0342               	decf	_adj_mode^(0+128),w
  8075     0F04  0443               	iorwf	(_adj_mode+1)^(0+128),w
  8076     0F05  1D03               	btfss	3,2
  8077     0F06  2F08               	goto	u4211
  8078     0F07  2F09               	goto	u4210
  8079     0F08                     u4211:
  8080     0F08  2F48               	goto	l5097
  8081     0F09                     u4210:
  8082     0F09                     l5091:
  8083                           
  8084                           ;main.c: 531: font6_posi(3, 0);
  8085     0F09  0020               	movlb	0	; select bank0
  8086     0F0A  01AD               	clrf	font6_posi@column
  8087     0F0B  3003               	movlw	3
  8088     0F0C  3197  2764  318E   	fcall	_font6_posi
  8089     0F0F                     l5093:
  8090                           
  8091                           ;main.c: 532: printf("CLOCK ADJ MODE ");
  8092     0F0F  306C               	movlw	low (STR_29| (0+32768))
  8093     0F10  0020               	movlb	0	; select bank0
  8094     0F11  00B7               	movwf	printf@f
  8095     0F12  3098               	movlw	high (STR_29| (0+32768))
  8096     0F13  00B8               	movwf	printf@f+1
  8097     0F14  3180  2096  318E   	fcall	_printf
  8098     0F17                     l5095:
  8099                           
  8100                           ;main.c: 533: font6_posi(6, 0);
  8101     0F17  0020               	movlb	0	; select bank0
  8102     0F18  01AD               	clrf	font6_posi@column
  8103     0F19  3006               	movlw	6
  8104     0F1A  3197  2764  318E   	fcall	_font6_posi
  8105                           
  8106                           ;main.c: 534: printf("%d: %s :%d               ",kind,unit[kind],settei[kind][0]);
  8107     0F1D  3041               	movlw	low (STR_30| (0+32768))
  8108     0F1E  0020               	movlb	0	; select bank0
  8109     0F1F  00B7               	movwf	printf@f
  8110     0F20  3098               	movlw	high (STR_30| (0+32768))
  8111     0F21  00B8               	movwf	printf@f+1
  8112     0F22  0859               	movf	_kind+1,w
  8113     0F23  00BA               	movwf	?_printf+3
  8114     0F24  0858               	movf	_kind,w
  8115     0F25  00B9               	movwf	?_printf+2
  8116     0F26  0858               	movf	_kind,w
  8117     0F27  00D4               	movwf	??_main
  8118     0F28  3002               	movlw	2
  8119     0F29                     u4225:
  8120     0F29  35D4               	lslf	??_main,f
  8121     0F2A  3EFF               	addlw	-1
  8122     0F2B  1D03               	skipz
  8123     0F2C  2F29               	goto	u4225
  8124     0F2D  3554               	lslf	??_main,w
  8125     0F2E  3E20               	addlw	(low (_unit| (0+512)))& (0+255)
  8126     0F2F  00BB               	movwf	low ((?_printf| 0+4))
  8127     0F30  3002               	movlw	2
  8128     0F31  00BC               	movwf	(low ((?_printf| 0+4))+1)
  8129     0F32  3003               	movlw	3
  8130     0F33  00A0               	movwf	___bmul@multiplicand
  8131     0F34  0858               	movf	_kind,w
  8132     0F35  3194  24E2  318E   	fcall	___bmul
  8133     0F38  3E20               	addlw	(low (_settei| (0+256)))& (0+255)
  8134     0F39  0086               	movwf	6
  8135     0F3A  3001               	movlw	1	; select bank2/3
  8136     0F3B  0087               	movwf	7
  8137     0F3C  0801               	movf	1,w
  8138     0F3D  0020               	movlb	0	; select bank0
  8139     0F3E  00D5               	movwf	??_main+1
  8140     0F3F  01D6               	clrf	??_main+2
  8141     0F40  0855               	movf	??_main+1,w
  8142     0F41  00BD               	movwf	?_printf+6
  8143     0F42  0856               	movf	??_main+2,w
  8144     0F43  00BE               	movwf	?_printf+7
  8145     0F44  3180  2096  318E   	fcall	_printf
  8146                           
  8147                           ;main.c: 535: }
  8148     0F47  2FC1               	goto	l5123
  8149     0F48                     l5097:
  8150                           
  8151                           ;main.c: 536: else if(adj_mode ==2){
  8152     0F48  3002               	movlw	2
  8153     0F49  0642               	xorwf	_adj_mode^(0+128),w
  8154     0F4A  0443               	iorwf	(_adj_mode+1)^(0+128),w
  8155     0F4B  1D03               	btfss	3,2
  8156     0F4C  2F4E               	goto	u4231
  8157     0F4D  2F4F               	goto	u4230
  8158     0F4E                     u4231:
  8159     0F4E  2F8E               	goto	l5105
  8160     0F4F                     u4230:
  8161     0F4F                     l5099:
  8162                           
  8163                           ;main.c: 537: font6_posi(3, 0);
  8164     0F4F  0020               	movlb	0	; select bank0
  8165     0F50  01AD               	clrf	font6_posi@column
  8166     0F51  3003               	movlw	3
  8167     0F52  3197  2764  318E   	fcall	_font6_posi
  8168     0F55                     l5101:
  8169                           
  8170                           ;main.c: 538: printf("ALARM SET MODE ");
  8171     0F55  307C               	movlw	low (STR_31| (0+32768))
  8172     0F56  0020               	movlb	0	; select bank0
  8173     0F57  00B7               	movwf	printf@f
  8174     0F58  3098               	movlw	high (STR_31| (0+32768))
  8175     0F59  00B8               	movwf	printf@f+1
  8176     0F5A  3180  2096  318E   	fcall	_printf
  8177     0F5D                     l5103:
  8178                           
  8179                           ;main.c: 539: font6_posi(6, 0);
  8180     0F5D  0020               	movlb	0	; select bank0
  8181     0F5E  01AD               	clrf	font6_posi@column
  8182     0F5F  3006               	movlw	6
  8183     0F60  3197  2764  318E   	fcall	_font6_posi
  8184                           
  8185                           ;main.c: 540: printf("%d: %s :%d               ",kind,unit2[kind],alm_settei[kind][0]);
  8186     0F63  3041               	movlw	low (STR_30| (0+32768))
  8187     0F64  0020               	movlb	0	; select bank0
  8188     0F65  00B7               	movwf	printf@f
  8189     0F66  3098               	movlw	high (STR_30| (0+32768))
  8190     0F67  00B8               	movwf	printf@f+1
  8191     0F68  0859               	movf	_kind+1,w
  8192     0F69  00BA               	movwf	?_printf+3
  8193     0F6A  0858               	movf	_kind,w
  8194     0F6B  00B9               	movwf	?_printf+2
  8195     0F6C  0858               	movf	_kind,w
  8196     0F6D  00D4               	movwf	??_main
  8197     0F6E  3001               	movlw	1
  8198     0F6F                     u4245:
  8199     0F6F  35D4               	lslf	??_main,f
  8200     0F70  3EFF               	addlw	-1
  8201     0F71  1D03               	skipz
  8202     0F72  2F6F               	goto	u4245
  8203     0F73  3554               	lslf	??_main,w
  8204     0F74  3ED6               	addlw	(low (_unit2| (0+256)))& (0+255)
  8205     0F75  00BB               	movwf	low ((?_printf| 0+4))
  8206     0F76  3001               	movlw	1
  8207     0F77  00BC               	movwf	(low ((?_printf| 0+4))+1)
  8208     0F78  3003               	movlw	3
  8209     0F79  00A0               	movwf	___bmul@multiplicand
  8210     0F7A  0858               	movf	_kind,w
  8211     0F7B  3194  24E2  318E   	fcall	___bmul
  8212     0F7E  3E38               	addlw	(low (_alm_settei| (0+256)))& (0+255)
  8213     0F7F  0086               	movwf	6
  8214     0F80  3001               	movlw	1	; select bank2/3
  8215     0F81  0087               	movwf	7
  8216     0F82  0801               	movf	1,w
  8217     0F83  0020               	movlb	0	; select bank0
  8218     0F84  00D5               	movwf	??_main+1
  8219     0F85  01D6               	clrf	??_main+2
  8220     0F86  0855               	movf	??_main+1,w
  8221     0F87  00BD               	movwf	?_printf+6
  8222     0F88  0856               	movf	??_main+2,w
  8223     0F89  00BE               	movwf	?_printf+7
  8224     0F8A  3180  2096  318E   	fcall	_printf
  8225                           
  8226                           ;main.c: 541: }
  8227     0F8D  2FC1               	goto	l5123
  8228     0F8E                     l5105:
  8229                           
  8230                           ;main.c: 542: else{;main.c: 543: font6_posi(3, 0);
  8231     0F8E  0020               	movlb	0	; select bank0
  8232     0F8F  01AD               	clrf	font6_posi@column
  8233     0F90  3003               	movlw	3
  8234     0F91  3197  2764  318E   	fcall	_font6_posi
  8235     0F94                     l5107:
  8236                           
  8237                           ;main.c: 544: printf("                ");
  8238     0F94  30AD               	movlw	low ((STR_24+45)| (0+32768))
  8239     0F95  0020               	movlb	0	; select bank0
  8240     0F96  00B7               	movwf	printf@f
  8241     0F97  3091               	movlw	high ((STR_24+45)| (0+32768))
  8242     0F98  00B8               	movwf	printf@f+1
  8243     0F99  3180  2096  318E   	fcall	_printf
  8244     0F9C                     l5109:
  8245                           
  8246                           ;main.c: 545: font6_posi(6, 0);
  8247     0F9C  0020               	movlb	0	; select bank0
  8248     0F9D  01AD               	clrf	font6_posi@column
  8249     0F9E  3006               	movlw	6
  8250     0F9F  3197  2764  318E   	fcall	_font6_posi
  8251                           
  8252                           ;main.c: 546: printf("                ");
  8253     0FA2  30AD               	movlw	low ((STR_24+45)| (0+32768))
  8254     0FA3  0020               	movlb	0	; select bank0
  8255     0FA4  00B7               	movwf	printf@f
  8256     0FA5  3091               	movlw	high ((STR_24+45)| (0+32768))
  8257     0FA6  00B8               	movwf	printf@f+1
  8258     0FA7  3180  2096  318E   	fcall	_printf
  8259     0FAA                     l5111:
  8260                           
  8261                           ;main.c: 547: if(set_flg==1){
  8262     0FAA  0021               	movlb	1	; select bank1
  8263     0FAB  035C               	decf	_set_flg^(0+128),w
  8264     0FAC  1D03               	btfss	3,2
  8265     0FAD  2FAF               	goto	u4251
  8266     0FAE  2FB0               	goto	u4250
  8267     0FAF                     u4251:
  8268     0FAF  2FB6               	goto	l5117
  8269     0FB0                     u4250:
  8270     0FB0                     l5113:
  8271                           
  8272                           ;main.c: 548: Clock_set();
  8273     0FB0  318A  22D7  318E   	fcall	_Clock_set
  8274     0FB3                     l5115:
  8275                           
  8276                           ;main.c: 549: set_flg=0;
  8277     0FB3  0021               	movlb	1	; select bank1
  8278     0FB4  01DC               	clrf	_set_flg^(0+128)
  8279                           
  8280                           ;main.c: 550: }
  8281     0FB5  2FC1               	goto	l5123
  8282     0FB6                     l5117:
  8283                           
  8284                           ;main.c: 551: else if(alm_set_flg==1){
  8285     0FB6  035B               	decf	_alm_set_flg^(0+128),w
  8286     0FB7  1D03               	btfss	3,2
  8287     0FB8  2FBA               	goto	u4261
  8288     0FB9  2FBB               	goto	u4260
  8289     0FBA                     u4261:
  8290     0FBA  2FC1               	goto	l1084
  8291     0FBB                     u4260:
  8292     0FBB                     l5119:
  8293                           
  8294                           ;main.c: 552: Alarm_set();
  8295     0FBB  318B  238C  318E   	fcall	_Alarm_set
  8296     0FBE                     l5121:
  8297                           
  8298                           ;main.c: 553: alm_set_flg=0;
  8299     0FBE  0021               	movlb	1	; select bank1
  8300     0FBF  01DB               	clrf	_alm_set_flg^(0+128)
  8301     0FC0  2FC1               	goto	l5123
  8302     0FC1                     l1084:
  8303     0FC1                     l5123:
  8304                           
  8305                           ;main.c: 554: };main.c: 555: };main.c: 558: if(alm_active==1){
  8306     0FC1  0021               	movlb	1	; select bank1
  8307     0FC2  035A               	decf	_alm_active^(0+128),w
  8308     0FC3  1D03               	btfss	3,2
  8309     0FC4  2FC6               	goto	u4271
  8310     0FC5  2FC7               	goto	u4270
  8311     0FC6                     u4271:
  8312     0FC6  2E7C               	goto	l5037
  8313     0FC7                     u4270:
  8314     0FC7                     l5125:
  8315                           
  8316                           ;main.c: 560: font6_posi(7, 0);
  8317     0FC7  0020               	movlb	0	; select bank0
  8318     0FC8  01AD               	clrf	font6_posi@column
  8319     0FC9  3007               	movlw	7
  8320     0FCA  3197  2764  318E   	fcall	_font6_posi
  8321     0FCD                     l5127:
  8322                           
  8323                           ;main.c: 561: printf("%02d:%02d   %s %s               ",alm_settei[1][0],alm_settei[0][0
      +                          ] ,SRV[alm_settei[2][0]],DIR[alm_settei[3][0]]);
  8324     0FCD  3000               	movlw	low (STR_35| (0+32768))
  8325     0FCE  0020               	movlb	0	; select bank0
  8326     0FCF  00B7               	movwf	printf@f
  8327     0FD0  3098               	movlw	high (STR_35| (0+32768))
  8328     0FD1  00B8               	movwf	printf@f+1
  8329     0FD2  0022               	movlb	2	; select bank2
  8330     0FD3  083B               	movf	(_alm_settei^(0+256)+3),w
  8331     0FD4  0020               	movlb	0	; select bank0
  8332     0FD5  00D4               	movwf	??_main
  8333     0FD6  01D5               	clrf	??_main+1
  8334     0FD7  0854               	movf	??_main,w
  8335     0FD8  00B9               	movwf	?_printf+2
  8336     0FD9  0855               	movf	??_main+1,w
  8337     0FDA  00BA               	movwf	?_printf+3
  8338     0FDB  0022               	movlb	2	; select bank2
  8339     0FDC  0838               	movf	_alm_settei^(0+256),w
  8340     0FDD  0020               	movlb	0	; select bank0
  8341     0FDE  00D6               	movwf	??_main+2
  8342     0FDF  01D7               	clrf	??_main+3
  8343     0FE0  0856               	movf	??_main+2,w
  8344     0FE1  00BB               	movwf	?_printf+4
  8345     0FE2  0857               	movf	??_main+3,w
  8346     0FE3  00BC               	movwf	?_printf+5
  8347     0FE4  0022               	movlb	2	; select bank2
  8348     0FE5  353E               	lslf	(_alm_settei^(0+256)+6),w
  8349     0FE6  3E48               	addlw	(low (_SRV| (0+256)))& (0+255)
  8350     0FE7  0086               	movwf	6
  8351     0FE8  3001               	movlw	1	; select bank2/3
  8352     0FE9  0087               	movwf	7
  8353     0FEA  3F40               	moviw [0]fsr1
  8354     0FEB  0020               	movlb	0	; select bank0
  8355     0FEC  00BD               	movwf	low ((?_printf| 0+6))
  8356     0FED  3F41               	moviw [1]fsr1
  8357     0FEE  00BE               	movwf	(low ((?_printf| 0+6))+1)
  8358     0FEF  0022               	movlb	2	; select bank2
  8359     0FF0  3541               	lslf	(_alm_settei^(0+256)+9),w
  8360     0FF1  3E44               	addlw	(low (_DIR| (0+256)))& (0+255)
  8361     0FF2  0086               	movwf	6
  8362     0FF3  3001               	movlw	1	; select bank2/3
  8363     0FF4  0087               	movwf	7
  8364     0FF5  3F40               	moviw [0]fsr1
  8365     0FF6  0020               	movlb	0	; select bank0
  8366     0FF7  00BF               	movwf	low ((?_printf| 0+8))
  8367     0FF8  3F41               	moviw [1]fsr1
  8368     0FF9  00C0               	movwf	(low ((?_printf| 0+8))+1)
  8369     0FFA  3180  2096  318E   	fcall	_printf
  8370     0FFD  2E7C               	goto	l5037
  8371     0FFE  3180  2836         	ljmp	start
  8372     1000                     __end_of_main:
  8373                           
  8374                           	psect	text1
  8375     153D                     __ptext1:	
  8376 ;; *************** function _Time_data_read *****************
  8377 ;; Defined at:
  8378 ;;		line 111 in file "main.c"
  8379 ;; Parameters:    Size  Location     Type
  8380 ;;		None
  8381 ;; Auto vars:     Size  Location     Type
  8382 ;;		None
  8383 ;; Return value:  Size  Location     Type
  8384 ;;                  1    wreg      void 
  8385 ;; Registers used:
  8386 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8387 ;; Tracked objects:
  8388 ;;		On entry : 0/0
  8389 ;;		On exit  : 0/0
  8390 ;;		Unchanged: 0/0
  8391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8395 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8396 ;;Total ram usage:        0 bytes
  8397 ;; Hardware stack levels used: 1
  8398 ;; Hardware stack levels required when called: 11
  8399 ;; This function calls:
  8400 ;;		_I2C_ReadNBytes
  8401 ;;		_I2C_WriteNBytes
  8402 ;; This function is called by:
  8403 ;;		_main
  8404 ;; This function uses a non-reentrant model
  8405 ;;
  8406                           
  8407     153D                     _Time_data_read:	
  8408                           ;psect for function _Time_data_read
  8409                           
  8410     153D                     l4785:	
  8411                           ;incstack = 0
  8412                           ; Regs used in _Time_data_read: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8413                           
  8414                           
  8415                           ;main.c: 113: I2C_WriteNBytes(0x32,0x00,1);
  8416     153D  3000               	movlw	0
  8417     153E  0020               	movlb	0	; select bank0
  8418     153F  00A8               	movwf	I2C_WriteNBytes@data
  8419     1540  00A9               	movwf	I2C_WriteNBytes@data+1
  8420     1541  3001               	movlw	1
  8421     1542  00AA               	movwf	I2C_WriteNBytes@len
  8422     1543  3000               	movlw	0
  8423     1544  00AB               	movwf	I2C_WriteNBytes@len+1
  8424     1545  3032               	movlw	50
  8425     1546  3197  2707  3195   	fcall	_I2C_WriteNBytes
  8426     1549                     l4787:
  8427                           
  8428                           ;main.c: 114: I2C_ReadNBytes(0x32,&REG,7);
  8429     1549  30E1               	movlw	(low (_REG| 0))& (0+255)
  8430     154A  0020               	movlb	0	; select bank0
  8431     154B  00A4               	movwf	I2C_ReadNBytes@data
  8432     154C  3007               	movlw	7
  8433     154D  00A5               	movwf	I2C_ReadNBytes@len
  8434     154E  3000               	movlw	0
  8435     154F  00A6               	movwf	I2C_ReadNBytes@len+1
  8436     1550  3032               	movlw	50
  8437     1551  3196  2624  3195   	fcall	_I2C_ReadNBytes
  8438     1554                     l949:
  8439     1554  0008               	return
  8440     1555                     __end_of_Time_data_read:
  8441                           
  8442                           	psect	text2
  8443     1624                     __ptext2:	
  8444 ;; *************** function _I2C_ReadNBytes *****************
  8445 ;; Defined at:
  8446 ;;		line 120 in file "mcc_generated_files/examples/i2c_master_example.c"
  8447 ;; Parameters:    Size  Location     Type
  8448 ;;  address         1    wreg     unsigned char 
  8449 ;;  data            1    4[BANK0 ] PTR unsigned char 
  8450 ;;		 -> REG(8), 
  8451 ;;  len             2    5[BANK0 ] unsigned int 
  8452 ;; Auto vars:     Size  Location     Type
  8453 ;;  address         1    7[BANK0 ] unsigned char 
  8454 ;; Return value:  Size  Location     Type
  8455 ;;                  1    wreg      void 
  8456 ;; Registers used:
  8457 ;;		wreg, status,2, status,0, pclath, cstack
  8458 ;; Tracked objects:
  8459 ;;		On entry : 0/0
  8460 ;;		On exit  : 0/0
  8461 ;;		Unchanged: 0/0
  8462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8463 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8464 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8466 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8467 ;;Total ram usage:        4 bytes
  8468 ;; Hardware stack levels used: 1
  8469 ;; Hardware stack levels required when called: 10
  8470 ;; This function calls:
  8471 ;;		_I2C_Close
  8472 ;;		_I2C_MasterRead
  8473 ;;		_I2C_Open
  8474 ;;		_I2C_SetBuffer
  8475 ;; This function is called by:
  8476 ;;		_Time_data_read
  8477 ;; This function uses a non-reentrant model
  8478 ;;
  8479                           
  8480     1624                     _I2C_ReadNBytes:	
  8481                           ;psect for function _I2C_ReadNBytes
  8482                           
  8483                           
  8484                           ;incstack = 0
  8485                           ; Regs used in _I2C_ReadNBytes: [wreg+status,2+status,0+pclath+cstack]
  8486                           ;I2C_ReadNBytes@address stored from wreg
  8487     1624  0020               	movlb	0	; select bank0
  8488     1625  00A7               	movwf	I2C_ReadNBytes@address
  8489     1626                     l4439:
  8490     1626                     l4441:	
  8491                           ;i2c_master_example.c: 122: while(!I2C_Open(address));
  8492                           
  8493     1626  0020               	movlb	0	; select bank0
  8494     1627  0827               	movf	I2C_ReadNBytes@address,w
  8495     1628  3189  2159  3196   	fcall	_I2C_Open
  8496     162B  3A00               	xorlw	0
  8497     162C  1903               	skipnz
  8498     162D  2E2F               	goto	u3501
  8499     162E  2E30               	goto	u3500
  8500     162F                     u3501:
  8501     162F  2E26               	goto	l4441
  8502     1630                     u3500:
  8503     1630                     l4443:
  8504                           
  8505                           ;i2c_master_example.c: 123: I2C_SetBuffer(data,len);
  8506     1630  0020               	movlb	0	; select bank0
  8507     1631  0824               	movf	I2C_ReadNBytes@data,w
  8508     1632  00A0               	movwf	I2C_SetBuffer@buffer
  8509     1633  01A1               	clrf	I2C_SetBuffer@buffer+1
  8510     1634  0826               	movf	I2C_ReadNBytes@len+1,w
  8511     1635  00A3               	movwf	I2C_SetBuffer@bufferSize+1
  8512     1636  0825               	movf	I2C_ReadNBytes@len,w
  8513     1637  00A2               	movwf	I2C_SetBuffer@bufferSize
  8514     1638  3195  250E  3196   	fcall	_I2C_SetBuffer
  8515                           
  8516                           ;i2c_master_example.c: 124: I2C_MasterRead();
  8517     163B  3187  27FB  3196   	fcall	_I2C_MasterRead
  8518     163E                     l4445:	
  8519                           ;i2c_master_example.c: 125: while(I2C_BUSY == I2C_Close());
  8520                           
  8521     163E  3195  2588  3196   	fcall	_I2C_Close
  8522     1641  3A01               	xorlw	1
  8523     1642  1903               	skipnz
  8524     1643  2E45               	goto	u3511
  8525     1644  2E46               	goto	u3510
  8526     1645                     u3511:
  8527     1645  2E3E               	goto	l4445
  8528     1646                     u3510:
  8529     1646                     l80:
  8530     1646  0008               	return
  8531     1647                     __end_of_I2C_ReadNBytes:
  8532                           
  8533                           	psect	text3
  8534     07FB                     __ptext3:	
  8535 ;; *************** function _I2C_MasterRead *****************
  8536 ;; Defined at:
  8537 ;;		line 247 in file "mcc_generated_files/i2c_master.c"
  8538 ;; Parameters:    Size  Location     Type
  8539 ;;		None
  8540 ;; Auto vars:     Size  Location     Type
  8541 ;;		None
  8542 ;; Return value:  Size  Location     Type
  8543 ;;                  1    wreg      enum E92
  8544 ;; Registers used:
  8545 ;;		wreg, status,2, status,0, pclath, cstack
  8546 ;; Tracked objects:
  8547 ;;		On entry : 0/0
  8548 ;;		On exit  : 0/0
  8549 ;;		Unchanged: 0/0
  8550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8554 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8555 ;;Total ram usage:        0 bytes
  8556 ;; Hardware stack levels used: 1
  8557 ;; Hardware stack levels required when called: 9
  8558 ;; This function calls:
  8559 ;;		_I2C_MasterOperation
  8560 ;; This function is called by:
  8561 ;;		_I2C_ReadNBytes
  8562 ;; This function uses a non-reentrant model
  8563 ;;
  8564                           
  8565     07FB                     _I2C_MasterRead:	
  8566                           ;psect for function _I2C_MasterRead
  8567                           
  8568     07FB                     l3959:	
  8569                           ;incstack = 0
  8570                           ; Regs used in _I2C_MasterRead: [wreg+status,2+status,0+pclath+cstack]
  8571                           
  8572                           
  8573                           ;i2c_master.c: 249: return I2C_MasterOperation(1);;	Return value of _I2C_MasterRead is n
      +                          ever used
  8574     07FB  3001               	movlw	1
  8575     07FC  3195  25A3  3187   	fcall	_I2C_MasterOperation
  8576     07FF                     l497:
  8577     07FF  0008               	return
  8578     0800                     __end_of_I2C_MasterRead:
  8579                           
  8580                           	psect	text4
  8581     14F8                     __ptext4:	
  8582 ;; *************** function _SYSTEM_Initialize *****************
  8583 ;; Defined at:
  8584 ;;		line 50 in file "mcc_generated_files/mcc.c"
  8585 ;; Parameters:    Size  Location     Type
  8586 ;;		None
  8587 ;; Auto vars:     Size  Location     Type
  8588 ;;		None
  8589 ;; Return value:  Size  Location     Type
  8590 ;;                  1    wreg      void 
  8591 ;; Registers used:
  8592 ;;		wreg, status,2, status,0, pclath, cstack
  8593 ;; Tracked objects:
  8594 ;;		On entry : 0/0
  8595 ;;		On exit  : 0/0
  8596 ;;		Unchanged: 0/0
  8597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8601 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8602 ;;Total ram usage:        0 bytes
  8603 ;; Hardware stack levels used: 1
  8604 ;; Hardware stack levels required when called: 9
  8605 ;; This function calls:
  8606 ;;		_I2C_Initialize
  8607 ;;		_OSCILLATOR_Initialize
  8608 ;;		_PIN_MANAGER_Initialize
  8609 ;;		_PWM11_Initialize
  8610 ;;		_PWM6_Initialize
  8611 ;;		_TMR2_Initialize
  8612 ;;		_WDT_Initialize
  8613 ;; This function is called by:
  8614 ;;		_main
  8615 ;; This function uses a non-reentrant model
  8616 ;;
  8617                           
  8618     14F8                     _SYSTEM_Initialize:	
  8619                           ;psect for function _SYSTEM_Initialize
  8620                           
  8621     14F8                     l4777:	
  8622                           ;incstack = 0
  8623                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8624                           
  8625                           
  8626                           ;mcc.c: 53: I2C_Initialize();
  8627     14F8  3193  2365  3194   	fcall	_I2C_Initialize
  8628                           
  8629                           ;mcc.c: 54: PIN_MANAGER_Initialize();
  8630     14FB  3188  2056  3194   	fcall	_PIN_MANAGER_Initialize
  8631                           
  8632                           ;mcc.c: 55: OSCILLATOR_Initialize();
  8633     14FE  3193  2339  3194   	fcall	_OSCILLATOR_Initialize
  8634                           
  8635                           ;mcc.c: 56: WDT_Initialize();
  8636     1501  3192  22D7  3194   	fcall	_WDT_Initialize
  8637                           
  8638                           ;mcc.c: 57: PWM6_Initialize();
  8639     1504  3188  2000  3194   	fcall	_PWM6_Initialize
  8640                           
  8641                           ;mcc.c: 58: PWM11_Initialize();
  8642     1507  3195  2555  3194   	fcall	_PWM11_Initialize
  8643                           
  8644                           ;mcc.c: 59: TMR2_Initialize();
  8645     150A  3195  2525  3194   	fcall	_TMR2_Initialize
  8646     150D                     l213:
  8647     150D  0008               	return
  8648     150E                     __end_of_SYSTEM_Initialize:
  8649                           
  8650                           	psect	text5
  8651     12D7                     __ptext5:	
  8652 ;; *************** function _WDT_Initialize *****************
  8653 ;; Defined at:
  8654 ;;		line 74 in file "mcc_generated_files/mcc.c"
  8655 ;; Parameters:    Size  Location     Type
  8656 ;;		None
  8657 ;; Auto vars:     Size  Location     Type
  8658 ;;		None
  8659 ;; Return value:  Size  Location     Type
  8660 ;;                  1    wreg      void 
  8661 ;; Registers used:
  8662 ;;		wreg
  8663 ;; Tracked objects:
  8664 ;;		On entry : 0/0
  8665 ;;		On exit  : 0/0
  8666 ;;		Unchanged: 0/0
  8667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8671 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8672 ;;Total ram usage:        0 bytes
  8673 ;; Hardware stack levels used: 1
  8674 ;; Hardware stack levels required when called: 7
  8675 ;; This function calls:
  8676 ;;		Nothing
  8677 ;; This function is called by:
  8678 ;;		_SYSTEM_Initialize
  8679 ;; This function uses a non-reentrant model
  8680 ;;
  8681                           
  8682     12D7                     _WDT_Initialize:	
  8683                           ;psect for function _WDT_Initialize
  8684                           
  8685     12D7                     l4519:	
  8686                           ;incstack = 0
  8687                           ; Regs used in _WDT_Initialize: [wreg]
  8688                           
  8689                           
  8690                           ;mcc.c: 77: WDTCON = 0x16;
  8691     12D7  3016               	movlw	22
  8692     12D8  0021               	movlb	1	; select bank1
  8693     12D9  0099               	movwf	25	;volatile
  8694     12DA                     l219:
  8695     12DA  0008               	return
  8696     12DB                     __end_of_WDT_Initialize:
  8697                           
  8698                           	psect	text6
  8699     1525                     __ptext6:	
  8700 ;; *************** function _TMR2_Initialize *****************
  8701 ;; Defined at:
  8702 ;;		line 64 in file "mcc_generated_files/tmr2.c"
  8703 ;; Parameters:    Size  Location     Type
  8704 ;;		None
  8705 ;; Auto vars:     Size  Location     Type
  8706 ;;		None
  8707 ;; Return value:  Size  Location     Type
  8708 ;;                  1    wreg      void 
  8709 ;; Registers used:
  8710 ;;		wreg, status,2, status,0, pclath, cstack
  8711 ;; Tracked objects:
  8712 ;;		On entry : 0/0
  8713 ;;		On exit  : 0/0
  8714 ;;		Unchanged: 0/0
  8715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8719 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8720 ;;Total ram usage:        0 bytes
  8721 ;; Hardware stack levels used: 1
  8722 ;; Hardware stack levels required when called: 8
  8723 ;; This function calls:
  8724 ;;		_TMR2_SetInterruptHandler
  8725 ;; This function is called by:
  8726 ;;		_SYSTEM_Initialize
  8727 ;; This function uses a non-reentrant model
  8728 ;;
  8729                           
  8730     1525                     _TMR2_Initialize:	
  8731                           ;psect for function _TMR2_Initialize
  8732                           
  8733     1525                     l4547:	
  8734                           ;incstack = 0
  8735                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8736                           
  8737                           
  8738                           ;tmr2.c: 69: T2CLKCON = 0x01;
  8739     1525  3001               	movlw	1
  8740     1526  0029               	movlb	9	; select bank9
  8741     1527  0097               	movwf	23	;volatile
  8742     1528                     l4549:
  8743                           
  8744                           ;tmr2.c: 72: T2HLT = 0x00;
  8745     1528  0196               	clrf	22	;volatile
  8746     1529                     l4551:
  8747                           
  8748                           ;tmr2.c: 75: T2RST = 0x00;
  8749     1529  0198               	clrf	24	;volatile
  8750                           
  8751                           ;tmr2.c: 78: T2PR = 0xC2;
  8752     152A  30C2               	movlw	194
  8753     152B  0094               	movwf	20	;volatile
  8754     152C                     l4553:
  8755                           
  8756                           ;tmr2.c: 81: T2TMR = 0x00;
  8757     152C  0193               	clrf	19	;volatile
  8758     152D                     l4555:
  8759                           
  8760                           ;tmr2.c: 84: PIR1bits.TMR2IF = 0;
  8761     152D  0020               	movlb	0	; select bank0
  8762     152E  1091               	bcf	17,1	;volatile
  8763     152F                     l4557:
  8764                           
  8765                           ;tmr2.c: 87: PIE1bits.TMR2IE = 1;
  8766     152F  0021               	movlb	1	; select bank1
  8767     1530  1491               	bsf	17,1	;volatile
  8768     1531                     l4559:
  8769                           
  8770                           ;tmr2.c: 90: TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandler);
  8771     1531  309B               	movlw	low _TMR2_DefaultInterruptHandler
  8772     1532  0020               	movlb	0	; select bank0
  8773     1533  00A0               	movwf	TMR2_SetInterruptHandler@InterruptHandler
  8774     1534  3012               	movlw	high _TMR2_DefaultInterruptHandler
  8775     1535  00A1               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
  8776     1536  3193  236E  3195   	fcall	_TMR2_SetInterruptHandler
  8777     1539                     l4561:
  8778                           
  8779                           ;tmr2.c: 93: T2CON = 0xFF;
  8780     1539  30FF               	movlw	255
  8781     153A  0029               	movlb	9	; select bank9
  8782     153B  0095               	movwf	21	;volatile
  8783     153C                     l322:
  8784     153C  0008               	return
  8785     153D                     __end_of_TMR2_Initialize:
  8786                           
  8787                           	psect	text7
  8788     136E                     __ptext7:	
  8789 ;; *************** function _TMR2_SetInterruptHandler *****************
  8790 ;; Defined at:
  8791 ;;		line 186 in file "mcc_generated_files/tmr2.c"
  8792 ;; Parameters:    Size  Location     Type
  8793 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  8794 ;;		 -> TMR2_Process(1), TMR2_DefaultInterruptHandler(1), 
  8795 ;; Auto vars:     Size  Location     Type
  8796 ;;		None
  8797 ;; Return value:  Size  Location     Type
  8798 ;;                  1    wreg      void 
  8799 ;; Registers used:
  8800 ;;		wreg
  8801 ;; Tracked objects:
  8802 ;;		On entry : 0/0
  8803 ;;		On exit  : 0/0
  8804 ;;		Unchanged: 0/0
  8805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8806 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8809 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8810 ;;Total ram usage:        2 bytes
  8811 ;; Hardware stack levels used: 1
  8812 ;; Hardware stack levels required when called: 7
  8813 ;; This function calls:
  8814 ;;		Nothing
  8815 ;; This function is called by:
  8816 ;;		_TMR2_Initialize
  8817 ;;		_main
  8818 ;; This function uses a non-reentrant model
  8819 ;;
  8820                           
  8821     136E                     _TMR2_SetInterruptHandler:	
  8822                           ;psect for function _TMR2_SetInterruptHandler
  8823                           
  8824     136E                     l3969:	
  8825                           ;incstack = 0
  8826                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
  8827                           
  8828                           
  8829                           ;tmr2.c: 187: TMR2_InterruptHandler = InterruptHandler;
  8830     136E  0020               	movlb	0	; select bank0
  8831     136F  0821               	movf	TMR2_SetInterruptHandler@InterruptHandler+1,w
  8832     1370  0022               	movlb	2	; select bank2
  8833     1371  00EE               	movwf	(_TMR2_InterruptHandler+1)^(0+256)
  8834     1372  0020               	movlb	0	; select bank0
  8835     1373  0820               	movf	TMR2_SetInterruptHandler@InterruptHandler,w
  8836     1374  0022               	movlb	2	; select bank2
  8837     1375  00ED               	movwf	_TMR2_InterruptHandler^(0+256)
  8838     1376                     l368:
  8839     1376  0008               	return
  8840     1377                     __end_of_TMR2_SetInterruptHandler:
  8841                           
  8842                           	psect	text8
  8843     0800                     __ptext8:	
  8844 ;; *************** function _PWM6_Initialize *****************
  8845 ;; Defined at:
  8846 ;;		line 58 in file "mcc_generated_files/pwm6.c"
  8847 ;; Parameters:    Size  Location     Type
  8848 ;;		None
  8849 ;; Auto vars:     Size  Location     Type
  8850 ;;		None
  8851 ;; Return value:  Size  Location     Type
  8852 ;;                  1    wreg      void 
  8853 ;; Registers used:
  8854 ;;		wreg, status,2
  8855 ;; Tracked objects:
  8856 ;;		On entry : 0/0
  8857 ;;		On exit  : 0/0
  8858 ;;		Unchanged: 0/0
  8859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8863 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8864 ;;Total ram usage:        0 bytes
  8865 ;; Hardware stack levels used: 1
  8866 ;; Hardware stack levels required when called: 7
  8867 ;; This function calls:
  8868 ;;		Nothing
  8869 ;; This function is called by:
  8870 ;;		_SYSTEM_Initialize
  8871 ;; This function uses a non-reentrant model
  8872 ;;
  8873                           
  8874     0800                     _PWM6_Initialize:	
  8875                           ;psect for function _PWM6_Initialize
  8876                           
  8877     0800                     l4521:	
  8878                           ;incstack = 0
  8879                           ; Regs used in _PWM6_Initialize: [wreg+status,2]
  8880                           
  8881                           
  8882                           ;pwm6.c: 63: PWM6INTE = 0x00;
  8883     0800  003B               	movlb	27	; select bank27
  8884     0801  01AC               	clrf	44	;volatile
  8885                           
  8886                           ;pwm6.c: 66: PWM6INTF = 0x00;
  8887     0802  01AD               	clrf	45	;volatile
  8888     0803                     l4523:
  8889                           
  8890                           ;pwm6.c: 69: PWM6CLKCON = 0x30;
  8891     0803  3030               	movlw	48
  8892     0804  00AE               	movwf	46	;volatile
  8893     0805                     l4525:
  8894                           
  8895                           ;pwm6.c: 72: PWM6LDCON = 0x00;
  8896     0805  01AF               	clrf	47	;volatile
  8897     0806                     l4527:
  8898                           
  8899                           ;pwm6.c: 75: PWM6OFCON = 0x00;
  8900     0806  01B0               	clrf	48	;volatile
  8901     0807                     l4529:
  8902                           
  8903                           ;pwm6.c: 78: PWM6PHH = 0x00;
  8904     0807  01A2               	clrf	34	;volatile
  8905     0808                     l4531:
  8906                           
  8907                           ;pwm6.c: 81: PWM6PHL = 0x00;
  8908     0808  01A1               	clrf	33	;volatile
  8909     0809                     l4533:
  8910                           
  8911                           ;pwm6.c: 84: PWM6DCH = 0x08;
  8912     0809  3008               	movlw	8
  8913     080A  00A4               	movwf	36	;volatile
  8914     080B                     l4535:
  8915                           
  8916                           ;pwm6.c: 87: PWM6DCL = 0x97;
  8917     080B  3097               	movlw	151
  8918     080C  00A3               	movwf	35	;volatile
  8919     080D                     l4537:
  8920                           
  8921                           ;pwm6.c: 90: PWM6PRH = 0x9C;
  8922     080D  309C               	movlw	156
  8923     080E  00A6               	movwf	38	;volatile
  8924     080F                     l4539:
  8925                           
  8926                           ;pwm6.c: 93: PWM6PRL = 0x3F;
  8927     080F  303F               	movlw	63
  8928     0810  00A5               	movwf	37	;volatile
  8929     0811                     l4541:
  8930                           
  8931                           ;pwm6.c: 96: PWM6OFH = 0x00;
  8932     0811  01A8               	clrf	40	;volatile
  8933                           
  8934                           ;pwm6.c: 99: PWM6OFL = 0x03;
  8935     0812  3003               	movlw	3
  8936     0813  00A7               	movwf	39	;volatile
  8937     0814                     l4543:
  8938                           
  8939                           ;pwm6.c: 102: PWM6TMRH = 0x00;
  8940     0814  01AA               	clrf	42	;volatile
  8941     0815                     l4545:
  8942                           
  8943                           ;pwm6.c: 105: PWM6TMRL = 0x00;
  8944     0815  01A9               	clrf	41	;volatile
  8945                           
  8946                           ;pwm6.c: 108: PWM6CON = 0x80;
  8947     0816  3080               	movlw	128
  8948     0817  00AB               	movwf	43	;volatile
  8949     0818                     l778:
  8950     0818  0008               	return
  8951     0819                     __end_of_PWM6_Initialize:
  8952                           
  8953                           	psect	text9
  8954     1555                     __ptext9:	
  8955 ;; *************** function _PWM11_Initialize *****************
  8956 ;; Defined at:
  8957 ;;		line 58 in file "mcc_generated_files/pwm11.c"
  8958 ;; Parameters:    Size  Location     Type
  8959 ;;		None
  8960 ;; Auto vars:     Size  Location     Type
  8961 ;;		None
  8962 ;; Return value:  Size  Location     Type
  8963 ;;                  1    wreg      void 
  8964 ;; Registers used:
  8965 ;;		wreg, status,2
  8966 ;; Tracked objects:
  8967 ;;		On entry : 0/0
  8968 ;;		On exit  : 0/0
  8969 ;;		Unchanged: 0/0
  8970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8974 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8975 ;;Total ram usage:        0 bytes
  8976 ;; Hardware stack levels used: 1
  8977 ;; Hardware stack levels required when called: 7
  8978 ;; This function calls:
  8979 ;;		Nothing
  8980 ;; This function is called by:
  8981 ;;		_SYSTEM_Initialize
  8982 ;; This function uses a non-reentrant model
  8983 ;;
  8984                           
  8985     1555                     _PWM11_Initialize:	
  8986                           ;psect for function _PWM11_Initialize
  8987                           
  8988     1555                     l4447:	
  8989                           ;incstack = 0
  8990                           ; Regs used in _PWM11_Initialize: [wreg+status,2]
  8991                           
  8992                           
  8993                           ;pwm11.c: 63: PWM11INTE = 0x00;
  8994     1555  003B               	movlb	27	; select bank27
  8995     1556  01BC               	clrf	60	;volatile
  8996                           
  8997                           ;pwm11.c: 66: PWM11INTF = 0x00;
  8998     1557  01BD               	clrf	61	;volatile
  8999     1558                     l4449:
  9000                           
  9001                           ;pwm11.c: 69: PWM11CLKCON = 0x30;
  9002     1558  3030               	movlw	48
  9003     1559  00BE               	movwf	62	;volatile
  9004     155A                     l4451:
  9005                           
  9006                           ;pwm11.c: 72: PWM11LDCON = 0x00;
  9007     155A  01BF               	clrf	63	;volatile
  9008     155B                     l4453:
  9009                           
  9010                           ;pwm11.c: 75: PWM11OFCON = 0x00;
  9011     155B  01C0               	clrf	64	;volatile
  9012     155C                     l4455:
  9013                           
  9014                           ;pwm11.c: 78: PWM11PHH = 0x00;
  9015     155C  01B2               	clrf	50	;volatile
  9016     155D                     l4457:
  9017                           
  9018                           ;pwm11.c: 81: PWM11PHL = 0x00;
  9019     155D  01B1               	clrf	49	;volatile
  9020     155E                     l4459:
  9021                           
  9022                           ;pwm11.c: 84: PWM11DCH = 0x08;
  9023     155E  3008               	movlw	8
  9024     155F  00B4               	movwf	52	;volatile
  9025     1560                     l4461:
  9026                           
  9027                           ;pwm11.c: 87: PWM11DCL = 0x97;
  9028     1560  3097               	movlw	151
  9029     1561  00B3               	movwf	51	;volatile
  9030     1562                     l4463:
  9031                           
  9032                           ;pwm11.c: 90: PWM11PRH = 0x9C;
  9033     1562  309C               	movlw	156
  9034     1563  00B6               	movwf	54	;volatile
  9035     1564                     l4465:
  9036                           
  9037                           ;pwm11.c: 93: PWM11PRL = 0x3F;
  9038     1564  303F               	movlw	63
  9039     1565  00B5               	movwf	53	;volatile
  9040     1566                     l4467:
  9041                           
  9042                           ;pwm11.c: 96: PWM11OFH = 0x00;
  9043     1566  01B8               	clrf	56	;volatile
  9044                           
  9045                           ;pwm11.c: 99: PWM11OFL = 0x03;
  9046     1567  3003               	movlw	3
  9047     1568  00B7               	movwf	55	;volatile
  9048     1569                     l4469:
  9049                           
  9050                           ;pwm11.c: 102: PWM11TMRH = 0x00;
  9051     1569  01BA               	clrf	58	;volatile
  9052     156A                     l4471:
  9053                           
  9054                           ;pwm11.c: 105: PWM11TMRL = 0x00;
  9055     156A  01B9               	clrf	57	;volatile
  9056                           
  9057                           ;pwm11.c: 108: PWM11CON = 0x80;
  9058     156B  3080               	movlw	128
  9059     156C  00BB               	movwf	59	;volatile
  9060     156D                     l145:
  9061     156D  0008               	return
  9062     156E                     __end_of_PWM11_Initialize:
  9063                           
  9064                           	psect	text10
  9065     0856                     __ptext10:	
  9066 ;; *************** function _PIN_MANAGER_Initialize *****************
  9067 ;; Defined at:
  9068 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  9069 ;; Parameters:    Size  Location     Type
  9070 ;;		None
  9071 ;; Auto vars:     Size  Location     Type
  9072 ;;		None
  9073 ;; Return value:  Size  Location     Type
  9074 ;;                  1    wreg      void 
  9075 ;; Registers used:
  9076 ;;		wreg, status,2
  9077 ;; Tracked objects:
  9078 ;;		On entry : 0/0
  9079 ;;		On exit  : 0/0
  9080 ;;		Unchanged: 0/0
  9081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9085 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9086 ;;Total ram usage:        0 bytes
  9087 ;; Hardware stack levels used: 1
  9088 ;; Hardware stack levels required when called: 7
  9089 ;; This function calls:
  9090 ;;		Nothing
  9091 ;; This function is called by:
  9092 ;;		_SYSTEM_Initialize
  9093 ;; This function uses a non-reentrant model
  9094 ;;
  9095                           
  9096     0856                     _PIN_MANAGER_Initialize:	
  9097                           ;psect for function _PIN_MANAGER_Initialize
  9098                           
  9099     0856                     l4481:	
  9100                           ;incstack = 0
  9101                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  9102                           
  9103                           
  9104                           ;pin_manager.c: 60: LATA = 0x00;
  9105     0856  0022               	movlb	2	; select bank2
  9106     0857  018C               	clrf	12	;volatile
  9107                           
  9108                           ;pin_manager.c: 61: LATB = 0x00;
  9109     0858  018D               	clrf	13	;volatile
  9110                           
  9111                           ;pin_manager.c: 62: LATC = 0x00;
  9112     0859  018E               	clrf	14	;volatile
  9113     085A                     l4483:
  9114                           
  9115                           ;pin_manager.c: 67: TRISE = 0x08;
  9116     085A  3008               	movlw	8
  9117     085B  0021               	movlb	1	; select bank1
  9118     085C  0090               	movwf	16	;volatile
  9119     085D                     l4485:
  9120                           
  9121                           ;pin_manager.c: 68: TRISA = 0xDF;
  9122     085D  30DF               	movlw	223
  9123     085E  008C               	movwf	12	;volatile
  9124     085F                     l4487:
  9125                           
  9126                           ;pin_manager.c: 69: TRISB = 0xFF;
  9127     085F  30FF               	movlw	255
  9128     0860  008D               	movwf	13	;volatile
  9129     0861                     l4489:
  9130                           
  9131                           ;pin_manager.c: 70: TRISC = 0xFE;
  9132     0861  30FE               	movlw	254
  9133     0862  008E               	movwf	14	;volatile
  9134     0863                     l4491:
  9135                           
  9136                           ;pin_manager.c: 75: ANSELC = 0x04;
  9137     0863  3004               	movlw	4
  9138     0864  0023               	movlb	3	; select bank3
  9139     0865  008E               	movwf	14	;volatile
  9140     0866                     l4493:
  9141                           
  9142                           ;pin_manager.c: 76: ANSELB = 0x3E;
  9143     0866  303E               	movlw	62
  9144     0867  008D               	movwf	13	;volatile
  9145     0868                     l4495:
  9146                           
  9147                           ;pin_manager.c: 77: ANSELA = 0x3C;
  9148     0868  303C               	movlw	60
  9149     0869  008C               	movwf	12	;volatile
  9150     086A                     l4497:
  9151                           
  9152                           ;pin_manager.c: 82: WPUE = 0x00;
  9153     086A  0024               	movlb	4	; select bank4
  9154     086B  0190               	clrf	16	;volatile
  9155     086C                     l4499:
  9156                           
  9157                           ;pin_manager.c: 83: WPUB = 0x00;
  9158     086C  018D               	clrf	13	;volatile
  9159     086D                     l4501:
  9160                           
  9161                           ;pin_manager.c: 84: WPUA = 0x00;
  9162     086D  018C               	clrf	12	;volatile
  9163     086E                     l4503:
  9164                           
  9165                           ;pin_manager.c: 85: WPUC = 0x00;
  9166     086E  018E               	clrf	14	;volatile
  9167     086F                     l4505:
  9168                           
  9169                           ;pin_manager.c: 86: OPTION_REGbits.nWPUEN = 1;
  9170     086F  0021               	movlb	1	; select bank1
  9171     0870  1797               	bsf	23,7	;volatile
  9172     0871                     l4507:
  9173                           
  9174                           ;pin_manager.c: 91: ODCONA = 0x00;
  9175     0871  0025               	movlb	5	; select bank5
  9176     0872  018C               	clrf	12	;volatile
  9177     0873                     l4509:
  9178                           
  9179                           ;pin_manager.c: 92: ODCONB = 0x00;
  9180     0873  018D               	clrf	13	;volatile
  9181     0874                     l4511:
  9182                           
  9183                           ;pin_manager.c: 93: ODCONC = 0x00;
  9184     0874  018E               	clrf	14	;volatile
  9185                           
  9186                           ;pin_manager.c: 98: SLRCONA = 0xFF;
  9187     0875  30FF               	movlw	255
  9188     0876  0026               	movlb	6	; select bank6
  9189     0877  008C               	movwf	12	;volatile
  9190                           
  9191                           ;pin_manager.c: 99: SLRCONB = 0xFF;
  9192     0878  30FF               	movlw	255
  9193     0879  008D               	movwf	13	;volatile
  9194                           
  9195                           ;pin_manager.c: 100: SLRCONC = 0xFF;
  9196     087A  30FF               	movlw	255
  9197     087B  008E               	movwf	14	;volatile
  9198                           
  9199                           ;pin_manager.c: 105: INLVLA = 0x3F;
  9200     087C  303F               	movlw	63
  9201     087D  0027               	movlb	7	; select bank7
  9202     087E  008C               	movwf	12	;volatile
  9203                           
  9204                           ;pin_manager.c: 106: INLVLB = 0xF0;
  9205     087F  30F0               	movlw	240
  9206     0880  008D               	movwf	13	;volatile
  9207                           
  9208                           ;pin_manager.c: 107: INLVLC = 0xFF;
  9209     0881  30FF               	movlw	255
  9210     0882  008E               	movwf	14	;volatile
  9211                           
  9212                           ;pin_manager.c: 116: RC0PPS = 0x1F;
  9213     0883  301F               	movlw	31
  9214     0884  003D               	movlb	29	; select bank29
  9215     0885  00A0               	movwf	32	;volatile
  9216                           
  9217                           ;pin_manager.c: 117: SSPDATPPS = 0x14;
  9218     0886  3014               	movlw	20
  9219     0887  003C               	movlb	28	; select bank28
  9220     0888  00BB               	movwf	59	;volatile
  9221                           
  9222                           ;pin_manager.c: 118: RC3PPS = 0x21;
  9223     0889  3021               	movlw	33
  9224     088A  003D               	movlb	29	; select bank29
  9225     088B  00A3               	movwf	35	;volatile
  9226                           
  9227                           ;pin_manager.c: 119: RC4PPS = 0x22;
  9228     088C  3022               	movlw	34
  9229     088D  00A4               	movwf	36	;volatile
  9230                           
  9231                           ;pin_manager.c: 120: RA5PPS = 0x1E;
  9232     088E  301E               	movlw	30
  9233     088F  0095               	movwf	21	;volatile
  9234                           
  9235                           ;pin_manager.c: 121: SSPCLKPPS = 0x13;
  9236     0890  3013               	movlw	19
  9237     0891  003C               	movlb	28	; select bank28
  9238     0892  00BA               	movwf	58	;volatile
  9239     0893                     l282:
  9240     0893  0008               	return
  9241     0894                     __end_of_PIN_MANAGER_Initialize:
  9242                           
  9243                           	psect	text11
  9244     1339                     __ptext11:	
  9245 ;; *************** function _OSCILLATOR_Initialize *****************
  9246 ;; Defined at:
  9247 ;;		line 62 in file "mcc_generated_files/mcc.c"
  9248 ;; Parameters:    Size  Location     Type
  9249 ;;		None
  9250 ;; Auto vars:     Size  Location     Type
  9251 ;;		None
  9252 ;; Return value:  Size  Location     Type
  9253 ;;                  1    wreg      void 
  9254 ;; Registers used:
  9255 ;;		wreg, status,2
  9256 ;; Tracked objects:
  9257 ;;		On entry : 0/0
  9258 ;;		On exit  : 0/0
  9259 ;;		Unchanged: 0/0
  9260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9264 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9265 ;;Total ram usage:        0 bytes
  9266 ;; Hardware stack levels used: 1
  9267 ;; Hardware stack levels required when called: 7
  9268 ;; This function calls:
  9269 ;;		Nothing
  9270 ;; This function is called by:
  9271 ;;		_SYSTEM_Initialize
  9272 ;; This function uses a non-reentrant model
  9273 ;;
  9274                           
  9275     1339                     _OSCILLATOR_Initialize:	
  9276                           ;psect for function _OSCILLATOR_Initialize
  9277                           
  9278     1339                     l4513:	
  9279                           ;incstack = 0
  9280                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  9281                           
  9282                           
  9283                           ;mcc.c: 65: OSCCON = 0x78;
  9284     1339  3078               	movlw	120
  9285     133A  0021               	movlb	1	; select bank1
  9286     133B  009B               	movwf	27	;volatile
  9287                           
  9288                           ;mcc.c: 67: OSCSTAT = 0x80;
  9289     133C  3080               	movlw	128
  9290     133D  009C               	movwf	28	;volatile
  9291     133E                     l4515:
  9292                           
  9293                           ;mcc.c: 69: OSCTUNE = 0x00;
  9294     133E  019A               	clrf	26	;volatile
  9295     133F                     l4517:
  9296                           
  9297                           ;mcc.c: 71: BORCON = 0x00;
  9298     133F  019D               	clrf	29	;volatile
  9299     1340                     l216:
  9300     1340  0008               	return
  9301     1341                     __end_of_OSCILLATOR_Initialize:
  9302                           
  9303                           	psect	text12
  9304     1365                     __ptext12:	
  9305 ;; *************** function _I2C_Initialize *****************
  9306 ;; Defined at:
  9307 ;;		line 167 in file "mcc_generated_files/i2c_master.c"
  9308 ;; Parameters:    Size  Location     Type
  9309 ;;		None
  9310 ;; Auto vars:     Size  Location     Type
  9311 ;;		None
  9312 ;; Return value:  Size  Location     Type
  9313 ;;                  1    wreg      void 
  9314 ;; Registers used:
  9315 ;;		wreg, status,2
  9316 ;; Tracked objects:
  9317 ;;		On entry : 0/0
  9318 ;;		On exit  : 0/0
  9319 ;;		Unchanged: 0/0
  9320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9324 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9325 ;;Total ram usage:        0 bytes
  9326 ;; Hardware stack levels used: 1
  9327 ;; Hardware stack levels required when called: 7
  9328 ;; This function calls:
  9329 ;;		Nothing
  9330 ;; This function is called by:
  9331 ;;		_SYSTEM_Initialize
  9332 ;; This function uses a non-reentrant model
  9333 ;;
  9334                           
  9335     1365                     _I2C_Initialize:	
  9336                           ;psect for function _I2C_Initialize
  9337                           
  9338     1365                     l4473:	
  9339                           ;incstack = 0
  9340                           ; Regs used in _I2C_Initialize: [wreg+status,2]
  9341                           
  9342                           
  9343                           ;i2c_master.c: 169: SSP1STAT = 0x00;
  9344     1365  0024               	movlb	4	; select bank4
  9345     1366  0194               	clrf	20	;volatile
  9346     1367                     l4475:
  9347                           
  9348                           ;i2c_master.c: 170: SSP1CON1 = 0x08;
  9349     1367  3008               	movlw	8
  9350     1368  0095               	movwf	21	;volatile
  9351     1369                     l4477:
  9352                           
  9353                           ;i2c_master.c: 171: SSP1CON2 = 0x00;
  9354     1369  0196               	clrf	22	;volatile
  9355                           
  9356                           ;i2c_master.c: 172: SSP1ADD = 0x27;
  9357     136A  3027               	movlw	39
  9358     136B  0092               	movwf	18	;volatile
  9359     136C                     l4479:
  9360                           
  9361                           ;i2c_master.c: 173: SSP1CON1bits.SSPEN = 0;
  9362     136C  1295               	bcf	21,5	;volatile
  9363     136D                     l480:
  9364     136D  0008               	return
  9365     136E                     __end_of_I2C_Initialize:
  9366                           
  9367                           	psect	text13
  9368     0C56                     __ptext13:	
  9369 ;; *************** function _RTC_disp *****************
  9370 ;; Defined at:
  9371 ;;		line 267 in file "main.c"
  9372 ;; Parameters:    Size  Location     Type
  9373 ;;		None
  9374 ;; Auto vars:     Size  Location     Type
  9375 ;;		None
  9376 ;; Return value:  Size  Location     Type
  9377 ;;                  1    wreg      void 
  9378 ;; Registers used:
  9379 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9380 ;; Tracked objects:
  9381 ;;		On entry : 0/0
  9382 ;;		On exit  : 0/0
  9383 ;;		Unchanged: 0/0
  9384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9387 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9388 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9389 ;;Total ram usage:        2 bytes
  9390 ;; Hardware stack levels used: 1
  9391 ;; Hardware stack levels required when called: 14
  9392 ;; This function calls:
  9393 ;;		_font6_posi
  9394 ;;		_printf
  9395 ;; This function is called by:
  9396 ;;		_main
  9397 ;; This function uses a non-reentrant model
  9398 ;;
  9399                           
  9400     0C56                     _RTC_disp:	
  9401                           ;psect for function _RTC_disp
  9402                           
  9403     0C56                     l4831:	
  9404                           ;incstack = 0
  9405                           ; Regs used in _RTC_disp: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9406                           
  9407                           
  9408                           ;main.c: 268: font6_posi(1, 0);
  9409     0C56  0020               	movlb	0	; select bank0
  9410     0C57  01AD               	clrf	font6_posi@column
  9411     0C58  3001               	movlw	1
  9412     0C59  3197  2764  318C   	fcall	_font6_posi
  9413     0C5C                     l4833:
  9414                           
  9415                           ;main.c: 269: printf("20");
  9416     0C5C  30ED               	movlw	low (STR_15| (0+32768))
  9417     0C5D  0020               	movlb	0	; select bank0
  9418     0C5E  00B7               	movwf	printf@f
  9419     0C5F  3098               	movlw	high (STR_15| (0+32768))
  9420     0C60  00B8               	movwf	printf@f+1
  9421     0C61  3180  2096  318C   	fcall	_printf
  9422     0C64                     l4835:
  9423                           
  9424                           ;main.c: 270: printf("%x/",REG[7]);
  9425     0C64  30C5               	movlw	low (STR_16| (0+32768))
  9426     0C65  0020               	movlb	0	; select bank0
  9427     0C66  00B7               	movwf	printf@f
  9428     0C67  3098               	movlw	high (STR_16| (0+32768))
  9429     0C68  00B8               	movwf	printf@f+1
  9430     0C69  0021               	movlb	1	; select bank1
  9431     0C6A  0868               	movf	(_REG^(0+128)+7),w
  9432     0C6B  0020               	movlb	0	; select bank0
  9433     0C6C  00D2               	movwf	??_RTC_disp
  9434     0C6D  01D3               	clrf	??_RTC_disp+1
  9435     0C6E  0852               	movf	??_RTC_disp,w
  9436     0C6F  00B9               	movwf	?_printf+2
  9437     0C70  0853               	movf	??_RTC_disp+1,w
  9438     0C71  00BA               	movwf	?_printf+3
  9439     0C72  3180  2096  318C   	fcall	_printf
  9440     0C75                     l4837:
  9441                           
  9442                           ;main.c: 271: printf("%x/",REG[6]);
  9443     0C75  30C5               	movlw	low (STR_16| (0+32768))
  9444     0C76  0020               	movlb	0	; select bank0
  9445     0C77  00B7               	movwf	printf@f
  9446     0C78  3098               	movlw	high (STR_16| (0+32768))
  9447     0C79  00B8               	movwf	printf@f+1
  9448     0C7A  0021               	movlb	1	; select bank1
  9449     0C7B  0867               	movf	(_REG^(0+128)+6),w
  9450     0C7C  0020               	movlb	0	; select bank0
  9451     0C7D  00D2               	movwf	??_RTC_disp
  9452     0C7E  01D3               	clrf	??_RTC_disp+1
  9453     0C7F  0852               	movf	??_RTC_disp,w
  9454     0C80  00B9               	movwf	?_printf+2
  9455     0C81  0853               	movf	??_RTC_disp+1,w
  9456     0C82  00BA               	movwf	?_printf+3
  9457     0C83  3180  2096  318C   	fcall	_printf
  9458     0C86                     l4839:
  9459                           
  9460                           ;main.c: 272: printf("%x ",REG[5]);
  9461     0C86  30C1               	movlw	low (STR_18| (0+32768))
  9462     0C87  0020               	movlb	0	; select bank0
  9463     0C88  00B7               	movwf	printf@f
  9464     0C89  3098               	movlw	high (STR_18| (0+32768))
  9465     0C8A  00B8               	movwf	printf@f+1
  9466     0C8B  0021               	movlb	1	; select bank1
  9467     0C8C  0866               	movf	(_REG^(0+128)+5),w
  9468     0C8D  0020               	movlb	0	; select bank0
  9469     0C8E  00D2               	movwf	??_RTC_disp
  9470     0C8F  01D3               	clrf	??_RTC_disp+1
  9471     0C90  0852               	movf	??_RTC_disp,w
  9472     0C91  00B9               	movwf	?_printf+2
  9473     0C92  0853               	movf	??_RTC_disp+1,w
  9474     0C93  00BA               	movwf	?_printf+3
  9475     0C94  3180  2096  318C   	fcall	_printf
  9476     0C97                     l4841:
  9477                           
  9478                           ;main.c: 273: printf("(%s)",week[REG[4]]);
  9479     0C97  30B7               	movlw	low (STR_19| (0+32768))
  9480     0C98  0020               	movlb	0	; select bank0
  9481     0C99  00B7               	movwf	printf@f
  9482     0C9A  3098               	movlw	high (STR_19| (0+32768))
  9483     0C9B  00B8               	movwf	printf@f+1
  9484     0C9C  0021               	movlb	1	; select bank1
  9485     0C9D  3565               	lslf	(_REG^(0+128)+4),w
  9486     0C9E  3EC8               	addlw	(low (_week| (0+256)))& (0+255)
  9487     0C9F  0086               	movwf	6
  9488     0CA0  3001               	movlw	1	; select bank3/4
  9489     0CA1  0087               	movwf	7
  9490     0CA2  3F40               	moviw [0]fsr1
  9491     0CA3  0020               	movlb	0	; select bank0
  9492     0CA4  00B9               	movwf	low ((?_printf| 0+2))
  9493     0CA5  3F41               	moviw [1]fsr1
  9494     0CA6  00BA               	movwf	(low ((?_printf| 0+2))+1)
  9495     0CA7  3180  2096  318C   	fcall	_printf
  9496     0CAA                     l4843:
  9497                           
  9498                           ;main.c: 274: font6_posi(2, 0);
  9499     0CAA  0020               	movlb	0	; select bank0
  9500     0CAB  01AD               	clrf	font6_posi@column
  9501     0CAC  3002               	movlw	2
  9502     0CAD  3197  2764  318C   	fcall	_font6_posi
  9503                           
  9504                           ;main.c: 275: printf("%02x:",REG[3]);
  9505     0CB0  30B1               	movlw	low (STR_12| (0+32768))
  9506     0CB1  0020               	movlb	0	; select bank0
  9507     0CB2  00B7               	movwf	printf@f
  9508     0CB3  3098               	movlw	high (STR_12| (0+32768))
  9509     0CB4  00B8               	movwf	printf@f+1
  9510     0CB5  0021               	movlb	1	; select bank1
  9511     0CB6  0864               	movf	(_REG^(0+128)+3),w
  9512     0CB7  0020               	movlb	0	; select bank0
  9513     0CB8  00D2               	movwf	??_RTC_disp
  9514     0CB9  01D3               	clrf	??_RTC_disp+1
  9515     0CBA  0852               	movf	??_RTC_disp,w
  9516     0CBB  00B9               	movwf	?_printf+2
  9517     0CBC  0853               	movf	??_RTC_disp+1,w
  9518     0CBD  00BA               	movwf	?_printf+3
  9519     0CBE  3180  2096  318C   	fcall	_printf
  9520                           
  9521                           ;main.c: 276: printf("%02x:",REG[2]);
  9522     0CC1  30B1               	movlw	low (STR_12| (0+32768))
  9523     0CC2  0020               	movlb	0	; select bank0
  9524     0CC3  00B7               	movwf	printf@f
  9525     0CC4  3098               	movlw	high (STR_12| (0+32768))
  9526     0CC5  00B8               	movwf	printf@f+1
  9527     0CC6  0021               	movlb	1	; select bank1
  9528     0CC7  0863               	movf	(_REG^(0+128)+2),w
  9529     0CC8  0020               	movlb	0	; select bank0
  9530     0CC9  00D2               	movwf	??_RTC_disp
  9531     0CCA  01D3               	clrf	??_RTC_disp+1
  9532     0CCB  0852               	movf	??_RTC_disp,w
  9533     0CCC  00B9               	movwf	?_printf+2
  9534     0CCD  0853               	movf	??_RTC_disp+1,w
  9535     0CCE  00BA               	movwf	?_printf+3
  9536     0CCF  3180  2096  318C   	fcall	_printf
  9537                           
  9538                           ;main.c: 277: printf("%02x",REG[1]);
  9539     0CD2  30BC               	movlw	low (STR_14| (0+32768))
  9540     0CD3  0020               	movlb	0	; select bank0
  9541     0CD4  00B7               	movwf	printf@f
  9542     0CD5  3098               	movlw	high (STR_14| (0+32768))
  9543     0CD6  00B8               	movwf	printf@f+1
  9544     0CD7  0021               	movlb	1	; select bank1
  9545     0CD8  0862               	movf	(_REG^(0+128)+1),w
  9546     0CD9  0020               	movlb	0	; select bank0
  9547     0CDA  00D2               	movwf	??_RTC_disp
  9548     0CDB  01D3               	clrf	??_RTC_disp+1
  9549     0CDC  0852               	movf	??_RTC_disp,w
  9550     0CDD  00B9               	movwf	?_printf+2
  9551     0CDE  0853               	movf	??_RTC_disp+1,w
  9552     0CDF  00BA               	movwf	?_printf+3
  9553     0CE0  3180  2096  318C   	fcall	_printf
  9554     0CE3                     l1009:
  9555     0CE3  0008               	return
  9556     0CE4                     __end_of_RTC_disp:
  9557                           
  9558                           	psect	text14
  9559     13E2                     __ptext14:	
  9560 ;; *************** function _OLED_init *****************
  9561 ;; Defined at:
  9562 ;;		line 171 in file "main.c"
  9563 ;; Parameters:    Size  Location     Type
  9564 ;;		None
  9565 ;; Auto vars:     Size  Location     Type
  9566 ;;		None
  9567 ;; Return value:  Size  Location     Type
  9568 ;;                  1    wreg      void 
  9569 ;; Registers used:
  9570 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9571 ;; Tracked objects:
  9572 ;;		On entry : 0/0
  9573 ;;		On exit  : 0/0
  9574 ;;		Unchanged: 0/0
  9575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9579 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9580 ;;Total ram usage:        0 bytes
  9581 ;; Hardware stack levels used: 1
  9582 ;; Hardware stack levels required when called: 12
  9583 ;; This function calls:
  9584 ;;		_OLED_cmd
  9585 ;; This function is called by:
  9586 ;;		_main
  9587 ;; This function uses a non-reentrant model
  9588 ;;
  9589                           
  9590     13E2                     _OLED_init:	
  9591                           ;psect for function _OLED_init
  9592                           
  9593     13E2                     l4815:	
  9594                           ;incstack = 0
  9595                           ; Regs used in _OLED_init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9596                           
  9597                           
  9598                           ;main.c: 172: OLED_cmd(0x8D);
  9599     13E2  308D               	movlw	141
  9600     13E3  3193  238D  3193   	fcall	_OLED_cmd
  9601                           
  9602                           ;main.c: 173: OLED_cmd(0x14);
  9603     13E6  3014               	movlw	20
  9604     13E7  3193  238D  3193   	fcall	_OLED_cmd
  9605                           
  9606                           ;main.c: 174: OLED_cmd(0xAF);
  9607     13EA  30AF               	movlw	175
  9608     13EB  3193  238D  3193   	fcall	_OLED_cmd
  9609     13EE                     l975:
  9610     13EE  0008               	return
  9611     13EF                     __end_of_OLED_init:
  9612                           
  9613                           	psect	text15
  9614     138D                     __ptext15:	
  9615 ;; *************** function _OLED_cmd *****************
  9616 ;; Defined at:
  9617 ;;		line 161 in file "main.c"
  9618 ;; Parameters:    Size  Location     Type
  9619 ;;  cmd             1    wreg     unsigned char 
  9620 ;; Auto vars:     Size  Location     Type
  9621 ;;  cmd             1   11[BANK0 ] unsigned char 
  9622 ;; Return value:  Size  Location     Type
  9623 ;;                  1    wreg      void 
  9624 ;; Registers used:
  9625 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9626 ;; Tracked objects:
  9627 ;;		On entry : 0/0
  9628 ;;		On exit  : 0/0
  9629 ;;		Unchanged: 0/0
  9630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9632 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9634 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9635 ;;Total ram usage:        1 bytes
  9636 ;; Hardware stack levels used: 1
  9637 ;; Hardware stack levels required when called: 11
  9638 ;; This function calls:
  9639 ;;		_I2C_Write1ByteRegister
  9640 ;; This function is called by:
  9641 ;;		_OLED_init
  9642 ;; This function uses a non-reentrant model
  9643 ;;
  9644                           
  9645     138D                     _OLED_cmd:	
  9646                           ;psect for function _OLED_cmd
  9647                           
  9648                           
  9649                           ;incstack = 0
  9650                           ; Regs used in _OLED_cmd: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9651                           ;OLED_cmd@cmd stored from wreg
  9652     138D  0020               	movlb	0	; select bank0
  9653     138E  00AB               	movwf	OLED_cmd@cmd
  9654     138F                     l4595:
  9655                           
  9656                           ;main.c: 162: I2C_Write1ByteRegister(0x3C,0x80,cmd);
  9657     138F  3080               	movlw	128
  9658     1390  00A8               	movwf	I2C_Write1ByteRegister@reg
  9659     1391  082B               	movf	OLED_cmd@cmd,w
  9660     1392  00A9               	movwf	I2C_Write1ByteRegister@data
  9661     1393  303C               	movlw	60
  9662     1394  3197  27C8  3193   	fcall	_I2C_Write1ByteRegister
  9663     1397                     l969:
  9664     1397  0008               	return
  9665     1398                     __end_of_OLED_cmd:
  9666                           
  9667                           	psect	text16
  9668     1601                     __ptext16:	
  9669 ;; *************** function _OLED_clr *****************
  9670 ;; Defined at:
  9671 ;;		line 178 in file "main.c"
  9672 ;; Parameters:    Size  Location     Type
  9673 ;;		None
  9674 ;; Auto vars:     Size  Location     Type
  9675 ;;  i               2   13[BANK0 ] unsigned int 
  9676 ;; Return value:  Size  Location     Type
  9677 ;;                  1    wreg      void 
  9678 ;; Registers used:
  9679 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9680 ;; Tracked objects:
  9681 ;;		On entry : 0/0
  9682 ;;		On exit  : 0/0
  9683 ;;		Unchanged: 0/0
  9684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9686 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9688 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9689 ;;Total ram usage:        2 bytes
  9690 ;; Hardware stack levels used: 1
  9691 ;; Hardware stack levels required when called: 12
  9692 ;; This function calls:
  9693 ;;		_I2C_WriteNBytes
  9694 ;;		_OLED_data
  9695 ;; This function is called by:
  9696 ;;		_main
  9697 ;; This function uses a non-reentrant model
  9698 ;;
  9699                           
  9700     1601                     _OLED_clr:	
  9701                           ;psect for function _OLED_clr
  9702                           
  9703     1601                     l4817:	
  9704                           ;incstack = 0
  9705                           ; Regs used in _OLED_clr: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9706                           
  9707                           
  9708                           ;main.c: 179: I2C_WriteNBytes(0x3C, CLR_cmd, 9);
  9709     1601  3059               	movlw	low _CLR_cmd
  9710     1602  0020               	movlb	0	; select bank0
  9711     1603  00A8               	movwf	I2C_WriteNBytes@data
  9712     1604  3001               	movlw	high _CLR_cmd
  9713     1605  00A9               	movwf	I2C_WriteNBytes@data+1
  9714     1606  3009               	movlw	9
  9715     1607  00AA               	movwf	I2C_WriteNBytes@len
  9716     1608  3000               	movlw	0
  9717     1609  00AB               	movwf	I2C_WriteNBytes@len+1
  9718     160A  303C               	movlw	60
  9719     160B  3197  2707  3196   	fcall	_I2C_WriteNBytes
  9720     160E                     l4819:
  9721                           
  9722                           ;main.c: 180: for(unsigned int i = 0;i < 1024 ;i++ ){
  9723     160E  0020               	movlb	0	; select bank0
  9724     160F  01AD               	clrf	OLED_clr@i
  9725     1610  01AE               	clrf	OLED_clr@i+1
  9726     1611                     l4825:
  9727                           
  9728                           ;main.c: 181: OLED_data(0x00);
  9729     1611  3000               	movlw	0
  9730     1612  3193  2382  3196   	fcall	_OLED_data
  9731     1615                     l4827:
  9732     1615  3001               	movlw	1
  9733     1616  0020               	movlb	0	; select bank0
  9734     1617  07AD               	addwf	OLED_clr@i,f
  9735     1618  3000               	movlw	0
  9736     1619  3DAE               	addwfc	OLED_clr@i+1,f
  9737     161A                     l4829:
  9738     161A  3004               	movlw	4
  9739     161B  022E               	subwf	OLED_clr@i+1,w
  9740     161C  3000               	movlw	0
  9741     161D  1903               	skipnz
  9742     161E  022D               	subwf	OLED_clr@i,w
  9743     161F  1C03               	skipc
  9744     1620  2E22               	goto	u3881
  9745     1621  2E23               	goto	u3880
  9746     1622                     u3881:
  9747     1622  2E11               	goto	l4825
  9748     1623                     u3880:
  9749     1623                     l980:
  9750     1623  0008               	return
  9751     1624                     __end_of_OLED_clr:
  9752                           
  9753                           	psect	text17
  9754     1382                     __ptext17:	
  9755 ;; *************** function _OLED_data *****************
  9756 ;; Defined at:
  9757 ;;		line 166 in file "main.c"
  9758 ;; Parameters:    Size  Location     Type
  9759 ;;  dat             1    wreg     unsigned char 
  9760 ;; Auto vars:     Size  Location     Type
  9761 ;;  dat             1   11[BANK0 ] unsigned char 
  9762 ;; Return value:  Size  Location     Type
  9763 ;;                  1    wreg      void 
  9764 ;; Registers used:
  9765 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9766 ;; Tracked objects:
  9767 ;;		On entry : 0/0
  9768 ;;		On exit  : 0/0
  9769 ;;		Unchanged: 0/0
  9770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9772 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9774 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9775 ;;Total ram usage:        1 bytes
  9776 ;; Hardware stack levels used: 1
  9777 ;; Hardware stack levels required when called: 11
  9778 ;; This function calls:
  9779 ;;		_I2C_Write1ByteRegister
  9780 ;; This function is called by:
  9781 ;;		_OLED_clr
  9782 ;; This function uses a non-reentrant model
  9783 ;;
  9784                           
  9785     1382                     _OLED_data:	
  9786                           ;psect for function _OLED_data
  9787                           
  9788                           
  9789                           ;incstack = 0
  9790                           ; Regs used in _OLED_data: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9791                           ;OLED_data@dat stored from wreg
  9792     1382  0020               	movlb	0	; select bank0
  9793     1383  00AB               	movwf	OLED_data@dat
  9794     1384                     l4597:
  9795                           
  9796                           ;main.c: 167: I2C_Write1ByteRegister(0x3C,0xC0,dat);
  9797     1384  30C0               	movlw	192
  9798     1385  00A8               	movwf	I2C_Write1ByteRegister@reg
  9799     1386  082B               	movf	OLED_data@dat,w
  9800     1387  00A9               	movwf	I2C_Write1ByteRegister@data
  9801     1388  303C               	movlw	60
  9802     1389  3197  27C8  3193   	fcall	_I2C_Write1ByteRegister
  9803     138C                     l972:
  9804     138C  0008               	return
  9805     138D                     __end_of_OLED_data:
  9806                           
  9807                           	psect	text18
  9808     0BF0                     __ptext18:	
  9809 ;; *************** function _MoveServo *****************
  9810 ;; Defined at:
  9811 ;;		line 358 in file "main.c"
  9812 ;; Parameters:    Size  Location     Type
  9813 ;;		None
  9814 ;; Auto vars:     Size  Location     Type
  9815 ;;		None
  9816 ;; Return value:  Size  Location     Type
  9817 ;;                  1    wreg      void 
  9818 ;; Registers used:
  9819 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9820 ;; Tracked objects:
  9821 ;;		On entry : 0/0
  9822 ;;		On exit  : 0/0
  9823 ;;		Unchanged: 0/0
  9824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9828 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9829 ;;Total ram usage:        0 bytes
  9830 ;; Hardware stack levels used: 1
  9831 ;; Hardware stack levels required when called: 14
  9832 ;; This function calls:
  9833 ;;		_I2C_Write1ByteRegister
  9834 ;;		_Pen_swipe
  9835 ;;		_Pen_swipe2
  9836 ;;		_font6_posi
  9837 ;;		_printf
  9838 ;; This function is called by:
  9839 ;;		_main
  9840 ;; This function uses a non-reentrant model
  9841 ;;
  9842                           
  9843     0BF0                     _MoveServo:	
  9844                           ;psect for function _MoveServo
  9845                           
  9846     0BF0                     l4845:	
  9847                           ;incstack = 0
  9848                           ; Regs used in _MoveServo: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9849                           
  9850                           
  9851                           ;main.c: 361: font6_posi(4, 0);
  9852     0BF0  0020               	movlb	0	; select bank0
  9853     0BF1  01AD               	clrf	font6_posi@column
  9854     0BF2  3004               	movlw	4
  9855     0BF3  3197  2764  318B   	fcall	_font6_posi
  9856     0BF6                     l4847:
  9857                           
  9858                           ;main.c: 362: printf("MOVE SERVO ");
  9859     0BF6  308C               	movlw	low (STR_23| (0+32768))
  9860     0BF7  0020               	movlb	0	; select bank0
  9861     0BF8  00B7               	movwf	printf@f
  9862     0BF9  3098               	movlw	high (STR_23| (0+32768))
  9863     0BFA  00B8               	movwf	printf@f+1
  9864     0BFB  3180  2096  318B   	fcall	_printf
  9865     0BFE                     l4849:
  9866                           
  9867                           ;main.c: 364: I2C_Write1ByteRegister(0x32,0xE0,0x20);
  9868     0BFE  30E0               	movlw	224
  9869     0BFF  0020               	movlb	0	; select bank0
  9870     0C00  00A8               	movwf	I2C_Write1ByteRegister@reg
  9871     0C01  3020               	movlw	32
  9872     0C02  00A9               	movwf	I2C_Write1ByteRegister@data
  9873     0C03  3032               	movlw	50
  9874     0C04  3197  27C8  318B   	fcall	_I2C_Write1ByteRegister
  9875     0C07                     l4851:
  9876                           
  9877                           ;main.c: 365: alm_active=0;
  9878     0C07  0021               	movlb	1	; select bank1
  9879     0C08  01DA               	clrf	_alm_active^(0+128)
  9880     0C09                     l4853:
  9881                           
  9882                           ;main.c: 368: if(alm_settei[2][0]==0 & alm_settei[3][0]==0){
  9883     0C09  0022               	movlb	2	; select bank2
  9884     0C0A  083E               	movf	(_alm_settei^(0+256)+6),w
  9885     0C0B  1D03               	btfss	3,2
  9886     0C0C  2C0E               	goto	u3891
  9887     0C0D  2C0F               	goto	u3890
  9888     0C0E                     u3891:
  9889     0C0E  2C1D               	goto	l4861
  9890     0C0F                     u3890:
  9891     0C0F                     l4855:
  9892     0C0F  0841               	movf	(_alm_settei^(0+256)+9),w
  9893     0C10  1D03               	btfss	3,2
  9894     0C11  2C13               	goto	u3901
  9895     0C12  2C14               	goto	u3900
  9896     0C13                     u3901:
  9897     0C13  2C1D               	goto	l4861
  9898     0C14                     u3900:
  9899     0C14                     l4857:
  9900                           
  9901                           ;main.c: 369: Pen_swipe(2500);
  9902     0C14  30C4               	movlw	196
  9903     0C15  0020               	movlb	0	; select bank0
  9904     0C16  00A2               	movwf	Pen_swipe@set_duty
  9905     0C17  3009               	movlw	9
  9906     0C18  00A3               	movwf	Pen_swipe@set_duty+1
  9907     0C19  3194  2491  318B   	fcall	_Pen_swipe
  9908     0C1C  2C55               	goto	l1043
  9909     0C1D                     l4861:
  9910                           
  9911                           ;main.c: 371: };main.c: 372: if(alm_settei[2][0]==0 & alm_settei[3][0]==1){
  9912     0C1D  083E               	movf	(_alm_settei^(0+256)+6),w
  9913     0C1E  1D03               	btfss	3,2
  9914     0C1F  2C21               	goto	u3911
  9915     0C20  2C22               	goto	u3910
  9916     0C21                     u3911:
  9917     0C21  2C30               	goto	l4869
  9918     0C22                     u3910:
  9919     0C22                     l4863:
  9920     0C22  0341               	decf	(_alm_settei^(0+256)+9),w
  9921     0C23  1D03               	btfss	3,2
  9922     0C24  2C26               	goto	u3921
  9923     0C25  2C27               	goto	u3920
  9924     0C26                     u3921:
  9925     0C26  2C30               	goto	l4869
  9926     0C27                     u3920:
  9927     0C27                     l4865:
  9928                           
  9929                           ;main.c: 373: Pen_swipe(1900);
  9930     0C27  306C               	movlw	108
  9931     0C28  0020               	movlb	0	; select bank0
  9932     0C29  00A2               	movwf	Pen_swipe@set_duty
  9933     0C2A  3007               	movlw	7
  9934     0C2B  00A3               	movwf	Pen_swipe@set_duty+1
  9935     0C2C  3194  2491  318B   	fcall	_Pen_swipe
  9936     0C2F  2C55               	goto	l1043
  9937     0C30                     l4869:
  9938                           
  9939                           ;main.c: 375: };main.c: 378: if(alm_settei[2][0]==1 & alm_settei[3][0]==0){
  9940     0C30  033E               	decf	(_alm_settei^(0+256)+6),w
  9941     0C31  1D03               	btfss	3,2
  9942     0C32  2C34               	goto	u3931
  9943     0C33  2C35               	goto	u3930
  9944     0C34                     u3931:
  9945     0C34  2C43               	goto	l4877
  9946     0C35                     u3930:
  9947     0C35                     l4871:
  9948     0C35  0841               	movf	(_alm_settei^(0+256)+9),w
  9949     0C36  1D03               	btfss	3,2
  9950     0C37  2C39               	goto	u3941
  9951     0C38  2C3A               	goto	u3940
  9952     0C39                     u3941:
  9953     0C39  2C43               	goto	l4877
  9954     0C3A                     u3940:
  9955     0C3A                     l4873:
  9956                           
  9957                           ;main.c: 379: Pen_swipe2(2500);
  9958     0C3A  30C4               	movlw	196
  9959     0C3B  0020               	movlb	0	; select bank0
  9960     0C3C  00A2               	movwf	Pen_swipe2@set_duty
  9961     0C3D  3009               	movlw	9
  9962     0C3E  00A3               	movwf	Pen_swipe2@set_duty+1
  9963     0C3F  3194  24A5  318B   	fcall	_Pen_swipe2
  9964     0C42  2C55               	goto	l1043
  9965     0C43                     l4877:
  9966                           
  9967                           ;main.c: 381: };main.c: 382: if(alm_settei[2][0]==1 & alm_settei[3][0]==1){
  9968     0C43  033E               	decf	(_alm_settei^(0+256)+6),w
  9969     0C44  1D03               	btfss	3,2
  9970     0C45  2C47               	goto	u3951
  9971     0C46  2C48               	goto	u3950
  9972     0C47                     u3951:
  9973     0C47  2C55               	goto	l1043
  9974     0C48                     u3950:
  9975     0C48                     l4879:
  9976     0C48  0341               	decf	(_alm_settei^(0+256)+9),w
  9977     0C49  1D03               	btfss	3,2
  9978     0C4A  2C4C               	goto	u3961
  9979     0C4B  2C4D               	goto	u3960
  9980     0C4C                     u3961:
  9981     0C4C  2C55               	goto	l1043
  9982     0C4D                     u3960:
  9983     0C4D                     l4881:
  9984                           
  9985                           ;main.c: 383: Pen_swipe2(1900);
  9986     0C4D  306C               	movlw	108
  9987     0C4E  0020               	movlb	0	; select bank0
  9988     0C4F  00A2               	movwf	Pen_swipe2@set_duty
  9989     0C50  3007               	movlw	7
  9990     0C51  00A3               	movwf	Pen_swipe2@set_duty+1
  9991     0C52  3194  24A5  318B   	fcall	_Pen_swipe2
  9992     0C55                     l1043:
  9993     0C55  0008               	return
  9994     0C56                     __end_of_MoveServo:
  9995                           
  9996                           	psect	text19
  9997     0096                     __ptext19:	
  9998 ;; *************** function _printf *****************
  9999 ;; Defined at:
 10000 ;;		line 477 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c90\common\doprnt.c"
 10001 ;; Parameters:    Size  Location     Type
 10002 ;;  f               2   23[BANK0 ] PTR const unsigned char 
 10003 ;;		 -> STR_35(33), STR_34(17), STR_33(17), STR_32(26), 
 10004 ;;		 -> STR_31(16), STR_30(26), STR_29(16), STR_28(3), 
 10005 ;;		 -> STR_27(3), STR_26(3), STR_25(3), STR_24(62), 
 10006 ;;		 -> STR_23(12), STR_22(5), STR_21(6), STR_20(6), 
 10007 ;;		 -> STR_19(5), STR_18(4), STR_17(4), STR_16(4), 
 10008 ;;		 -> STR_15(3), STR_14(5), STR_13(6), STR_12(6), 
 10009 ;; Auto vars:     Size  Location     Type
 10010 ;;  idx             1   37[BANK0 ] unsigned char 
 10011 ;;  tmpval          4    0        struct .
 10012 ;;  width           2   47[BANK0 ] int 
 10013 ;;  val             2   44[BANK0 ] unsigned int 
 10014 ;;  len             2   42[BANK0 ] unsigned int 
 10015 ;;  cp              2   39[BANK0 ] PTR const unsigned char 
 10016 ;;		 -> STR_36(7), ?_printf(2), unit2(16), unit(64), 
 10017 ;;		 -> STR_11(2), STR_10(2), STR_9(4), STR_8(4), 
 10018 ;;		 -> STR_7(4), STR_6(4), STR_5(4), STR_4(4), 
 10019 ;;		 -> STR_3(4), STR_2(4), STR_1(4), 
 10020 ;;  c               1   49[BANK0 ] unsigned char 
 10021 ;;  flag            1   46[BANK0 ] unsigned char 
 10022 ;;  ap              1   41[BANK0 ] PTR void [1]
 10023 ;;		 -> ?_printf(2), 
 10024 ;;  prec            1   38[BANK0 ] char 
 10025 ;; Return value:  Size  Location     Type
 10026 ;;                  2   23[BANK0 ] int 
 10027 ;; Registers used:
 10028 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10029 ;; Tracked objects:
 10030 ;;		On entry : 0/0
 10031 ;;		On exit  : 0/0
 10032 ;;		Unchanged: 0/0
 10033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10034 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10035 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10036 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10037 ;;      Totals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10038 ;;Total ram usage:       27 bytes
 10039 ;; Hardware stack levels used: 1
 10040 ;; Hardware stack levels required when called: 13
 10041 ;; This function calls:
 10042 ;;		___lwdiv
 10043 ;;		___lwmod
 10044 ;;		___wmul
 10045 ;;		_isdigit
 10046 ;;		_putch
 10047 ;; This function is called by:
 10048 ;;		_RTC_disp
 10049 ;;		_MoveServo
 10050 ;;		_main
 10051 ;;		_Time_disp
 10052 ;; This function uses a non-reentrant model
 10053 ;;
 10054                           
 10055     0096                     _printf:	
 10056                           ;psect for function _printf
 10057                           
 10058     0096                     l4615:	
 10059                           ;incstack = 0
 10060                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10061                           
 10062                           
 10063                           ;doprnt.c: 479: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 514: int width;;doprnt.c: 5
      +                          21: signed char prec;;doprnt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c
      +                          : 541: unsigned long vd;;doprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c:
      +                           545: unsigned int val;;doprnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;dop
      +                          rnt.c: 550: *ap = __va_start();
 10064     0096  3039               	movlw	(low ((?_printf| 0+2)))& (0+255)
 10065     0097  0020               	movlb	0	; select bank0
 10066     0098  00C9               	movwf	printf@ap
 10067                           
 10068                           ;doprnt.c: 553: while((c = *f++)) {
 10069     0099  2AD1               	goto	l4761
 10070     009A                     l4617:
 10071                           
 10072                           ;doprnt.c: 555: if(c != '%')
 10073     009A  3025               	movlw	37
 10074     009B  0651               	xorwf	printf@c,w
 10075     009C  1903               	btfsc	3,2
 10076     009D  289F               	goto	u3561
 10077     009E  28A0               	goto	u3560
 10078     009F                     u3561:
 10079     009F  28A5               	goto	l4621
 10080     00A0                     u3560:
 10081     00A0                     l4619:
 10082                           
 10083                           ;doprnt.c: 557: {;doprnt.c: 558: (putch(c) );
 10084     00A0  0851               	movf	printf@c,w
 10085     00A1  3194  24B9  3180   	fcall	_putch
 10086                           
 10087                           ;doprnt.c: 559: continue;
 10088     00A4  2AD1               	goto	l4761
 10089     00A5                     l4621:
 10090                           
 10091                           ;doprnt.c: 560: };doprnt.c: 563: width = 0;
 10092     00A5  01CF               	clrf	printf@width
 10093     00A6  01D0               	clrf	printf@width+1
 10094                           
 10095                           ;doprnt.c: 565: flag = 0;
 10096     00A7  01CE               	clrf	printf@flag
 10097     00A8  28AE               	goto	l4627
 10098     00A9                     l1175:	
 10099                           ;doprnt.c: 596: case '0':
 10100                           
 10101                           
 10102                           ;doprnt.c: 597: flag |= 0x04;
 10103     00A9  154E               	bsf	printf@flag,2
 10104     00AA                     l4623:
 10105                           
 10106                           ;doprnt.c: 598: f++;
 10107     00AA  3001               	movlw	1
 10108     00AB  07B7               	addwf	printf@f,f
 10109     00AC  3000               	movlw	0
 10110     00AD  3DB8               	addwfc	printf@f+1,f
 10111     00AE                     l4627:	
 10112                           ;doprnt.c: 599: continue;
 10113                           
 10114     00AE  0837               	movf	printf@f,w
 10115     00AF  0084               	movwf	4
 10116     00B0  0838               	movf	printf@f+1,w
 10117     00B1  0085               	movwf	5
 10118     00B2  0800               	movf	0,w	;code access
 10119                           
 10120                           ; Switch size 1, requested type "simple"
 10121                           ; Number of cases is 1, Range of values is 48 to 48
 10122                           ; switch strategies available:
 10123                           ; Name         Instructions Cycles
 10124                           ; simple_byte            4     3 (average)
 10125                           ; direct_byte           11     9 (fixed)
 10126                           ; jumptable            263     9 (fixed)
 10127                           ;	Chosen strategy is simple_byte
 10128     00B3  3A30               	xorlw	48	; case 48
 10129     00B4  1903               	skipnz
 10130     00B5  28A9               	goto	l1175
 10131     00B6  28B7               	goto	l4629
 10132     00B7                     l4629:
 10133                           
 10134                           ;doprnt.c: 614: if(isdigit((unsigned)*f)) {
 10135     00B7  0837               	movf	printf@f,w
 10136     00B8  0084               	movwf	4
 10137     00B9  0838               	movf	printf@f+1,w
 10138     00BA  0085               	movwf	5
 10139     00BB  0800               	movf	0,w	;code access
 10140     00BC  3194  247E  3180   	fcall	_isdigit
 10141     00BF  1C03               	btfss	3,0
 10142     00C0  28C2               	goto	u3571
 10143     00C1  28C3               	goto	u3570
 10144     00C2                     u3571:
 10145     00C2  295E               	goto	l4673
 10146     00C3                     u3570:
 10147     00C3                     l4631:
 10148                           
 10149                           ;doprnt.c: 615: width = 0;
 10150     00C3  0020               	movlb	0	; select bank0
 10151     00C4  01CF               	clrf	printf@width
 10152     00C5  01D0               	clrf	printf@width+1
 10153     00C6                     l4633:
 10154                           
 10155                           ;doprnt.c: 617: width *= 10;
 10156     00C6  300A               	movlw	10
 10157     00C7  0020               	movlb	0	; select bank0
 10158     00C8  00A0               	movwf	___wmul@multiplier
 10159     00C9  3000               	movlw	0
 10160     00CA  00A1               	movwf	___wmul@multiplier+1
 10161     00CB  0850               	movf	printf@width+1,w
 10162     00CC  00A3               	movwf	___wmul@multiplicand+1
 10163     00CD  084F               	movf	printf@width,w
 10164     00CE  00A2               	movwf	___wmul@multiplicand
 10165     00CF  3195  25E1  3180   	fcall	___wmul
 10166     00D2  0020               	movlb	0	; select bank0
 10167     00D3  0821               	movf	?___wmul+1,w
 10168     00D4  00D0               	movwf	printf@width+1
 10169     00D5  0820               	movf	?___wmul,w
 10170     00D6  00CF               	movwf	printf@width
 10171     00D7                     l4635:
 10172                           
 10173                           ;doprnt.c: 618: width += *f++ - '0';
 10174     00D7  0837               	movf	printf@f,w
 10175     00D8  0084               	movwf	4
 10176     00D9  0838               	movf	printf@f+1,w
 10177     00DA  0085               	movwf	5
 10178     00DB  0800               	movf	0,w	;code access
 10179     00DC  3ED0               	addlw	208
 10180     00DD  00C1               	movwf	??_printf
 10181     00DE  30FF               	movlw	255
 10182     00DF  1803               	skipnc
 10183     00E0  3000               	movlw	0
 10184     00E1  00C2               	movwf	??_printf+1
 10185     00E2  0841               	movf	??_printf,w
 10186     00E3  07CF               	addwf	printf@width,f
 10187     00E4  0842               	movf	??_printf+1,w
 10188     00E5  3DD0               	addwfc	printf@width+1,f
 10189     00E6                     l4637:
 10190     00E6  3001               	movlw	1
 10191     00E7  07B7               	addwf	printf@f,f
 10192     00E8  3000               	movlw	0
 10193     00E9  3DB8               	addwfc	printf@f+1,f
 10194     00EA                     l4639:
 10195                           
 10196                           ;doprnt.c: 619: } while(isdigit((unsigned)*f));
 10197     00EA  0837               	movf	printf@f,w
 10198     00EB  0084               	movwf	4
 10199     00EC  0838               	movf	printf@f+1,w
 10200     00ED  0085               	movwf	5
 10201     00EE  0800               	movf	0,w	;code access
 10202     00EF  3194  247E  3180   	fcall	_isdigit
 10203     00F2  1803               	btfsc	3,0
 10204     00F3  28F5               	goto	u3581
 10205     00F4  28F6               	goto	u3580
 10206     00F5                     u3581:
 10207     00F5  28C6               	goto	l4633
 10208     00F6                     u3580:
 10209     00F6  295E               	goto	l4673
 10210     00F7                     l1188:	
 10211                           ;doprnt.c: 744: case 'x':
 10212                           
 10213                           
 10214                           ;doprnt.c: 747: flag |= 0x80;
 10215     00F7  17CE               	bsf	printf@flag,7
 10216                           
 10217                           ;doprnt.c: 749: break;
 10218     00F8  297C               	goto	l1187
 10219     00F9                     l4641:
 10220                           
 10221                           ;doprnt.c: 760: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 10222     00F9  0849               	movf	printf@ap,w
 10223     00FA  0086               	movwf	6
 10224     00FB  0187               	clrf	7
 10225     00FC  3F40               	moviw [0]fsr1
 10226     00FD  00C7               	movwf	printf@cp
 10227     00FE  3F41               	moviw [1]fsr1
 10228     00FF  00C8               	movwf	printf@cp+1
 10229     0100                     l4643:
 10230     0100  3002               	movlw	2
 10231     0101  00C1               	movwf	??_printf
 10232     0102  0841               	movf	??_printf,w
 10233     0103  07C9               	addwf	printf@ap,f
 10234     0104                     l4645:
 10235                           
 10236                           ;doprnt.c: 766: if(!cp)
 10237     0104  0847               	movf	printf@cp,w
 10238     0105  0448               	iorwf	printf@cp+1,w
 10239     0106  1D03               	btfss	3,2
 10240     0107  2909               	goto	u3591
 10241     0108  290A               	goto	u3590
 10242     0109                     u3591:
 10243     0109  290E               	goto	l4649
 10244     010A                     u3590:
 10245     010A                     l4647:
 10246                           
 10247                           ;doprnt.c: 767: cp = "(null)";
 10248     010A  30AA               	movlw	low (STR_36| (0+32768))
 10249     010B  00C7               	movwf	printf@cp
 10250     010C  3098               	movlw	high (STR_36| (0+32768))
 10251     010D  00C8               	movwf	printf@cp+1
 10252     010E                     l4649:
 10253                           
 10254                           ;doprnt.c: 771: len = 0;
 10255     010E  01CA               	clrf	printf@len
 10256     010F  01CB               	clrf	printf@len+1
 10257                           
 10258                           ;doprnt.c: 772: while(cp[len])
 10259     0110  2915               	goto	l4653
 10260     0111                     l4651:
 10261                           
 10262                           ;doprnt.c: 773: len++;
 10263     0111  3001               	movlw	1
 10264     0112  07CA               	addwf	printf@len,f
 10265     0113  3000               	movlw	0
 10266     0114  3DCB               	addwfc	printf@len+1,f
 10267     0115                     l4653:
 10268     0115  0847               	movf	printf@cp,w
 10269     0116  074A               	addwf	printf@len,w
 10270     0117  0084               	movwf	4
 10271     0118  0848               	movf	printf@cp+1,w
 10272     0119  3D4B               	addwfc	printf@len+1,w
 10273     011A  0085               	movwf	5
 10274     011B  0012               	moviw fsr0++
 10275     011C  1D03               	btfss	3,2
 10276     011D  291F               	goto	u3601
 10277     011E  2920               	goto	u3600
 10278     011F                     u3601:
 10279     011F  2911               	goto	l4651
 10280     0120                     u3600:
 10281     0120                     l4655:
 10282                           
 10283                           ;doprnt.c: 783: if(((unsigned)width) > len)
 10284     0120  0850               	movf	printf@width+1,w
 10285     0121  024B               	subwf	printf@len+1,w
 10286     0122  1D03               	skipz
 10287     0123  2926               	goto	u3615
 10288     0124  084F               	movf	printf@width,w
 10289     0125  024A               	subwf	printf@len,w
 10290     0126                     u3615:
 10291     0126  1803               	skipnc
 10292     0127  2929               	goto	u3611
 10293     0128  292A               	goto	u3610
 10294     0129                     u3611:
 10295     0129  292F               	goto	l4659
 10296     012A                     u3610:
 10297     012A                     l4657:
 10298                           
 10299                           ;doprnt.c: 784: width -= len;
 10300     012A  084A               	movf	printf@len,w
 10301     012B  02CF               	subwf	printf@width,f
 10302     012C  084B               	movf	printf@len+1,w
 10303     012D  3BD0               	subwfb	printf@width+1,f
 10304     012E  2936               	goto	l4663
 10305     012F                     l4659:
 10306                           
 10307                           ;doprnt.c: 785: else;doprnt.c: 786: width = 0;
 10308     012F  01CF               	clrf	printf@width
 10309     0130  01D0               	clrf	printf@width+1
 10310     0131  2936               	goto	l4663
 10311     0132                     l4661:
 10312                           
 10313                           ;doprnt.c: 791: (putch(' ') );
 10314     0132  3020               	movlw	32
 10315     0133  3194  24B9  3180   	fcall	_putch
 10316     0136                     l4663:
 10317     0136  30FF               	movlw	255
 10318     0137  0020               	movlb	0	; select bank0
 10319     0138  07CF               	addwf	printf@width,f
 10320     0139  30FF               	movlw	255
 10321     013A  3DD0               	addwfc	printf@width+1,f
 10322     013B  0A4F               	incf	printf@width,w
 10323     013C  1D03               	skipz
 10324     013D  2942               	goto	u3621
 10325     013E  0A50               	incf	printf@width+1,w
 10326     013F  1D03               	btfss	3,2
 10327     0140  2942               	goto	u3621
 10328     0141  2943               	goto	u3620
 10329     0142                     u3621:
 10330     0142  2932               	goto	l4661
 10331     0143                     u3620:
 10332     0143  2951               	goto	l4669
 10333     0144                     l4665:
 10334                           
 10335                           ;doprnt.c: 794: (putch(*cp++) );
 10336     0144  0847               	movf	printf@cp,w
 10337     0145  0084               	movwf	4
 10338     0146  0848               	movf	printf@cp+1,w
 10339     0147  0085               	movwf	5
 10340     0148  0800               	movf	0,w	;code access
 10341     0149  3194  24B9  3180   	fcall	_putch
 10342     014C                     l4667:
 10343     014C  3001               	movlw	1
 10344     014D  0020               	movlb	0	; select bank0
 10345     014E  07C7               	addwf	printf@cp,f
 10346     014F  3000               	movlw	0
 10347     0150  3DC8               	addwfc	printf@cp+1,f
 10348     0151                     l4669:
 10349     0151  3001               	movlw	1
 10350     0152  02CA               	subwf	printf@len,f
 10351     0153  3000               	movlw	0
 10352     0154  3BCB               	subwfb	printf@len+1,f
 10353     0155  0A4A               	incf	printf@len,w
 10354     0156  1D03               	skipz
 10355     0157  295C               	goto	u3631
 10356     0158  0A4B               	incf	printf@len+1,w
 10357     0159  1D03               	btfss	3,2
 10358     015A  295C               	goto	u3631
 10359     015B  295D               	goto	u3630
 10360     015C                     u3631:
 10361     015C  2944               	goto	l4665
 10362     015D                     u3630:
 10363     015D  2AD1               	goto	l4761
 10364     015E                     l4673:
 10365     015E  0020               	movlb	0	; select bank0
 10366     015F  0838               	movf	printf@f+1,w
 10367     0160  00C2               	movwf	??_printf+1
 10368     0161  0837               	movf	printf@f,w
 10369     0162  00C1               	movwf	??_printf
 10370     0163  0AB7               	incf	printf@f,f
 10371     0164  1903               	skipnz
 10372     0165  0AB8               	incf	printf@f+1,f
 10373     0166  0841               	movf	??_printf,w
 10374     0167  0084               	movwf	4
 10375     0168  0842               	movf	??_printf+1,w
 10376     0169  0085               	movwf	5
 10377     016A  0800               	movf	0,w	;code access
 10378     016B  00D1               	movwf	printf@c
 10379                           
 10380                           ; Switch size 1, requested type "simple"
 10381                           ; Number of cases is 5, Range of values is 0 to 120
 10382                           ; switch strategies available:
 10383                           ; Name         Instructions Cycles
 10384                           ; simple_byte           16     9 (average)
 10385                           ; direct_byte          248     6 (fixed)
 10386                           ; jumptable            260     6 (fixed)
 10387                           ;	Chosen strategy is simple_byte
 10388     016C  3A00               	xorlw	0	; case 0
 10389     016D  1903               	skipnz
 10390     016E  2AE4               	goto	l1237
 10391     016F  3A64               	xorlw	100	; case 100
 10392     0170  1903               	skipnz
 10393     0171  297C               	goto	l1187
 10394     0172  3A0D               	xorlw	13	; case 105
 10395     0173  1903               	skipnz
 10396     0174  297C               	goto	l1187
 10397     0175  3A1A               	xorlw	26	; case 115
 10398     0176  1903               	skipnz
 10399     0177  28F9               	goto	l4641
 10400     0178  3A0B               	xorlw	11	; case 120
 10401     0179  1903               	skipnz
 10402     017A  28F7               	goto	l1188
 10403     017B  2AD1               	goto	l4761
 10404     017C                     l1187:
 10405                           
 10406                           ;doprnt.c: 1277: if((flag & 0x80) == 0x00)
 10407     017C  1BCE               	btfsc	printf@flag,7
 10408     017D  297F               	goto	u3641
 10409     017E  2980               	goto	u3640
 10410     017F                     u3641:
 10411     017F  2999               	goto	l4685
 10412     0180                     u3640:
 10413     0180                     l4675:
 10414                           
 10415                           ;doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned int)(*(int *)__va_arg((*(int **)ap), 
      +                          (int)0));
 10416     0180  0849               	movf	printf@ap,w
 10417     0181  0086               	movwf	6
 10418     0182  0187               	clrf	7
 10419     0183  3F40               	moviw [0]fsr1
 10420     0184  00CC               	movwf	printf@val
 10421     0185  3F41               	moviw [1]fsr1
 10422     0186  00CD               	movwf	printf@val+1
 10423     0187                     l4677:
 10424     0187  3002               	movlw	2
 10425     0188  00C1               	movwf	??_printf
 10426     0189  0841               	movf	??_printf,w
 10427     018A  07C9               	addwf	printf@ap,f
 10428     018B                     l4679:
 10429                           
 10430                           ;doprnt.c: 1287: if((int)val < 0) {
 10431     018B  1FCD               	btfss	printf@val+1,7
 10432     018C  298E               	goto	u3651
 10433     018D  298F               	goto	u3650
 10434     018E                     u3651:
 10435     018E  29F5               	goto	l4711
 10436     018F                     u3650:
 10437     018F                     l4681:
 10438                           
 10439                           ;doprnt.c: 1288: flag |= 0x03;
 10440     018F  3003               	movlw	3
 10441     0190  00C1               	movwf	??_printf
 10442     0191  0841               	movf	??_printf,w
 10443     0192  04CE               	iorwf	printf@flag,f
 10444     0193                     l4683:
 10445                           
 10446                           ;doprnt.c: 1289: val = -val;
 10447     0193  09CC               	comf	printf@val,f
 10448     0194  09CD               	comf	printf@val+1,f
 10449     0195  0ACC               	incf	printf@val,f
 10450     0196  1903               	skipnz
 10451     0197  0ACD               	incf	printf@val+1,f
 10452     0198  29F5               	goto	l4711
 10453     0199                     l4685:
 10454                           
 10455                           ;doprnt.c: 1294: else;doprnt.c: 1299: {;doprnt.c: 1312: val = (*(unsigned *)__va_arg((*(
      +                          unsigned **)ap), (unsigned)0));
 10456     0199  0849               	movf	printf@ap,w
 10457     019A  0086               	movwf	6
 10458     019B  0187               	clrf	7
 10459     019C  3F40               	moviw [0]fsr1
 10460     019D  00CC               	movwf	printf@val
 10461     019E  3F41               	moviw [1]fsr1
 10462     019F  00CD               	movwf	printf@val+1
 10463     01A0                     l4687:
 10464     01A0  3002               	movlw	2
 10465     01A1  00C1               	movwf	??_printf
 10466     01A2  0841               	movf	??_printf,w
 10467     01A3  07C9               	addwf	printf@ap,f
 10468     01A4  29F5               	goto	l4711
 10469     01A5                     l1207:	
 10470                           ;doprnt.c: 1325: case 0x00:
 10471                           
 10472                           
 10473                           ;doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 10474     01A5  01D1               	clrf	printf@c
 10475     01A6  0AD1               	incf	printf@c,f
 10476     01A7                     l4693:
 10477                           
 10478                           ;doprnt.c: 1332: if(val < dpowers[c])
 10479     01A7  0851               	movf	printf@c,w
 10480     01A8  00C1               	movwf	??_printf
 10481     01A9  01C2               	clrf	??_printf+1
 10482     01AA  35C1               	lslf	??_printf,f
 10483     01AB  0DC2               	rlf	??_printf+1,f
 10484     01AC  3098               	movlw	low _dpowers
 10485     01AD  0741               	addwf	??_printf,w
 10486     01AE  0084               	movwf	4
 10487     01AF  3018               	movlw	high _dpowers
 10488     01B0  3D42               	addwfc	??_printf+1,w
 10489     01B1  3880               	iorlw	128
 10490     01B2  0085               	movwf	5
 10491     01B3  3F00               	moviw [0]fsr0
 10492     01B4  00C3               	movwf	??_printf+2
 10493     01B5  3F01               	moviw [1]fsr0
 10494     01B6  00C4               	movwf	??_printf+3
 10495     01B7  0844               	movf	??_printf+3,w
 10496     01B8  024D               	subwf	printf@val+1,w
 10497     01B9  1D03               	skipz
 10498     01BA  29BD               	goto	u3665
 10499     01BB  0843               	movf	??_printf+2,w
 10500     01BC  024C               	subwf	printf@val,w
 10501     01BD                     u3665:
 10502     01BD  1803               	skipnc
 10503     01BE  29C0               	goto	u3661
 10504     01BF  29C1               	goto	u3660
 10505     01C0                     u3661:
 10506     01C0  29C2               	goto	l4697
 10507     01C1                     u3660:
 10508     01C1  29FE               	goto	l4713
 10509     01C2                     l4697:
 10510     01C2  3001               	movlw	1
 10511     01C3  00C1               	movwf	??_printf
 10512     01C4  0841               	movf	??_printf,w
 10513     01C5  07D1               	addwf	printf@c,f
 10514     01C6  3005               	movlw	5
 10515     01C7  0651               	xorwf	printf@c,w
 10516     01C8  1D03               	btfss	3,2
 10517     01C9  29CB               	goto	u3671
 10518     01CA  29CC               	goto	u3670
 10519     01CB                     u3671:
 10520     01CB  29A7               	goto	l4693
 10521     01CC                     u3670:
 10522     01CC  29FE               	goto	l4713
 10523     01CD                     l1212:	
 10524                           ;doprnt.c: 1340: case 0x80:
 10525                           
 10526                           
 10527                           ;doprnt.c: 1342: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 10528     01CD  01D1               	clrf	printf@c
 10529     01CE  0AD1               	incf	printf@c,f
 10530     01CF                     l4703:
 10531                           
 10532                           ;doprnt.c: 1343: if(val < hexpowers[c])
 10533     01CF  0851               	movf	printf@c,w
 10534     01D0  00C1               	movwf	??_printf
 10535     01D1  01C2               	clrf	??_printf+1
 10536     01D2  35C1               	lslf	??_printf,f
 10537     01D3  0DC2               	rlf	??_printf+1,f
 10538     01D4  30A2               	movlw	low _hexpowers
 10539     01D5  0741               	addwf	??_printf,w
 10540     01D6  0084               	movwf	4
 10541     01D7  3018               	movlw	high _hexpowers
 10542     01D8  3D42               	addwfc	??_printf+1,w
 10543     01D9  3880               	iorlw	128
 10544     01DA  0085               	movwf	5
 10545     01DB  3F00               	moviw [0]fsr0
 10546     01DC  00C3               	movwf	??_printf+2
 10547     01DD  3F01               	moviw [1]fsr0
 10548     01DE  00C4               	movwf	??_printf+3
 10549     01DF  0844               	movf	??_printf+3,w
 10550     01E0  024D               	subwf	printf@val+1,w
 10551     01E1  1D03               	skipz
 10552     01E2  29E5               	goto	u3685
 10553     01E3  0843               	movf	??_printf+2,w
 10554     01E4  024C               	subwf	printf@val,w
 10555     01E5                     u3685:
 10556     01E5  1803               	skipnc
 10557     01E6  29E8               	goto	u3681
 10558     01E7  29E9               	goto	u3680
 10559     01E8                     u3681:
 10560     01E8  29EA               	goto	l4707
 10561     01E9                     u3680:
 10562     01E9  29FE               	goto	l4713
 10563     01EA                     l4707:
 10564     01EA  3001               	movlw	1
 10565     01EB  00C1               	movwf	??_printf
 10566     01EC  0841               	movf	??_printf,w
 10567     01ED  07D1               	addwf	printf@c,f
 10568     01EE  3004               	movlw	4
 10569     01EF  0651               	xorwf	printf@c,w
 10570     01F0  1D03               	btfss	3,2
 10571     01F1  29F3               	goto	u3691
 10572     01F2  29F4               	goto	u3690
 10573     01F3                     u3691:
 10574     01F3  29CF               	goto	l4703
 10575     01F4                     u3690:
 10576     01F4  29FE               	goto	l4713
 10577     01F5                     l4711:
 10578     01F5  084E               	movf	printf@flag,w
 10579     01F6  3980               	andlw	128
 10580                           
 10581                           ; Switch size 1, requested type "simple"
 10582                           ; Number of cases is 2, Range of values is 0 to 128
 10583                           ; switch strategies available:
 10584                           ; Name         Instructions Cycles
 10585                           ; simple_byte            7     4 (average)
 10586                           ; jumptable            260     6 (fixed)
 10587                           ;	Chosen strategy is simple_byte
 10588     01F7  3A00               	xorlw	0	; case 0
 10589     01F8  1903               	skipnz
 10590     01F9  29A5               	goto	l1207
 10591     01FA  3A80               	xorlw	128	; case 128
 10592     01FB  1903               	skipnz
 10593     01FC  29CD               	goto	l1212
 10594     01FD  29FE               	goto	l4713
 10595     01FE                     l4713:
 10596                           
 10597                           ;doprnt.c: 1371: if(width && flag & 0x03)
 10598     01FE  084F               	movf	printf@width,w
 10599     01FF  0450               	iorwf	printf@width+1,w
 10600     0200  1903               	btfsc	3,2
 10601     0201  2A03               	goto	u3701
 10602     0202  2A04               	goto	u3700
 10603     0203                     u3701:
 10604     0203  2A0E               	goto	l1216
 10605     0204                     u3700:
 10606     0204                     l4715:
 10607     0204  084E               	movf	printf@flag,w
 10608     0205  3903               	andlw	3
 10609     0206  1903               	btfsc	3,2
 10610     0207  2A09               	goto	u3711
 10611     0208  2A0A               	goto	u3710
 10612     0209                     u3711:
 10613     0209  2A0E               	goto	l1216
 10614     020A                     u3710:
 10615     020A                     l4717:
 10616                           
 10617                           ;doprnt.c: 1372: width--;
 10618     020A  30FF               	movlw	255
 10619     020B  07CF               	addwf	printf@width,f
 10620     020C  30FF               	movlw	255
 10621     020D  3DD0               	addwfc	printf@width+1,f
 10622     020E                     l1216:
 10623                           
 10624                           ;doprnt.c: 1407: if(width > c)
 10625     020E  0850               	movf	printf@width+1,w
 10626     020F  3A80               	xorlw	128
 10627     0210  3C80               	sublw	128
 10628     0211  1D03               	skipz
 10629     0212  2A15               	goto	u3725
 10630     0213  084F               	movf	printf@width,w
 10631     0214  0251               	subwf	printf@c,w
 10632     0215                     u3725:
 10633     0215  1803               	skipnc
 10634     0216  2A18               	goto	u3721
 10635     0217  2A19               	goto	u3720
 10636     0218                     u3721:
 10637     0218  2A22               	goto	l4721
 10638     0219                     u3720:
 10639     0219                     l4719:
 10640                           
 10641                           ;doprnt.c: 1408: width -= c;
 10642     0219  0020               	movlb	0	; select bank0
 10643     021A  0851               	movf	printf@c,w
 10644     021B  00C1               	movwf	??_printf
 10645     021C  01C2               	clrf	??_printf+1
 10646     021D  0841               	movf	??_printf,w
 10647     021E  02CF               	subwf	printf@width,f
 10648     021F  0842               	movf	??_printf+1,w
 10649     0220  3BD0               	subwfb	printf@width+1,f
 10650     0221  2A25               	goto	l4723
 10651     0222                     l4721:
 10652                           
 10653                           ;doprnt.c: 1409: else;doprnt.c: 1410: width = 0;
 10654     0222  0020               	movlb	0	; select bank0
 10655     0223  01CF               	clrf	printf@width
 10656     0224  01D0               	clrf	printf@width+1
 10657     0225                     l4723:
 10658                           
 10659                           ;doprnt.c: 1413: if(flag & 0x04) {
 10660     0225  1D4E               	btfss	printf@flag,2
 10661     0226  2A28               	goto	u3731
 10662     0227  2A29               	goto	u3730
 10663     0228                     u3731:
 10664     0228  2A4A               	goto	l4735
 10665     0229                     u3730:
 10666     0229                     l4725:
 10667                           
 10668                           ;doprnt.c: 1418: if(flag & 0x03)
 10669     0229  084E               	movf	printf@flag,w
 10670     022A  3903               	andlw	3
 10671     022B  1903               	btfsc	3,2
 10672     022C  2A2E               	goto	u3741
 10673     022D  2A2F               	goto	u3740
 10674     022E                     u3741:
 10675     022E  2A33               	goto	l4729
 10676     022F                     u3740:
 10677     022F                     l4727:
 10678                           
 10679                           ;doprnt.c: 1419: (putch('-') );
 10680     022F  302D               	movlw	45
 10681     0230  3194  24B9  3180   	fcall	_putch
 10682     0233                     l4729:
 10683                           
 10684                           ;doprnt.c: 1441: if(width)
 10685     0233  0020               	movlb	0	; select bank0
 10686     0234  084F               	movf	printf@width,w
 10687     0235  0450               	iorwf	printf@width+1,w
 10688     0236  1903               	btfsc	3,2
 10689     0237  2A39               	goto	u3751
 10690     0238  2A3A               	goto	u3750
 10691     0239                     u3751:
 10692     0239  2A69               	goto	l4745
 10693     023A                     u3750:
 10694     023A                     l4731:
 10695                           
 10696                           ;doprnt.c: 1443: (putch('0') );
 10697     023A  3030               	movlw	48
 10698     023B  3194  24B9  3180   	fcall	_putch
 10699     023E                     l4733:
 10700                           
 10701                           ;doprnt.c: 1444: while(--width);
 10702     023E  30FF               	movlw	255
 10703     023F  0020               	movlb	0	; select bank0
 10704     0240  07CF               	addwf	printf@width,f
 10705     0241  30FF               	movlw	255
 10706     0242  3DD0               	addwfc	printf@width+1,f
 10707     0243  084F               	movf	printf@width,w
 10708     0244  0450               	iorwf	printf@width+1,w
 10709     0245  1D03               	btfss	3,2
 10710     0246  2A48               	goto	u3761
 10711     0247  2A49               	goto	u3760
 10712     0248                     u3761:
 10713     0248  2A3A               	goto	l4731
 10714     0249                     u3760:
 10715     0249  2A69               	goto	l4745
 10716     024A                     l4735:
 10717                           
 10718                           ;doprnt.c: 1448: {;doprnt.c: 1450: if(width;doprnt.c: 1454: )
 10719     024A  084F               	movf	printf@width,w
 10720     024B  0450               	iorwf	printf@width+1,w
 10721     024C  1903               	btfsc	3,2
 10722     024D  2A4F               	goto	u3771
 10723     024E  2A50               	goto	u3770
 10724     024F                     u3771:
 10725     024F  2A5F               	goto	l4741
 10726     0250                     u3770:
 10727     0250                     l4737:
 10728                           
 10729                           ;doprnt.c: 1456: (putch(' ') );
 10730     0250  3020               	movlw	32
 10731     0251  3194  24B9  3180   	fcall	_putch
 10732     0254                     l4739:
 10733                           
 10734                           ;doprnt.c: 1457: while(--width);
 10735     0254  30FF               	movlw	255
 10736     0255  0020               	movlb	0	; select bank0
 10737     0256  07CF               	addwf	printf@width,f
 10738     0257  30FF               	movlw	255
 10739     0258  3DD0               	addwfc	printf@width+1,f
 10740     0259  084F               	movf	printf@width,w
 10741     025A  0450               	iorwf	printf@width+1,w
 10742     025B  1D03               	btfss	3,2
 10743     025C  2A5E               	goto	u3781
 10744     025D  2A5F               	goto	u3780
 10745     025E                     u3781:
 10746     025E  2A50               	goto	l4737
 10747     025F                     u3780:
 10748     025F                     l4741:
 10749                           
 10750                           ;doprnt.c: 1464: if(flag & 0x03)
 10751     025F  084E               	movf	printf@flag,w
 10752     0260  3903               	andlw	3
 10753     0261  1903               	btfsc	3,2
 10754     0262  2A64               	goto	u3791
 10755     0263  2A65               	goto	u3790
 10756     0264                     u3791:
 10757     0264  2A69               	goto	l4745
 10758     0265                     u3790:
 10759     0265                     l4743:
 10760                           
 10761                           ;doprnt.c: 1465: (putch('-') );
 10762     0265  302D               	movlw	45
 10763     0266  3194  24B9  3180   	fcall	_putch
 10764     0269                     l4745:
 10765                           
 10766                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
 10767     0269  0020               	movlb	0	; select bank0
 10768     026A  0851               	movf	printf@c,w
 10769     026B  00C6               	movwf	printf@prec
 10770                           
 10771                           ;doprnt.c: 1500: while(prec--) {
 10772     026C  2AC7               	goto	l4759
 10773     026D                     l4747:
 10774                           
 10775                           ;doprnt.c: 1515: c = (val / dpowers[(unsigned char)prec]) % 10 + '0';
 10776     026D  300A               	movlw	10
 10777     026E  00A8               	movwf	___lwmod@divisor
 10778     026F  3000               	movlw	0
 10779     0270  00A9               	movwf	___lwmod@divisor+1
 10780     0271  0846               	movf	printf@prec,w
 10781     0272  00C1               	movwf	??_printf
 10782     0273  01C2               	clrf	??_printf+1
 10783     0274  35C1               	lslf	??_printf,f
 10784     0275  0DC2               	rlf	??_printf+1,f
 10785     0276  3098               	movlw	low _dpowers
 10786     0277  0741               	addwf	??_printf,w
 10787     0278  0084               	movwf	4
 10788     0279  3018               	movlw	high _dpowers
 10789     027A  3D42               	addwfc	??_printf+1,w
 10790     027B  3880               	iorlw	128
 10791     027C  0085               	movwf	5
 10792     027D  3F00               	moviw [0]fsr0
 10793     027E  00A0               	movwf	___lwdiv@divisor
 10794     027F  3F01               	moviw [1]fsr0
 10795     0280  00A1               	movwf	___lwdiv@divisor+1
 10796     0281  084D               	movf	printf@val+1,w
 10797     0282  00A3               	movwf	___lwdiv@dividend+1
 10798     0283  084C               	movf	printf@val,w
 10799     0284  00A2               	movwf	___lwdiv@dividend
 10800     0285  3188  2019  3180   	fcall	___lwdiv
 10801     0288  0020               	movlb	0	; select bank0
 10802     0289  0821               	movf	?___lwdiv+1,w
 10803     028A  00AB               	movwf	___lwmod@dividend+1
 10804     028B  0820               	movf	?___lwdiv,w
 10805     028C  00AA               	movwf	___lwmod@dividend
 10806     028D  3197  2793  3180   	fcall	___lwmod
 10807     0290  0020               	movlb	0	; select bank0
 10808     0291  0828               	movf	?___lwmod,w
 10809     0292  3E30               	addlw	48
 10810     0293  00D1               	movwf	printf@c
 10811                           
 10812                           ;doprnt.c: 1517: break;
 10813     0294  2AC3               	goto	l4757
 10814     0295                     l4749:
 10815                           
 10816                           ;doprnt.c: 1525: {;doprnt.c: 1526: unsigned char idx = (val / hexpowers[(unsigned char)p
      +                          rec]) & 0xF;
 10817     0295  0846               	movf	printf@prec,w
 10818     0296  00C1               	movwf	??_printf
 10819     0297  01C2               	clrf	??_printf+1
 10820     0298  35C1               	lslf	??_printf,f
 10821     0299  0DC2               	rlf	??_printf+1,f
 10822     029A  30A2               	movlw	low _hexpowers
 10823     029B  0741               	addwf	??_printf,w
 10824     029C  0084               	movwf	4
 10825     029D  3018               	movlw	high _hexpowers
 10826     029E  3D42               	addwfc	??_printf+1,w
 10827     029F  3880               	iorlw	128
 10828     02A0  0085               	movwf	5
 10829     02A1  3F00               	moviw [0]fsr0
 10830     02A2  00A0               	movwf	___lwdiv@divisor
 10831     02A3  3F01               	moviw [1]fsr0
 10832     02A4  00A1               	movwf	___lwdiv@divisor+1
 10833     02A5  084D               	movf	printf@val+1,w
 10834     02A6  00A3               	movwf	___lwdiv@dividend+1
 10835     02A7  084C               	movf	printf@val,w
 10836     02A8  00A2               	movwf	___lwdiv@dividend
 10837     02A9  3188  2019  3180   	fcall	___lwdiv
 10838     02AC  0020               	movlb	0	; select bank0
 10839     02AD  0820               	movf	?___lwdiv,w
 10840     02AE  390F               	andlw	15
 10841     02AF  00C5               	movwf	printf@idx
 10842     02B0                     l4751:
 10843                           
 10844                           ;doprnt.c: 1532: c = "0123456789abcdef"[idx];
 10845     02B0  0845               	movf	printf@idx,w
 10846     02B1  3E5B               	addlw	low (STR_37| (0+32768))
 10847     02B2  0084               	movwf	4
 10848     02B3  3098               	movlw	high (STR_37| (0+32768))
 10849     02B4  1803               	skipnc
 10850     02B5  3E01               	addlw	1
 10851     02B6  0085               	movwf	5
 10852     02B7  0800               	movf	0,w	;code access
 10853     02B8  00D1               	movwf	printf@c
 10854                           
 10855                           ;doprnt.c: 1534: };doprnt.c: 1536: break;
 10856     02B9  2AC3               	goto	l4757
 10857     02BA                     l4755:
 10858     02BA  084E               	movf	printf@flag,w
 10859     02BB  3980               	andlw	128
 10860                           
 10861                           ; Switch size 1, requested type "simple"
 10862                           ; Number of cases is 2, Range of values is 0 to 128
 10863                           ; switch strategies available:
 10864                           ; Name         Instructions Cycles
 10865                           ; simple_byte            7     4 (average)
 10866                           ; jumptable            260     6 (fixed)
 10867                           ;	Chosen strategy is simple_byte
 10868     02BC  3A00               	xorlw	0	; case 0
 10869     02BD  1903               	skipnz
 10870     02BE  2A6D               	goto	l4747
 10871     02BF  3A80               	xorlw	128	; case 128
 10872     02C0  1903               	skipnz
 10873     02C1  2A95               	goto	l4749
 10874     02C2  2AC3               	goto	l4757
 10875     02C3                     l4757:
 10876                           
 10877                           ;doprnt.c: 1550: (putch(c) );
 10878     02C3  0851               	movf	printf@c,w
 10879     02C4  3194  24B9  3180   	fcall	_putch
 10880     02C7                     l4759:
 10881     02C7  30FF               	movlw	255
 10882     02C8  0020               	movlb	0	; select bank0
 10883     02C9  00C1               	movwf	??_printf
 10884     02CA  0841               	movf	??_printf,w
 10885     02CB  07C6               	addwf	printf@prec,f
 10886     02CC  0A46               	incf	printf@prec,w
 10887     02CD  1D03               	btfss	3,2
 10888     02CE  2AD0               	goto	u3801
 10889     02CF  2AD1               	goto	u3800
 10890     02D0                     u3801:
 10891     02D0  2ABA               	goto	l4755
 10892     02D1                     u3800:
 10893     02D1                     l4761:
 10894     02D1  0020               	movlb	0	; select bank0
 10895     02D2  0838               	movf	printf@f+1,w
 10896     02D3  00C2               	movwf	??_printf+1
 10897     02D4  0837               	movf	printf@f,w
 10898     02D5  00C1               	movwf	??_printf
 10899     02D6  0AB7               	incf	printf@f,f
 10900     02D7  1903               	skipnz
 10901     02D8  0AB8               	incf	printf@f+1,f
 10902     02D9  0841               	movf	??_printf,w
 10903     02DA  0084               	movwf	4
 10904     02DB  0842               	movf	??_printf+1,w
 10905     02DC  0085               	movwf	5
 10906     02DD  0800               	movf	0,w	;code access
 10907     02DE  00D1               	movwf	printf@c
 10908     02DF  0851               	movf	printf@c,w
 10909     02E0  1D03               	btfss	3,2
 10910     02E1  2AE3               	goto	u3811
 10911     02E2  2AE4               	goto	u3810
 10912     02E3                     u3811:
 10913     02E3  289A               	goto	l4617
 10914     02E4                     u3810:
 10915     02E4                     l1237:
 10916     02E4  0008               	return
 10917     02E5                     __end_of_printf:
 10918                           
 10919                           	psect	text20
 10920     14B9                     __ptext20:	
 10921 ;; *************** function _putch *****************
 10922 ;; Defined at:
 10923 ;;		line 249 in file "main.c"
 10924 ;; Parameters:    Size  Location     Type
 10925 ;;  c               1    wreg     unsigned char 
 10926 ;; Auto vars:     Size  Location     Type
 10927 ;;  c               1   22[BANK0 ] unsigned char 
 10928 ;; Return value:  Size  Location     Type
 10929 ;;                  1    wreg      void 
 10930 ;; Registers used:
 10931 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10932 ;; Tracked objects:
 10933 ;;		On entry : 0/0
 10934 ;;		On exit  : 0/0
 10935 ;;		Unchanged: 0/0
 10936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10938 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10940 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10941 ;;Total ram usage:        1 bytes
 10942 ;; Hardware stack levels used: 1
 10943 ;; Hardware stack levels required when called: 12
 10944 ;; This function calls:
 10945 ;;		_chr12
 10946 ;;		_chr6
 10947 ;; This function is called by:
 10948 ;;		_printf
 10949 ;; This function uses a non-reentrant model
 10950 ;;
 10951                           
 10952     14B9                     _putch:	
 10953                           ;psect for function _putch
 10954                           
 10955                           
 10956                           ;incstack = 0
 10957                           ; Regs used in _putch: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10958                           ;putch@c stored from wreg
 10959     14B9  0020               	movlb	0	; select bank0
 10960     14BA  00B6               	movwf	putch@c
 10961     14BB                     l4115:
 10962                           
 10963                           ;main.c: 250: if(Size){
 10964     14BB  0021               	movlb	1	; select bank1
 10965     14BC  085D               	movf	_Size^(0+128),w
 10966     14BD  1903               	btfsc	3,2
 10967     14BE  2CC0               	goto	u2481
 10968     14BF  2CC1               	goto	u2480
 10969     14C0                     u2481:
 10970     14C0  2CC7               	goto	l4119
 10971     14C1                     u2480:
 10972     14C1                     l4117:
 10973                           
 10974                           ;main.c: 251: chr12(c);
 10975     14C1  0020               	movlb	0	; select bank0
 10976     14C2  0836               	movf	putch@c,w
 10977     14C3  3186  26E4  3194   	fcall	_chr12
 10978                           
 10979                           ;main.c: 252: }else{
 10980     14C6  2CCC               	goto	l1003
 10981     14C7                     l4119:
 10982                           
 10983                           ;main.c: 253: chr6(c);
 10984     14C7  0020               	movlb	0	; select bank0
 10985     14C8  0836               	movf	putch@c,w
 10986     14C9  3189  2115  3194   	fcall	_chr6
 10987     14CC                     l1003:
 10988     14CC  0008               	return
 10989     14CD                     __end_of_putch:
 10990                           
 10991                           	psect	text21
 10992     0915                     __ptext21:	
 10993 ;; *************** function _chr6 *****************
 10994 ;; Defined at:
 10995 ;;		line 211 in file "main.c"
 10996 ;; Parameters:    Size  Location     Type
 10997 ;;  c               1    wreg     unsigned char 
 10998 ;; Auto vars:     Size  Location     Type
 10999 ;;  c               1   19[BANK0 ] unsigned char 
 11000 ;;  i               1   20[BANK0 ] unsigned char 
 11001 ;; Return value:  Size  Location     Type
 11002 ;;                  1    wreg      void 
 11003 ;; Registers used:
 11004 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11005 ;; Tracked objects:
 11006 ;;		On entry : 0/0
 11007 ;;		On exit  : 0/0
 11008 ;;		Unchanged: 0/0
 11009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11011 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11012 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11013 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11014 ;;Total ram usage:        8 bytes
 11015 ;; Hardware stack levels used: 1
 11016 ;; Hardware stack levels required when called: 11
 11017 ;; This function calls:
 11018 ;;		_I2C_WriteNBytes
 11019 ;;		___wmul
 11020 ;; This function is called by:
 11021 ;;		_putch
 11022 ;; This function uses a non-reentrant model
 11023 ;;
 11024                           
 11025     0915                     _chr6:	
 11026                           ;psect for function _chr6
 11027                           
 11028                           
 11029                           ;incstack = 0
 11030                           ; Regs used in _chr6: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11031                           ;chr6@c stored from wreg
 11032     0915  0020               	movlb	0	; select bank0
 11033     0916  00B3               	movwf	chr6@c
 11034     0917                     l3809:
 11035                           
 11036                           ;main.c: 212: c = c - 0x20;
 11037     0917  0833               	movf	chr6@c,w
 11038     0918  3EE0               	addlw	224
 11039     0919  00B3               	movwf	chr6@c
 11040     091A                     l3811:
 11041                           
 11042                           ;main.c: 213: for(uint8_t i = 0; i<6; i++){
 11043     091A  01B4               	clrf	chr6@i
 11044     091B                     l3817:
 11045                           
 11046                           ;main.c: 214: Font6_data[i+1] = font6[c][i];
 11047     091B  0834               	movf	chr6@i,w
 11048     091C  3E63               	addlw	(low ((_Font6_data| (0+256)+1)))& (0+255)
 11049     091D  0086               	movwf	6
 11050     091E  3001               	movlw	1	; select bank2/3
 11051     091F  0087               	movwf	7
 11052     0920  0833               	movf	chr6@c,w
 11053     0921  00AD               	movwf	??_chr6
 11054     0922  01AE               	clrf	??_chr6+1
 11055     0923  082D               	movf	??_chr6,w
 11056     0924  00A0               	movwf	___wmul@multiplier
 11057     0925  082E               	movf	??_chr6+1,w
 11058     0926  00A1               	movwf	___wmul@multiplier+1
 11059     0927  3006               	movlw	6
 11060     0928  00A2               	movwf	___wmul@multiplicand
 11061     0929  3000               	movlw	0
 11062     092A  00A3               	movwf	___wmul@multiplicand+1
 11063     092B  3195  25E1  3189   	fcall	___wmul
 11064     092E  30E5               	movlw	low (_font6| (0+32768))
 11065     092F  0020               	movlb	0	; select bank0
 11066     0930  00AF               	movwf	??_chr6+2
 11067     0931  3082               	movlw	high (_font6| (0+32768))
 11068     0932  00B0               	movwf	??_chr6+3
 11069     0933  0820               	movf	?___wmul,w
 11070     0934  072F               	addwf	??_chr6+2,w
 11071     0935  00B1               	movwf	??_chr6+4
 11072     0936  0821               	movf	?___wmul+1,w
 11073     0937  3D30               	addwfc	??_chr6+3,w
 11074     0938  00B2               	movwf	??_chr6+5
 11075     0939  0834               	movf	chr6@i,w
 11076     093A  0731               	addwf	??_chr6+4,w
 11077     093B  0084               	movwf	4
 11078     093C  0832               	movf	??_chr6+5,w
 11079     093D  1803               	skipnc
 11080     093E  0A32               	incf	??_chr6+5,w
 11081     093F  0085               	movwf	5
 11082     0940  0800               	movf	0,w	;code access
 11083     0941  0081               	movwf	1
 11084     0942                     l3819:
 11085     0942  3001               	movlw	1
 11086     0943  00AD               	movwf	??_chr6
 11087     0944  082D               	movf	??_chr6,w
 11088     0945  07B4               	addwf	chr6@i,f
 11089     0946                     l3821:
 11090     0946  3006               	movlw	6
 11091     0947  0234               	subwf	chr6@i,w
 11092     0948  1C03               	skipc
 11093     0949  294B               	goto	u2311
 11094     094A  294C               	goto	u2310
 11095     094B                     u2311:
 11096     094B  291B               	goto	l3817
 11097     094C                     u2310:
 11098     094C                     l3823:
 11099                           
 11100                           ;main.c: 215: };main.c: 216: I2C_WriteNBytes(0x3C,Font6_data,7);
 11101     094C  3062               	movlw	low _Font6_data
 11102     094D  00A8               	movwf	I2C_WriteNBytes@data
 11103     094E  3001               	movlw	high _Font6_data
 11104     094F  00A9               	movwf	I2C_WriteNBytes@data+1
 11105     0950  3007               	movlw	7
 11106     0951  00AA               	movwf	I2C_WriteNBytes@len
 11107     0952  3000               	movlw	0
 11108     0953  00AB               	movwf	I2C_WriteNBytes@len+1
 11109     0954  303C               	movlw	60
 11110     0955  3197  2707  3189   	fcall	_I2C_WriteNBytes
 11111     0958                     l991:
 11112     0958  0008               	return
 11113     0959                     __end_of_chr6:
 11114                           
 11115                           	psect	text22
 11116     06E4                     __ptext22:	
 11117 ;; *************** function _chr12 *****************
 11118 ;; Defined at:
 11119 ;;		line 220 in file "main.c"
 11120 ;; Parameters:    Size  Location     Type
 11121 ;;  c               1    wreg     unsigned char 
 11122 ;; Auto vars:     Size  Location     Type
 11123 ;;  c               1   20[BANK0 ] unsigned char 
 11124 ;;  i               1   21[BANK0 ] unsigned char 
 11125 ;;  temp            1   19[BANK0 ] unsigned char 
 11126 ;; Return value:  Size  Location     Type
 11127 ;;                  1    wreg      void 
 11128 ;; Registers used:
 11129 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11130 ;; Tracked objects:
 11131 ;;		On entry : 0/0
 11132 ;;		On exit  : 0/0
 11133 ;;		Unchanged: 0/0
 11134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11136 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11137 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11138 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11139 ;;Total ram usage:        9 bytes
 11140 ;; Hardware stack levels used: 1
 11141 ;; Hardware stack levels required when called: 11
 11142 ;; This function calls:
 11143 ;;		_I2C_WriteNBytes
 11144 ;;		___wmul
 11145 ;; This function is called by:
 11146 ;;		_putch
 11147 ;; This function uses a non-reentrant model
 11148 ;;
 11149                           
 11150     06E4                     _chr12:	
 11151                           ;psect for function _chr12
 11152                           
 11153                           
 11154                           ;incstack = 0
 11155                           ; Regs used in _chr12: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11156                           ;chr12@c stored from wreg
 11157     06E4  0020               	movlb	0	; select bank0
 11158     06E5  00B4               	movwf	chr12@c
 11159     06E6                     l3825:
 11160                           
 11161                           ;main.c: 221: uint8_t temp;;main.c: 222: uint8_t i;;main.c: 223: c = c + 6 - 0x30;
 11162     06E6  0834               	movf	chr12@c,w
 11163     06E7  3ED6               	addlw	214
 11164     06E8  00B4               	movwf	chr12@c
 11165                           
 11166                           ;main.c: 224: Page = Page + 0xB0;
 11167     06E9  085E               	movf	_Page,w
 11168     06EA  3EB0               	addlw	176
 11169     06EB  00DE               	movwf	_Page
 11170     06EC                     l3827:
 11171                           
 11172                           ;main.c: 225: Low_col = Column & 0x0F;
 11173     06EC  0021               	movlb	1	; select bank1
 11174     06ED  0860               	movf	_Column^(0+128),w
 11175     06EE  390F               	andlw	15
 11176     06EF  00DF               	movwf	_Low_col^(0+128)
 11177     06F0                     l3829:
 11178                           
 11179                           ;main.c: 226: temp = Column >> 4;
 11180     06F0  0860               	movf	_Column^(0+128),w
 11181     06F1  0020               	movlb	0	; select bank0
 11182     06F2  00AD               	movwf	??_chr12
 11183     06F3  3004               	movlw	4
 11184     06F4                     u2325:
 11185     06F4  36AD               	lsrf	??_chr12,f
 11186     06F5  0B89               	decfsz	9,f
 11187     06F6  2EF4               	goto	u2325
 11188     06F7  082D               	movf	??_chr12,w
 11189     06F8  00B3               	movwf	chr12@temp
 11190     06F9                     l3831:
 11191                           
 11192                           ;main.c: 227: Hi_col = temp + 0x10;
 11193     06F9  0833               	movf	chr12@temp,w
 11194     06FA  3E10               	addlw	16
 11195     06FB  0021               	movlb	1	; select bank1
 11196     06FC  00DE               	movwf	_Hi_col^(0+128)
 11197     06FD                     l3833:
 11198                           
 11199                           ;main.c: 228: Posi_cmd[3] = Page;
 11200     06FD  0020               	movlb	0	; select bank0
 11201     06FE  085E               	movf	_Page,w
 11202     06FF  0021               	movlb	1	; select bank1
 11203     0700  00EC               	movwf	(_Posi_cmd^(0+128)+3)
 11204     0701                     l3835:
 11205                           
 11206                           ;main.c: 229: Posi_cmd[4] = Low_col;
 11207     0701  085F               	movf	_Low_col^(0+128),w
 11208     0702  00ED               	movwf	(_Posi_cmd^(0+128)+4)
 11209     0703                     l3837:
 11210                           
 11211                           ;main.c: 230: Posi_cmd[5] = Hi_col;
 11212     0703  085E               	movf	_Hi_col^(0+128),w
 11213     0704  00EE               	movwf	(_Posi_cmd^(0+128)+5)
 11214     0705                     l3839:
 11215                           
 11216                           ;main.c: 231: I2C_WriteNBytes(0x3C,Posi_cmd,6);
 11217     0705  30E9               	movlw	low _Posi_cmd
 11218     0706  0020               	movlb	0	; select bank0
 11219     0707  00A8               	movwf	I2C_WriteNBytes@data
 11220     0708  3000               	movlw	high _Posi_cmd
 11221     0709  00A9               	movwf	I2C_WriteNBytes@data+1
 11222     070A  3006               	movlw	6
 11223     070B  00AA               	movwf	I2C_WriteNBytes@len
 11224     070C  3000               	movlw	0
 11225     070D  00AB               	movwf	I2C_WriteNBytes@len+1
 11226     070E  303C               	movlw	60
 11227     070F  3197  2707  3186   	fcall	_I2C_WriteNBytes
 11228     0712                     l3841:
 11229                           
 11230                           ;main.c: 232: for(i = 0; i<12; i++){
 11231     0712  0020               	movlb	0	; select bank0
 11232     0713  01B5               	clrf	chr12@i
 11233     0714                     l3847:
 11234                           
 11235                           ;main.c: 233: Font12_data[i+1] = font12[c][i];
 11236     0714  0835               	movf	chr12@i,w
 11237     0715  3E4D               	addlw	(low ((_Font12_data| (0+256)+1)))& (0+255)
 11238     0716  0086               	movwf	6
 11239     0717  3001               	movlw	1	; select bank2/3
 11240     0718  0087               	movwf	7
 11241     0719  0834               	movf	chr12@c,w
 11242     071A  00AD               	movwf	??_chr12
 11243     071B  01AE               	clrf	??_chr12+1
 11244     071C  082D               	movf	??_chr12,w
 11245     071D  00A0               	movwf	___wmul@multiplier
 11246     071E  082E               	movf	??_chr12+1,w
 11247     071F  00A1               	movwf	___wmul@multiplier+1
 11248     0720  3018               	movlw	24
 11249     0721  00A2               	movwf	___wmul@multiplicand
 11250     0722  3000               	movlw	0
 11251     0723  00A3               	movwf	___wmul@multiplicand+1
 11252     0724  3195  25E1  3186   	fcall	___wmul
 11253     0727  3000               	movlw	low (_font12| (0+32768))
 11254     0728  0020               	movlb	0	; select bank0
 11255     0729  00AF               	movwf	??_chr12+2
 11256     072A  3090               	movlw	high (_font12| (0+32768))
 11257     072B  00B0               	movwf	??_chr12+3
 11258     072C  0820               	movf	?___wmul,w
 11259     072D  072F               	addwf	??_chr12+2,w
 11260     072E  00B1               	movwf	??_chr12+4
 11261     072F  0821               	movf	?___wmul+1,w
 11262     0730  3D30               	addwfc	??_chr12+3,w
 11263     0731  00B2               	movwf	??_chr12+5
 11264     0732  0835               	movf	chr12@i,w
 11265     0733  0731               	addwf	??_chr12+4,w
 11266     0734  0084               	movwf	4
 11267     0735  0832               	movf	??_chr12+5,w
 11268     0736  1803               	skipnc
 11269     0737  0A32               	incf	??_chr12+5,w
 11270     0738  0085               	movwf	5
 11271     0739  0800               	movf	0,w	;code access
 11272     073A  0081               	movwf	1
 11273     073B                     l3849:
 11274     073B  3001               	movlw	1
 11275     073C  00AD               	movwf	??_chr12
 11276     073D  082D               	movf	??_chr12,w
 11277     073E  07B5               	addwf	chr12@i,f
 11278     073F                     l3851:
 11279     073F  300C               	movlw	12
 11280     0740  0235               	subwf	chr12@i,w
 11281     0741  1C03               	skipc
 11282     0742  2F44               	goto	u2331
 11283     0743  2F45               	goto	u2330
 11284     0744                     u2331:
 11285     0744  2F14               	goto	l3847
 11286     0745                     u2330:
 11287     0745                     l3853:
 11288                           
 11289                           ;main.c: 234: };main.c: 235: I2C_WriteNBytes(0x3C,Font12_data,13);
 11290     0745  304C               	movlw	low _Font12_data
 11291     0746  00A8               	movwf	I2C_WriteNBytes@data
 11292     0747  3001               	movlw	high _Font12_data
 11293     0748  00A9               	movwf	I2C_WriteNBytes@data+1
 11294     0749  300D               	movlw	13
 11295     074A  00AA               	movwf	I2C_WriteNBytes@len
 11296     074B  3000               	movlw	0
 11297     074C  00AB               	movwf	I2C_WriteNBytes@len+1
 11298     074D  303C               	movlw	60
 11299     074E  3197  2707  3186   	fcall	_I2C_WriteNBytes
 11300     0751                     l3855:
 11301                           
 11302                           ;main.c: 237: Page = Page + 1;
 11303     0751  0020               	movlb	0	; select bank0
 11304     0752  085E               	movf	_Page,w
 11305     0753  3E01               	addlw	1
 11306     0754  00DE               	movwf	_Page
 11307     0755                     l3857:
 11308                           
 11309                           ;main.c: 238: Posi_cmd[3] = Page;
 11310     0755  085E               	movf	_Page,w
 11311     0756  0021               	movlb	1	; select bank1
 11312     0757  00EC               	movwf	(_Posi_cmd^(0+128)+3)
 11313     0758                     l3859:
 11314                           
 11315                           ;main.c: 239: I2C_WriteNBytes(0x3C,Posi_cmd,6);
 11316     0758  30E9               	movlw	low _Posi_cmd
 11317     0759  0020               	movlb	0	; select bank0
 11318     075A  00A8               	movwf	I2C_WriteNBytes@data
 11319     075B  3000               	movlw	high _Posi_cmd
 11320     075C  00A9               	movwf	I2C_WriteNBytes@data+1
 11321     075D  3006               	movlw	6
 11322     075E  00AA               	movwf	I2C_WriteNBytes@len
 11323     075F  3000               	movlw	0
 11324     0760  00AB               	movwf	I2C_WriteNBytes@len+1
 11325     0761  303C               	movlw	60
 11326     0762  3197  2707  3186   	fcall	_I2C_WriteNBytes
 11327     0765                     l3861:
 11328                           
 11329                           ;main.c: 240: for(i = 12; i<24; i++){
 11330     0765  300C               	movlw	12
 11331     0766  0020               	movlb	0	; select bank0
 11332     0767  00B5               	movwf	chr12@i
 11333     0768                     l3867:
 11334                           
 11335                           ;main.c: 241: Font12_data[i-11] = font12[c][i];
 11336     0768  0835               	movf	chr12@i,w
 11337     0769  3E41               	addlw	(low ((_Font12_data| (0+256)+245)))& (0+255)
 11338     076A  0086               	movwf	6
 11339     076B  3001               	movlw	1	; select bank2/3
 11340     076C  0087               	movwf	7
 11341     076D  0834               	movf	chr12@c,w
 11342     076E  00AD               	movwf	??_chr12
 11343     076F  01AE               	clrf	??_chr12+1
 11344     0770  082D               	movf	??_chr12,w
 11345     0771  00A0               	movwf	___wmul@multiplier
 11346     0772  082E               	movf	??_chr12+1,w
 11347     0773  00A1               	movwf	___wmul@multiplier+1
 11348     0774  3018               	movlw	24
 11349     0775  00A2               	movwf	___wmul@multiplicand
 11350     0776  3000               	movlw	0
 11351     0777  00A3               	movwf	___wmul@multiplicand+1
 11352     0778  3195  25E1  3186   	fcall	___wmul
 11353     077B  3000               	movlw	low (_font12| (0+32768))
 11354     077C  0020               	movlb	0	; select bank0
 11355     077D  00AF               	movwf	??_chr12+2
 11356     077E  3090               	movlw	high (_font12| (0+32768))
 11357     077F  00B0               	movwf	??_chr12+3
 11358     0780  0820               	movf	?___wmul,w
 11359     0781  072F               	addwf	??_chr12+2,w
 11360     0782  00B1               	movwf	??_chr12+4
 11361     0783  0821               	movf	?___wmul+1,w
 11362     0784  3D30               	addwfc	??_chr12+3,w
 11363     0785  00B2               	movwf	??_chr12+5
 11364     0786  0835               	movf	chr12@i,w
 11365     0787  0731               	addwf	??_chr12+4,w
 11366     0788  0084               	movwf	4
 11367     0789  0832               	movf	??_chr12+5,w
 11368     078A  1803               	skipnc
 11369     078B  0A32               	incf	??_chr12+5,w
 11370     078C  0085               	movwf	5
 11371     078D  0800               	movf	0,w	;code access
 11372     078E  0081               	movwf	1
 11373     078F                     l3869:
 11374     078F  3001               	movlw	1
 11375     0790  00AD               	movwf	??_chr12
 11376     0791  082D               	movf	??_chr12,w
 11377     0792  07B5               	addwf	chr12@i,f
 11378     0793                     l3871:
 11379     0793  3018               	movlw	24
 11380     0794  0235               	subwf	chr12@i,w
 11381     0795  1C03               	skipc
 11382     0796  2F98               	goto	u2341
 11383     0797  2F99               	goto	u2340
 11384     0798                     u2341:
 11385     0798  2F68               	goto	l3867
 11386     0799                     u2340:
 11387     0799                     l3873:
 11388                           
 11389                           ;main.c: 242: };main.c: 243: I2C_WriteNBytes(0x3C,Font12_data,13);
 11390     0799  304C               	movlw	low _Font12_data
 11391     079A  00A8               	movwf	I2C_WriteNBytes@data
 11392     079B  3001               	movlw	high _Font12_data
 11393     079C  00A9               	movwf	I2C_WriteNBytes@data+1
 11394     079D  300D               	movlw	13
 11395     079E  00AA               	movwf	I2C_WriteNBytes@len
 11396     079F  3000               	movlw	0
 11397     07A0  00AB               	movwf	I2C_WriteNBytes@len+1
 11398     07A1  303C               	movlw	60
 11399     07A2  3197  2707  3186   	fcall	_I2C_WriteNBytes
 11400     07A5                     l3875:
 11401                           
 11402                           ;main.c: 244: Page = Page - 1 - 0xB0;
 11403     07A5  0020               	movlb	0	; select bank0
 11404     07A6  085E               	movf	_Page,w
 11405     07A7  3E4F               	addlw	79
 11406     07A8  00DE               	movwf	_Page
 11407     07A9                     l3877:
 11408                           
 11409                           ;main.c: 245: Column = Column +12;
 11410     07A9  0021               	movlb	1	; select bank1
 11411     07AA  0860               	movf	_Column^(0+128),w
 11412     07AB  3E0C               	addlw	12
 11413     07AC  00E0               	movwf	_Column^(0+128)
 11414     07AD                     l998:
 11415     07AD  0008               	return
 11416     07AE                     __end_of_chr12:
 11417                           
 11418                           	psect	text23
 11419     15E1                     __ptext23:	
 11420 ;; *************** function ___wmul *****************
 11421 ;; Defined at:
 11422 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c90\common\Umul16.c"
 11423 ;; Parameters:    Size  Location     Type
 11424 ;;  multiplier      2    0[BANK0 ] unsigned int 
 11425 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 11426 ;; Auto vars:     Size  Location     Type
 11427 ;;  product         2    4[BANK0 ] unsigned int 
 11428 ;; Return value:  Size  Location     Type
 11429 ;;                  2    0[BANK0 ] unsigned int 
 11430 ;; Registers used:
 11431 ;;		wreg, status,2, status,0
 11432 ;; Tracked objects:
 11433 ;;		On entry : 0/0
 11434 ;;		On exit  : 0/0
 11435 ;;		Unchanged: 0/0
 11436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11437 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11438 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11440 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11441 ;;Total ram usage:        6 bytes
 11442 ;; Hardware stack levels used: 1
 11443 ;; Hardware stack levels required when called: 7
 11444 ;; This function calls:
 11445 ;;		Nothing
 11446 ;; This function is called by:
 11447 ;;		_chr6
 11448 ;;		_chr12
 11449 ;;		_printf
 11450 ;; This function uses a non-reentrant model
 11451 ;;
 11452                           
 11453     15E1                     ___wmul:	
 11454                           ;psect for function ___wmul
 11455                           
 11456     15E1                     l3661:	
 11457                           ;incstack = 0
 11458                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 11459                           
 11460     15E1  0020               	movlb	0	; select bank0
 11461     15E2  01A4               	clrf	___wmul@product
 11462     15E3  01A5               	clrf	___wmul@product+1
 11463     15E4                     l3663:
 11464     15E4  1C20               	btfss	___wmul@multiplier,0
 11465     15E5  2DE7               	goto	u2241
 11466     15E6  2DE8               	goto	u2240
 11467     15E7                     u2241:
 11468     15E7  2DEC               	goto	l1241
 11469     15E8                     u2240:
 11470     15E8                     l3665:
 11471     15E8  0822               	movf	___wmul@multiplicand,w
 11472     15E9  07A4               	addwf	___wmul@product,f
 11473     15EA  0823               	movf	___wmul@multiplicand+1,w
 11474     15EB  3DA5               	addwfc	___wmul@product+1,f
 11475     15EC                     l1241:
 11476     15EC  3001               	movlw	1
 11477     15ED                     u2255:
 11478     15ED  35A2               	lslf	___wmul@multiplicand,f
 11479     15EE  0DA3               	rlf	___wmul@multiplicand+1,f
 11480     15EF  0B89               	decfsz	9,f
 11481     15F0  2DED               	goto	u2255
 11482     15F1                     l3667:
 11483     15F1  3001               	movlw	1
 11484     15F2                     u2265:
 11485     15F2  36A1               	lsrf	___wmul@multiplier+1,f
 11486     15F3  0CA0               	rrf	___wmul@multiplier,f
 11487     15F4  0B89               	decfsz	9,f
 11488     15F5  2DF2               	goto	u2265
 11489     15F6                     l3669:
 11490     15F6  0820               	movf	___wmul@multiplier,w
 11491     15F7  0421               	iorwf	___wmul@multiplier+1,w
 11492     15F8  1D03               	btfss	3,2
 11493     15F9  2DFB               	goto	u2271
 11494     15FA  2DFC               	goto	u2270
 11495     15FB                     u2271:
 11496     15FB  2DE4               	goto	l3663
 11497     15FC                     u2270:
 11498     15FC                     l3671:
 11499     15FC  0825               	movf	___wmul@product+1,w
 11500     15FD  00A1               	movwf	?___wmul+1
 11501     15FE  0824               	movf	___wmul@product,w
 11502     15FF  00A0               	movwf	?___wmul
 11503     1600                     l1243:
 11504     1600  0008               	return
 11505     1601                     __end_of___wmul:
 11506                           
 11507                           	psect	text24
 11508     147E                     __ptext24:	
 11509 ;; *************** function _isdigit *****************
 11510 ;; Defined at:
 11511 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c90\common\isdigit.c"
 11512 ;; Parameters:    Size  Location     Type
 11513 ;;  c               1    wreg     unsigned char 
 11514 ;; Auto vars:     Size  Location     Type
 11515 ;;  c               1    1[BANK0 ] unsigned char 
 11516 ;; Return value:  Size  Location     Type
 11517 ;;		None               void
 11518 ;; Registers used:
 11519 ;;		wreg, status,2, status,0
 11520 ;; Tracked objects:
 11521 ;;		On entry : 0/0
 11522 ;;		On exit  : 0/0
 11523 ;;		Unchanged: 0/0
 11524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11526 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11528 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11529 ;;Total ram usage:        2 bytes
 11530 ;; Hardware stack levels used: 1
 11531 ;; Hardware stack levels required when called: 7
 11532 ;; This function calls:
 11533 ;;		Nothing
 11534 ;; This function is called by:
 11535 ;;		_printf
 11536 ;; This function uses a non-reentrant model
 11537 ;;
 11538                           
 11539     147E                     _isdigit:	
 11540                           ;psect for function _isdigit
 11541                           
 11542                           
 11543                           ;incstack = 0
 11544                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 11545                           ;isdigit@c stored from wreg
 11546     147E  0020               	movlb	0	; select bank0
 11547     147F  00A1               	movwf	isdigit@c
 11548     1480                     l4295:
 11549     1480  01A0               	clrf	_isdigit$2223
 11550     1481                     l4297:
 11551     1481  303A               	movlw	58
 11552     1482  0221               	subwf	isdigit@c,w
 11553     1483  1803               	skipnc
 11554     1484  2C86               	goto	u3161
 11555     1485  2C87               	goto	u3160
 11556     1486                     u3161:
 11557     1486  2C8F               	goto	l4303
 11558     1487                     u3160:
 11559     1487                     l4299:
 11560     1487  3030               	movlw	48
 11561     1488  0221               	subwf	isdigit@c,w
 11562     1489  1C03               	skipc
 11563     148A  2C8C               	goto	u3171
 11564     148B  2C8D               	goto	u3170
 11565     148C                     u3171:
 11566     148C  2C8F               	goto	l4303
 11567     148D                     u3170:
 11568     148D                     l4301:
 11569     148D  01A0               	clrf	_isdigit$2223
 11570     148E  0AA0               	incf	_isdigit$2223,f
 11571     148F                     l4303:
 11572     148F  0C20               	rrf	_isdigit$2223,w
 11573     1490                     l1697:
 11574     1490  0008               	return
 11575     1491                     __end_of_isdigit:
 11576                           
 11577                           	psect	text25
 11578     1793                     __ptext25:	
 11579 ;; *************** function ___lwmod *****************
 11580 ;; Defined at:
 11581 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c90\common\lwmod.c"
 11582 ;; Parameters:    Size  Location     Type
 11583 ;;  divisor         2    8[BANK0 ] unsigned int 
 11584 ;;  dividend        2   10[BANK0 ] unsigned int 
 11585 ;; Auto vars:     Size  Location     Type
 11586 ;;  counter         1   13[BANK0 ] unsigned char 
 11587 ;; Return value:  Size  Location     Type
 11588 ;;                  2    8[BANK0 ] unsigned int 
 11589 ;; Registers used:
 11590 ;;		wreg, status,2, status,0
 11591 ;; Tracked objects:
 11592 ;;		On entry : 0/0
 11593 ;;		On exit  : 0/0
 11594 ;;		Unchanged: 0/0
 11595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11596 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11597 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11598 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11599 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11600 ;;Total ram usage:        6 bytes
 11601 ;; Hardware stack levels used: 1
 11602 ;; Hardware stack levels required when called: 7
 11603 ;; This function calls:
 11604 ;;		Nothing
 11605 ;; This function is called by:
 11606 ;;		_printf
 11607 ;; This function uses a non-reentrant model
 11608 ;;
 11609                           
 11610     1793                     ___lwmod:	
 11611                           ;psect for function ___lwmod
 11612                           
 11613     1793                     l4415:	
 11614                           ;incstack = 0
 11615                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 11616                           
 11617     1793  0020               	movlb	0	; select bank0
 11618     1794  0828               	movf	___lwmod@divisor,w
 11619     1795  0429               	iorwf	___lwmod@divisor+1,w
 11620     1796  1903               	btfsc	3,2
 11621     1797  2F99               	goto	u3441
 11622     1798  2F9A               	goto	u3440
 11623     1799                     u3441:
 11624     1799  2FC3               	goto	l4433
 11625     179A                     u3440:
 11626     179A                     l4417:
 11627     179A  01AD               	clrf	___lwmod@counter
 11628     179B  0AAD               	incf	___lwmod@counter,f
 11629     179C  2FA6               	goto	l4423
 11630     179D                     l4419:
 11631     179D  3001               	movlw	1
 11632     179E                     u3455:
 11633     179E  35A8               	lslf	___lwmod@divisor,f
 11634     179F  0DA9               	rlf	___lwmod@divisor+1,f
 11635     17A0  0B89               	decfsz	9,f
 11636     17A1  2F9E               	goto	u3455
 11637     17A2                     l4421:
 11638     17A2  3001               	movlw	1
 11639     17A3  00AC               	movwf	??___lwmod
 11640     17A4  082C               	movf	??___lwmod,w
 11641     17A5  07AD               	addwf	___lwmod@counter,f
 11642     17A6                     l4423:
 11643     17A6  1FA9               	btfss	___lwmod@divisor+1,7
 11644     17A7  2FA9               	goto	u3461
 11645     17A8  2FAA               	goto	u3460
 11646     17A9                     u3461:
 11647     17A9  2F9D               	goto	l4419
 11648     17AA                     u3460:
 11649     17AA                     l4425:
 11650     17AA  0829               	movf	___lwmod@divisor+1,w
 11651     17AB  022B               	subwf	___lwmod@dividend+1,w
 11652     17AC  1D03               	skipz
 11653     17AD  2FB0               	goto	u3475
 11654     17AE  0828               	movf	___lwmod@divisor,w
 11655     17AF  022A               	subwf	___lwmod@dividend,w
 11656     17B0                     u3475:
 11657     17B0  1C03               	skipc
 11658     17B1  2FB3               	goto	u3471
 11659     17B2  2FB4               	goto	u3470
 11660     17B3                     u3471:
 11661     17B3  2FB8               	goto	l4429
 11662     17B4                     u3470:
 11663     17B4                     l4427:
 11664     17B4  0828               	movf	___lwmod@divisor,w
 11665     17B5  02AA               	subwf	___lwmod@dividend,f
 11666     17B6  0829               	movf	___lwmod@divisor+1,w
 11667     17B7  3BAB               	subwfb	___lwmod@dividend+1,f
 11668     17B8                     l4429:
 11669     17B8  3001               	movlw	1
 11670     17B9                     u3485:
 11671     17B9  36A9               	lsrf	___lwmod@divisor+1,f
 11672     17BA  0CA8               	rrf	___lwmod@divisor,f
 11673     17BB  0B89               	decfsz	9,f
 11674     17BC  2FB9               	goto	u3485
 11675     17BD                     l4431:
 11676     17BD  3001               	movlw	1
 11677     17BE  02AD               	subwf	___lwmod@counter,f
 11678     17BF  1D03               	btfss	3,2
 11679     17C0  2FC2               	goto	u3491
 11680     17C1  2FC3               	goto	u3490
 11681     17C2                     u3491:
 11682     17C2  2FAA               	goto	l4425
 11683     17C3                     u3490:
 11684     17C3                     l4433:
 11685     17C3  082B               	movf	___lwmod@dividend+1,w
 11686     17C4  00A9               	movwf	?___lwmod+1
 11687     17C5  082A               	movf	___lwmod@dividend,w
 11688     17C6  00A8               	movwf	?___lwmod
 11689     17C7                     l1523:
 11690     17C7  0008               	return
 11691     17C8                     __end_of___lwmod:
 11692                           
 11693                           	psect	text26
 11694     0819                     __ptext26:	
 11695 ;; *************** function ___lwdiv *****************
 11696 ;; Defined at:
 11697 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c90\common\lwdiv.c"
 11698 ;; Parameters:    Size  Location     Type
 11699 ;;  divisor         2    0[BANK0 ] unsigned int 
 11700 ;;  dividend        2    2[BANK0 ] unsigned int 
 11701 ;; Auto vars:     Size  Location     Type
 11702 ;;  quotient        2    5[BANK0 ] unsigned int 
 11703 ;;  counter         1    7[BANK0 ] unsigned char 
 11704 ;; Return value:  Size  Location     Type
 11705 ;;                  2    0[BANK0 ] unsigned int 
 11706 ;; Registers used:
 11707 ;;		wreg, status,2, status,0
 11708 ;; Tracked objects:
 11709 ;;		On entry : 0/0
 11710 ;;		On exit  : 0/0
 11711 ;;		Unchanged: 0/0
 11712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11713 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11714 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11715 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11716 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11717 ;;Total ram usage:        8 bytes
 11718 ;; Hardware stack levels used: 1
 11719 ;; Hardware stack levels required when called: 7
 11720 ;; This function calls:
 11721 ;;		Nothing
 11722 ;; This function is called by:
 11723 ;;		_printf
 11724 ;; This function uses a non-reentrant model
 11725 ;;
 11726                           
 11727     0819                     ___lwdiv:	
 11728                           ;psect for function ___lwdiv
 11729                           
 11730     0819                     l4389:	
 11731                           ;incstack = 0
 11732                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 11733                           
 11734     0819  0020               	movlb	0	; select bank0
 11735     081A  01A5               	clrf	___lwdiv@quotient
 11736     081B  01A6               	clrf	___lwdiv@quotient+1
 11737     081C                     l4391:
 11738     081C  0820               	movf	___lwdiv@divisor,w
 11739     081D  0421               	iorwf	___lwdiv@divisor+1,w
 11740     081E  1903               	btfsc	3,2
 11741     081F  2821               	goto	u3371
 11742     0820  2822               	goto	u3370
 11743     0821                     u3371:
 11744     0821  2851               	goto	l4411
 11745     0822                     u3370:
 11746     0822                     l4393:
 11747     0822  01A7               	clrf	___lwdiv@counter
 11748     0823  0AA7               	incf	___lwdiv@counter,f
 11749     0824  282E               	goto	l4399
 11750     0825                     l4395:
 11751     0825  3001               	movlw	1
 11752     0826                     u3385:
 11753     0826  35A0               	lslf	___lwdiv@divisor,f
 11754     0827  0DA1               	rlf	___lwdiv@divisor+1,f
 11755     0828  0B89               	decfsz	9,f
 11756     0829  2826               	goto	u3385
 11757     082A                     l4397:
 11758     082A  3001               	movlw	1
 11759     082B  00A4               	movwf	??___lwdiv
 11760     082C  0824               	movf	??___lwdiv,w
 11761     082D  07A7               	addwf	___lwdiv@counter,f
 11762     082E                     l4399:
 11763     082E  1FA1               	btfss	___lwdiv@divisor+1,7
 11764     082F  2831               	goto	u3391
 11765     0830  2832               	goto	u3390
 11766     0831                     u3391:
 11767     0831  2825               	goto	l4395
 11768     0832                     u3390:
 11769     0832                     l4401:
 11770     0832  3001               	movlw	1
 11771     0833                     u3405:
 11772     0833  35A5               	lslf	___lwdiv@quotient,f
 11773     0834  0DA6               	rlf	___lwdiv@quotient+1,f
 11774     0835  0B89               	decfsz	9,f
 11775     0836  2833               	goto	u3405
 11776     0837  0821               	movf	___lwdiv@divisor+1,w
 11777     0838  0223               	subwf	___lwdiv@dividend+1,w
 11778     0839  1D03               	skipz
 11779     083A  283D               	goto	u3415
 11780     083B  0820               	movf	___lwdiv@divisor,w
 11781     083C  0222               	subwf	___lwdiv@dividend,w
 11782     083D                     u3415:
 11783     083D  1C03               	skipc
 11784     083E  2840               	goto	u3411
 11785     083F  2841               	goto	u3410
 11786     0840                     u3411:
 11787     0840  2846               	goto	l4407
 11788     0841                     u3410:
 11789     0841                     l4403:
 11790     0841  0820               	movf	___lwdiv@divisor,w
 11791     0842  02A2               	subwf	___lwdiv@dividend,f
 11792     0843  0821               	movf	___lwdiv@divisor+1,w
 11793     0844  3BA3               	subwfb	___lwdiv@dividend+1,f
 11794     0845                     l4405:
 11795     0845  1425               	bsf	___lwdiv@quotient,0
 11796     0846                     l4407:
 11797     0846  3001               	movlw	1
 11798     0847                     u3425:
 11799     0847  36A1               	lsrf	___lwdiv@divisor+1,f
 11800     0848  0CA0               	rrf	___lwdiv@divisor,f
 11801     0849  0B89               	decfsz	9,f
 11802     084A  2847               	goto	u3425
 11803     084B                     l4409:
 11804     084B  3001               	movlw	1
 11805     084C  02A7               	subwf	___lwdiv@counter,f
 11806     084D  1D03               	btfss	3,2
 11807     084E  2850               	goto	u3431
 11808     084F  2851               	goto	u3430
 11809     0850                     u3431:
 11810     0850  2832               	goto	l4401
 11811     0851                     u3430:
 11812     0851                     l4411:
 11813     0851  0826               	movf	___lwdiv@quotient+1,w
 11814     0852  00A1               	movwf	?___lwdiv+1
 11815     0853  0825               	movf	___lwdiv@quotient,w
 11816     0854  00A0               	movwf	?___lwdiv
 11817     0855                     l1513:
 11818     0855  0008               	return
 11819     0856                     __end_of___lwdiv:
 11820                           
 11821                           	psect	text27
 11822     1764                     __ptext27:	
 11823 ;; *************** function _font6_posi *****************
 11824 ;; Defined at:
 11825 ;;		line 187 in file "main.c"
 11826 ;; Parameters:    Size  Location     Type
 11827 ;;  page            1    wreg     unsigned char 
 11828 ;;  column          1   13[BANK0 ] unsigned char 
 11829 ;; Auto vars:     Size  Location     Type
 11830 ;;  page            1   15[BANK0 ] unsigned char 
 11831 ;; Return value:  Size  Location     Type
 11832 ;;                  1    wreg      void 
 11833 ;; Registers used:
 11834 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11835 ;; Tracked objects:
 11836 ;;		On entry : 0/0
 11837 ;;		On exit  : 0/0
 11838 ;;		Unchanged: 0/0
 11839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11840 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11841 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11842 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11843 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11844 ;;Total ram usage:        3 bytes
 11845 ;; Hardware stack levels used: 1
 11846 ;; Hardware stack levels required when called: 11
 11847 ;; This function calls:
 11848 ;;		_I2C_WriteNBytes
 11849 ;; This function is called by:
 11850 ;;		_RTC_disp
 11851 ;;		_MoveServo
 11852 ;;		_main
 11853 ;;		_Time_disp
 11854 ;; This function uses a non-reentrant model
 11855 ;;
 11856                           
 11857     1764                     _font6_posi:	
 11858                           ;psect for function _font6_posi
 11859                           
 11860                           
 11861                           ;incstack = 0
 11862                           ; Regs used in _font6_posi: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11863                           ;font6_posi@page stored from wreg
 11864     1764  0020               	movlb	0	; select bank0
 11865     1765  00AF               	movwf	font6_posi@page
 11866     1766                     l4599:
 11867                           
 11868                           ;main.c: 188: Size = 0;
 11869     1766  0021               	movlb	1	; select bank1
 11870     1767  01DD               	clrf	_Size^(0+128)
 11871     1768                     l4601:
 11872                           
 11873                           ;main.c: 189: Page = page;
 11874     1768  0020               	movlb	0	; select bank0
 11875     1769  082F               	movf	font6_posi@page,w
 11876     176A  00DE               	movwf	_Page
 11877     176B                     l4603:
 11878                           
 11879                           ;main.c: 190: Column = column;
 11880     176B  082D               	movf	font6_posi@column,w
 11881     176C  0021               	movlb	1	; select bank1
 11882     176D  00E0               	movwf	_Column^(0+128)
 11883     176E                     l4605:
 11884                           
 11885                           ;main.c: 191: Posi_cmd[3] = 0xB0 + page;
 11886     176E  0020               	movlb	0	; select bank0
 11887     176F  082F               	movf	font6_posi@page,w
 11888     1770  3EB0               	addlw	176
 11889     1771  0021               	movlb	1	; select bank1
 11890     1772  00EC               	movwf	(_Posi_cmd^(0+128)+3)
 11891     1773                     l4607:
 11892                           
 11893                           ;main.c: 192: Posi_cmd[4] = column & 0x0F;
 11894     1773  0020               	movlb	0	; select bank0
 11895     1774  082D               	movf	font6_posi@column,w
 11896     1775  390F               	andlw	15
 11897     1776  0021               	movlb	1	; select bank1
 11898     1777  00ED               	movwf	(_Posi_cmd^(0+128)+4)
 11899     1778                     l4609:
 11900                           
 11901                           ;main.c: 193: column = column >>4;
 11902     1778  0020               	movlb	0	; select bank0
 11903     1779  082D               	movf	font6_posi@column,w
 11904     177A  00AE               	movwf	??_font6_posi
 11905     177B  3004               	movlw	4
 11906     177C                     u3555:
 11907     177C  36AE               	lsrf	??_font6_posi,f
 11908     177D  0B89               	decfsz	9,f
 11909     177E  2F7C               	goto	u3555
 11910     177F  082E               	movf	??_font6_posi,w
 11911     1780  00AD               	movwf	font6_posi@column
 11912     1781                     l4611:
 11913                           
 11914                           ;main.c: 194: Posi_cmd[5] = column + 0x10;
 11915     1781  082D               	movf	font6_posi@column,w
 11916     1782  3E10               	addlw	16
 11917     1783  0021               	movlb	1	; select bank1
 11918     1784  00EE               	movwf	(_Posi_cmd^(0+128)+5)
 11919     1785                     l4613:
 11920                           
 11921                           ;main.c: 195: I2C_WriteNBytes(0x3C, Posi_cmd, 6);
 11922     1785  30E9               	movlw	low _Posi_cmd
 11923     1786  0020               	movlb	0	; select bank0
 11924     1787  00A8               	movwf	I2C_WriteNBytes@data
 11925     1788  3000               	movlw	high _Posi_cmd
 11926     1789  00A9               	movwf	I2C_WriteNBytes@data+1
 11927     178A  3006               	movlw	6
 11928     178B  00AA               	movwf	I2C_WriteNBytes@len
 11929     178C  3000               	movlw	0
 11930     178D  00AB               	movwf	I2C_WriteNBytes@len+1
 11931     178E  303C               	movlw	60
 11932     178F  3197  2707  3197   	fcall	_I2C_WriteNBytes
 11933     1792                     l983:
 11934     1792  0008               	return
 11935     1793                     __end_of_font6_posi:
 11936                           
 11937                           	psect	text28
 11938     1707                     __ptext28:	
 11939 ;; *************** function _I2C_WriteNBytes *****************
 11940 ;; Defined at:
 11941 ;;		line 111 in file "mcc_generated_files/examples/i2c_master_example.c"
 11942 ;; Parameters:    Size  Location     Type
 11943 ;;  address         1    wreg     unsigned char 
 11944 ;;  data            2    8[BANK0 ] PTR unsigned char 
 11945 ;;		 -> Font12_data(13), Font6_data(7), Posi_cmd(6), CLR_cmd(9), 
 11946 ;;		 -> NULL(0), 
 11947 ;;  len             2   10[BANK0 ] unsigned int 
 11948 ;; Auto vars:     Size  Location     Type
 11949 ;;  address         1   12[BANK0 ] unsigned char 
 11950 ;; Return value:  Size  Location     Type
 11951 ;;                  1    wreg      void 
 11952 ;; Registers used:
 11953 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11954 ;; Tracked objects:
 11955 ;;		On entry : 0/0
 11956 ;;		On exit  : 0/0
 11957 ;;		Unchanged: 0/0
 11958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11959 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11960 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11962 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11963 ;;Total ram usage:        5 bytes
 11964 ;; Hardware stack levels used: 1
 11965 ;; Hardware stack levels required when called: 10
 11966 ;; This function calls:
 11967 ;;		_I2C_Close
 11968 ;;		_I2C_MasterWrite
 11969 ;;		_I2C_Open
 11970 ;;		_I2C_SetAddressNackCallback
 11971 ;;		_I2C_SetBuffer
 11972 ;; This function is called by:
 11973 ;;		_Time_data_read
 11974 ;;		_OLED_clr
 11975 ;;		_font6_posi
 11976 ;;		_chr6
 11977 ;;		_chr12
 11978 ;;		_font12_posi
 11979 ;; This function uses a non-reentrant model
 11980 ;;
 11981                           
 11982     1707                     _I2C_WriteNBytes:	
 11983                           ;psect for function _I2C_WriteNBytes
 11984                           
 11985                           
 11986                           ;incstack = 0
 11987                           ; Regs used in _I2C_WriteNBytes: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11988                           ;I2C_WriteNBytes@address stored from wreg
 11989     1707  0020               	movlb	0	; select bank0
 11990     1708  00AC               	movwf	I2C_WriteNBytes@address
 11991     1709                     l3643:
 11992     1709                     l3645:	
 11993                           ;i2c_master_example.c: 113: while(!I2C_Open(address));
 11994                           
 11995     1709  0020               	movlb	0	; select bank0
 11996     170A  082C               	movf	I2C_WriteNBytes@address,w
 11997     170B  3189  2159  3197   	fcall	_I2C_Open
 11998     170E  3A00               	xorlw	0
 11999     170F  1903               	skipnz
 12000     1710  2F12               	goto	u2221
 12001     1711  2F13               	goto	u2220
 12002     1712                     u2221:
 12003     1712  2F09               	goto	l3645
 12004     1713                     u2220:
 12005     1713                     l3647:
 12006                           
 12007                           ;i2c_master_example.c: 114: I2C_SetBuffer(data,len);
 12008     1713  0020               	movlb	0	; select bank0
 12009     1714  0829               	movf	I2C_WriteNBytes@data+1,w
 12010     1715  00A1               	movwf	I2C_SetBuffer@buffer+1
 12011     1716  0828               	movf	I2C_WriteNBytes@data,w
 12012     1717  00A0               	movwf	I2C_SetBuffer@buffer
 12013     1718  082B               	movf	I2C_WriteNBytes@len+1,w
 12014     1719  00A3               	movwf	I2C_SetBuffer@bufferSize+1
 12015     171A  082A               	movf	I2C_WriteNBytes@len,w
 12016     171B  00A2               	movwf	I2C_SetBuffer@bufferSize
 12017     171C  3195  250E  3197   	fcall	_I2C_SetBuffer
 12018     171F                     l3649:
 12019                           
 12020                           ;i2c_master_example.c: 115: I2C_SetAddressNackCallback((0),(0));
 12021     171F  3000               	movlw	0
 12022     1720  0020               	movlb	0	; select bank0
 12023     1721  00A4               	movwf	I2C_SetAddressNackCallback@cb
 12024     1722  00A5               	movwf	I2C_SetAddressNackCallback@cb+1
 12025     1723  3000               	movlw	0
 12026     1724  00A6               	movwf	I2C_SetAddressNackCallback@ptr
 12027     1725  00A7               	movwf	I2C_SetAddressNackCallback@ptr+1
 12028     1726  3193  2398  3197   	fcall	_I2C_SetAddressNackCallback
 12029     1729                     l3651:
 12030                           
 12031                           ;i2c_master_example.c: 116: I2C_MasterWrite();
 12032     1729  3193  230D  3197   	fcall	_I2C_MasterWrite
 12033     172C                     l3653:	
 12034                           ;i2c_master_example.c: 117: while(I2C_BUSY == I2C_Close());
 12035                           
 12036     172C  3195  2588  3197   	fcall	_I2C_Close
 12037     172F  3A01               	xorlw	1
 12038     1730  1903               	skipnz
 12039     1731  2F33               	goto	u2231
 12040     1732  2F34               	goto	u2230
 12041     1733                     u2231:
 12042     1733  2F2C               	goto	l3653
 12043     1734                     u2230:
 12044     1734                     l71:
 12045     1734  0008               	return
 12046     1735                     __end_of_I2C_WriteNBytes:
 12047                           
 12048                           	psect	text29
 12049     14A5                     __ptext29:	
 12050 ;; *************** function _Pen_swipe2 *****************
 12051 ;; Defined at:
 12052 ;;		line 154 in file "main.c"
 12053 ;; Parameters:    Size  Location     Type
 12054 ;;  set_duty        2    2[BANK0 ] int 
 12055 ;; Auto vars:     Size  Location     Type
 12056 ;;		None
 12057 ;; Return value:  Size  Location     Type
 12058 ;;                  1    wreg      void 
 12059 ;; Registers used:
 12060 ;;		wreg, status,2, status,0, pclath, cstack
 12061 ;; Tracked objects:
 12062 ;;		On entry : 0/0
 12063 ;;		On exit  : 0/0
 12064 ;;		Unchanged: 0/0
 12065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12066 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12068 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12069 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12070 ;;Total ram usage:        3 bytes
 12071 ;; Hardware stack levels used: 1
 12072 ;; Hardware stack levels required when called: 8
 12073 ;; This function calls:
 12074 ;;		_PWM6_DutyCycleSet
 12075 ;;		_PWM6_LoadBufferSet
 12076 ;; This function is called by:
 12077 ;;		_MoveServo
 12078 ;; This function uses a non-reentrant model
 12079 ;;
 12080                           
 12081     14A5                     _Pen_swipe2:	
 12082                           ;psect for function _Pen_swipe2
 12083                           
 12084     14A5                     l4591:	
 12085                           ;incstack = 0
 12086                           ; Regs used in _Pen_swipe2: [wreg+status,2+status,0+pclath+cstack]
 12087                           
 12088                           
 12089                           ;main.c: 155: PWM6_DutyCycleSet(set_duty);
 12090     14A5  0020               	movlb	0	; select bank0
 12091     14A6  0823               	movf	Pen_swipe2@set_duty+1,w
 12092     14A7  00A1               	movwf	PWM6_DutyCycleSet@dutyCycleCount+1
 12093     14A8  0822               	movf	Pen_swipe2@set_duty,w
 12094     14A9  00A0               	movwf	PWM6_DutyCycleSet@dutyCycleCount
 12095     14AA  3193  235C  3194   	fcall	_PWM6_DutyCycleSet
 12096     14AD                     l4593:
 12097                           
 12098                           ;main.c: 156: PWM6_LoadBufferSet();
 12099     14AD  3192  22C8  3194   	fcall	_PWM6_LoadBufferSet
 12100                           
 12101                           ;main.c: 157: _delay((unsigned long)((15)*(16000000/4000.0)));
 12102     14B0  304E               	movlw	78
 12103     14B1  0020               	movlb	0	; select bank0
 12104     14B2  00A4               	movwf	??_Pen_swipe2
 12105     14B3  30EB               	movlw	235
 12106     14B4                     u4287:
 12107     14B4  0B89               	decfsz	9,f
 12108     14B5  2CB4               	goto	u4287
 12109     14B6  0BA4               	decfsz	??_Pen_swipe2,f
 12110     14B7  2CB4               	goto	u4287
 12111     14B8                     l966:
 12112     14B8  0008               	return
 12113     14B9                     __end_of_Pen_swipe2:
 12114                           
 12115                           	psect	text30
 12116     12C8                     __ptext30:	
 12117 ;; *************** function _PWM6_LoadBufferSet *****************
 12118 ;; Defined at:
 12119 ;;		line 128 in file "mcc_generated_files/pwm6.c"
 12120 ;; Parameters:    Size  Location     Type
 12121 ;;		None
 12122 ;; Auto vars:     Size  Location     Type
 12123 ;;		None
 12124 ;; Return value:  Size  Location     Type
 12125 ;;                  1    wreg      void 
 12126 ;; Registers used:
 12127 ;;		None
 12128 ;; Tracked objects:
 12129 ;;		On entry : 0/0
 12130 ;;		On exit  : 0/0
 12131 ;;		Unchanged: 0/0
 12132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12136 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12137 ;;Total ram usage:        0 bytes
 12138 ;; Hardware stack levels used: 1
 12139 ;; Hardware stack levels required when called: 7
 12140 ;; This function calls:
 12141 ;;		Nothing
 12142 ;; This function is called by:
 12143 ;;		_Pen_swipe2
 12144 ;; This function uses a non-reentrant model
 12145 ;;
 12146                           
 12147     12C8                     _PWM6_LoadBufferSet:	
 12148                           ;psect for function _PWM6_LoadBufferSet
 12149                           
 12150     12C8                     l4109:	
 12151                           ;incstack = 0
 12152                           ; Regs used in _PWM6_LoadBufferSet: []
 12153                           
 12154                           
 12155                           ;pwm6.c: 130: PWM6LDCONbits.LDA = 1;
 12156     12C8  003B               	movlb	27	; select bank27
 12157     12C9  17AF               	bsf	47,7	;volatile
 12158     12CA                     l790:
 12159     12CA  0008               	return
 12160     12CB                     __end_of_PWM6_LoadBufferSet:
 12161                           
 12162                           	psect	text31
 12163     135C                     __ptext31:	
 12164 ;; *************** function _PWM6_DutyCycleSet *****************
 12165 ;; Defined at:
 12166 ;;		line 139 in file "mcc_generated_files/pwm6.c"
 12167 ;; Parameters:    Size  Location     Type
 12168 ;;  dutyCycleCou    2    0[BANK0 ] unsigned int 
 12169 ;; Auto vars:     Size  Location     Type
 12170 ;;		None
 12171 ;; Return value:  Size  Location     Type
 12172 ;;                  1    wreg      void 
 12173 ;; Registers used:
 12174 ;;		wreg, status,2
 12175 ;; Tracked objects:
 12176 ;;		On entry : 0/0
 12177 ;;		On exit  : 0/0
 12178 ;;		Unchanged: 0/0
 12179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12180 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12183 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12184 ;;Total ram usage:        2 bytes
 12185 ;; Hardware stack levels used: 1
 12186 ;; Hardware stack levels required when called: 7
 12187 ;; This function calls:
 12188 ;;		Nothing
 12189 ;; This function is called by:
 12190 ;;		_Pen_swipe2
 12191 ;; This function uses a non-reentrant model
 12192 ;;
 12193                           
 12194     135C                     _PWM6_DutyCycleSet:	
 12195                           ;psect for function _PWM6_DutyCycleSet
 12196                           
 12197     135C                     l4111:	
 12198                           ;incstack = 0
 12199                           ; Regs used in _PWM6_DutyCycleSet: [wreg+status,2]
 12200                           
 12201                           
 12202                           ;pwm6.c: 141: PWM6DCH = (dutyCycleCount>>8);
 12203     135C  0020               	movlb	0	; select bank0
 12204     135D  0821               	movf	PWM6_DutyCycleSet@dutyCycleCount+1,w
 12205     135E  003B               	movlb	27	; select bank27
 12206     135F  00A4               	movwf	36	;volatile
 12207     1360                     l4113:
 12208                           
 12209                           ;pwm6.c: 142: PWM6DCL = (dutyCycleCount);
 12210     1360  0020               	movlb	0	; select bank0
 12211     1361  0820               	movf	PWM6_DutyCycleSet@dutyCycleCount,w
 12212     1362  003B               	movlb	27	; select bank27
 12213     1363  00A3               	movwf	35	;volatile
 12214     1364                     l796:
 12215     1364  0008               	return
 12216     1365                     __end_of_PWM6_DutyCycleSet:
 12217                           
 12218                           	psect	text32
 12219     1491                     __ptext32:	
 12220 ;; *************** function _Pen_swipe *****************
 12221 ;; Defined at:
 12222 ;;		line 149 in file "main.c"
 12223 ;; Parameters:    Size  Location     Type
 12224 ;;  set_duty        2    2[BANK0 ] int 
 12225 ;; Auto vars:     Size  Location     Type
 12226 ;;		None
 12227 ;; Return value:  Size  Location     Type
 12228 ;;                  1    wreg      void 
 12229 ;; Registers used:
 12230 ;;		wreg, status,2, status,0, pclath, cstack
 12231 ;; Tracked objects:
 12232 ;;		On entry : 0/0
 12233 ;;		On exit  : 0/0
 12234 ;;		Unchanged: 0/0
 12235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12236 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12238 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12239 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12240 ;;Total ram usage:        3 bytes
 12241 ;; Hardware stack levels used: 1
 12242 ;; Hardware stack levels required when called: 8
 12243 ;; This function calls:
 12244 ;;		_PWM11_DutyCycleSet
 12245 ;;		_PWM11_LoadBufferSet
 12246 ;; This function is called by:
 12247 ;;		_MoveServo
 12248 ;; This function uses a non-reentrant model
 12249 ;;
 12250                           
 12251     1491                     _Pen_swipe:	
 12252                           ;psect for function _Pen_swipe
 12253                           
 12254     1491                     l4587:	
 12255                           ;incstack = 0
 12256                           ; Regs used in _Pen_swipe: [wreg+status,2+status,0+pclath+cstack]
 12257                           
 12258                           
 12259                           ;main.c: 150: PWM11_DutyCycleSet(set_duty);
 12260     1491  0020               	movlb	0	; select bank0
 12261     1492  0823               	movf	Pen_swipe@set_duty+1,w
 12262     1493  00A1               	movwf	PWM11_DutyCycleSet@dutyCycleCount+1
 12263     1494  0822               	movf	Pen_swipe@set_duty,w
 12264     1495  00A0               	movwf	PWM11_DutyCycleSet@dutyCycleCount
 12265     1496  3193  2353  3194   	fcall	_PWM11_DutyCycleSet
 12266     1499                     l4589:
 12267                           
 12268                           ;main.c: 151: PWM11_LoadBufferSet();
 12269     1499  3192  22C5  3194   	fcall	_PWM11_LoadBufferSet
 12270                           
 12271                           ;main.c: 152: _delay((unsigned long)((15)*(16000000/4000.0)));
 12272     149C  304E               	movlw	78
 12273     149D  0020               	movlb	0	; select bank0
 12274     149E  00A4               	movwf	??_Pen_swipe
 12275     149F  30EB               	movlw	235
 12276     14A0                     u4297:
 12277     14A0  0B89               	decfsz	9,f
 12278     14A1  2CA0               	goto	u4297
 12279     14A2  0BA4               	decfsz	??_Pen_swipe,f
 12280     14A3  2CA0               	goto	u4297
 12281     14A4                     l963:
 12282     14A4  0008               	return
 12283     14A5                     __end_of_Pen_swipe:
 12284                           
 12285                           	psect	text33
 12286     12C5                     __ptext33:	
 12287 ;; *************** function _PWM11_LoadBufferSet *****************
 12288 ;; Defined at:
 12289 ;;		line 128 in file "mcc_generated_files/pwm11.c"
 12290 ;; Parameters:    Size  Location     Type
 12291 ;;		None
 12292 ;; Auto vars:     Size  Location     Type
 12293 ;;		None
 12294 ;; Return value:  Size  Location     Type
 12295 ;;                  1    wreg      void 
 12296 ;; Registers used:
 12297 ;;		None
 12298 ;; Tracked objects:
 12299 ;;		On entry : 0/0
 12300 ;;		On exit  : 0/0
 12301 ;;		Unchanged: 0/0
 12302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12306 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12307 ;;Total ram usage:        0 bytes
 12308 ;; Hardware stack levels used: 1
 12309 ;; Hardware stack levels required when called: 7
 12310 ;; This function calls:
 12311 ;;		Nothing
 12312 ;; This function is called by:
 12313 ;;		_Pen_swipe
 12314 ;; This function uses a non-reentrant model
 12315 ;;
 12316                           
 12317     12C5                     _PWM11_LoadBufferSet:	
 12318                           ;psect for function _PWM11_LoadBufferSet
 12319                           
 12320     12C5                     l3963:	
 12321                           ;incstack = 0
 12322                           ; Regs used in _PWM11_LoadBufferSet: []
 12323                           
 12324                           
 12325                           ;pwm11.c: 130: PWM11LDCONbits.LDA = 1;
 12326     12C5  003B               	movlb	27	; select bank27
 12327     12C6  17BF               	bsf	63,7	;volatile
 12328     12C7                     l157:
 12329     12C7  0008               	return
 12330     12C8                     __end_of_PWM11_LoadBufferSet:
 12331                           
 12332                           	psect	text34
 12333     1353                     __ptext34:	
 12334 ;; *************** function _PWM11_DutyCycleSet *****************
 12335 ;; Defined at:
 12336 ;;		line 139 in file "mcc_generated_files/pwm11.c"
 12337 ;; Parameters:    Size  Location     Type
 12338 ;;  dutyCycleCou    2    0[BANK0 ] unsigned int 
 12339 ;; Auto vars:     Size  Location     Type
 12340 ;;		None
 12341 ;; Return value:  Size  Location     Type
 12342 ;;                  1    wreg      void 
 12343 ;; Registers used:
 12344 ;;		wreg, status,2
 12345 ;; Tracked objects:
 12346 ;;		On entry : 0/0
 12347 ;;		On exit  : 0/0
 12348 ;;		Unchanged: 0/0
 12349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12350 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12353 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12354 ;;Total ram usage:        2 bytes
 12355 ;; Hardware stack levels used: 1
 12356 ;; Hardware stack levels required when called: 7
 12357 ;; This function calls:
 12358 ;;		Nothing
 12359 ;; This function is called by:
 12360 ;;		_Pen_swipe
 12361 ;; This function uses a non-reentrant model
 12362 ;;
 12363                           
 12364     1353                     _PWM11_DutyCycleSet:	
 12365                           ;psect for function _PWM11_DutyCycleSet
 12366                           
 12367     1353                     l3965:	
 12368                           ;incstack = 0
 12369                           ; Regs used in _PWM11_DutyCycleSet: [wreg+status,2]
 12370                           
 12371                           
 12372                           ;pwm11.c: 141: PWM11DCH = (dutyCycleCount>>8);
 12373     1353  0020               	movlb	0	; select bank0
 12374     1354  0821               	movf	PWM11_DutyCycleSet@dutyCycleCount+1,w
 12375     1355  003B               	movlb	27	; select bank27
 12376     1356  00B4               	movwf	52	;volatile
 12377     1357                     l3967:
 12378                           
 12379                           ;pwm11.c: 142: PWM11DCL = (dutyCycleCount);
 12380     1357  0020               	movlb	0	; select bank0
 12381     1358  0820               	movf	PWM11_DutyCycleSet@dutyCycleCount,w
 12382     1359  003B               	movlb	27	; select bank27
 12383     135A  00B3               	movwf	51	;volatile
 12384     135B                     l163:
 12385     135B  0008               	return
 12386     135C                     __end_of_PWM11_DutyCycleSet:
 12387                           
 12388                           	psect	text35
 12389     0AD7                     __ptext35:	
 12390 ;; *************** function _Clock_set *****************
 12391 ;; Defined at:
 12392 ;;		line 137 in file "main.c"
 12393 ;; Parameters:    Size  Location     Type
 12394 ;;		None
 12395 ;; Auto vars:     Size  Location     Type
 12396 ;;  i               2   19[BANK0 ] int 
 12397 ;; Return value:  Size  Location     Type
 12398 ;;                  1    wreg      void 
 12399 ;; Registers used:
 12400 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12401 ;; Tracked objects:
 12402 ;;		On entry : 0/0
 12403 ;;		On exit  : 0/0
 12404 ;;		Unchanged: 0/0
 12405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12407 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12408 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12409 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12410 ;;Total ram usage:        4 bytes
 12411 ;; Hardware stack levels used: 1
 12412 ;; Hardware stack levels required when called: 12
 12413 ;; This function calls:
 12414 ;;		_Time_data_write
 12415 ;;		___bmul
 12416 ;;		_div
 12417 ;; This function is called by:
 12418 ;;		_main
 12419 ;; This function uses a non-reentrant model
 12420 ;;
 12421                           
 12422     0AD7                     _Clock_set:	
 12423                           ;psect for function _Clock_set
 12424                           
 12425     0AD7                     l4799:	
 12426                           ;incstack = 0
 12427                           ; Regs used in _Clock_set: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12428                           
 12429                           
 12430                           ;main.c: 140: for(int i = 0; i < 8; i++) {
 12431     0AD7  0020               	movlb	0	; select bank0
 12432     0AD8  01B3               	clrf	Clock_set@i
 12433     0AD9  01B4               	clrf	Clock_set@i+1
 12434     0ADA                     l4805:
 12435                           
 12436                           ;main.c: 141: res = div(settei[i][0],10);
 12437     0ADA  3003               	movlw	3
 12438     0ADB  0020               	movlb	0	; select bank0
 12439     0ADC  00A0               	movwf	___bmul@multiplicand
 12440     0ADD  0833               	movf	Clock_set@i,w
 12441     0ADE  3194  24E2  318A   	fcall	___bmul
 12442     0AE1  3E20               	addlw	(low (_settei| (0+256)))& (0+255)
 12443     0AE2  0086               	movwf	6
 12444     0AE3  3001               	movlw	1	; select bank2/3
 12445     0AE4  0087               	movwf	7
 12446     0AE5  0801               	movf	1,w
 12447     0AE6  0020               	movlb	0	; select bank0
 12448     0AE7  00B1               	movwf	??_Clock_set
 12449     0AE8  01B2               	clrf	??_Clock_set+1
 12450     0AE9  0831               	movf	??_Clock_set,w
 12451     0AEA  00A9               	movwf	div@number
 12452     0AEB  0832               	movf	??_Clock_set+1,w
 12453     0AEC  00AA               	movwf	div@number+1
 12454     0AED  300A               	movlw	10
 12455     0AEE  00AB               	movwf	div@denom
 12456     0AEF  3000               	movlw	0
 12457     0AF0  00AC               	movwf	div@denom+1
 12458     0AF1  3196  26DD  318A   	fcall	_div
 12459     0AF4  0020               	movlb	0	; select bank0
 12460     0AF5  082C               	movf	?_div+3,w
 12461     0AF6  0021               	movlb	1	; select bank1
 12462     0AF7  00C1               	movwf	(_res+3)^(0+128)
 12463     0AF8  0020               	movlb	0	; select bank0
 12464     0AF9  082B               	movf	?_div+2,w
 12465     0AFA  0021               	movlb	1	; select bank1
 12466     0AFB  00C0               	movwf	(_res+2)^(0+128)
 12467     0AFC  0020               	movlb	0	; select bank0
 12468     0AFD  082A               	movf	?_div+1,w
 12469     0AFE  0021               	movlb	1	; select bank1
 12470     0AFF  00BF               	movwf	(_res+1)^(0+128)
 12471     0B00  0020               	movlb	0	; select bank0
 12472     0B01  0829               	movf	?_div,w
 12473     0B02  0021               	movlb	1	; select bank1
 12474     0B03  00BE               	movwf	_res^(0+128)
 12475     0B04                     l4807:
 12476                           
 12477                           ;main.c: 142: REG[i]=res.quot*16+res.rem;
 12478     0B04  0020               	movlb	0	; select bank0
 12479     0B05  0833               	movf	Clock_set@i,w
 12480     0B06  3EE1               	addlw	(low (_REG| 0))& (0+255)
 12481     0B07  0086               	movwf	6
 12482     0B08  0187               	clrf	7
 12483     0B09  0021               	movlb	1	; select bank1
 12484     0B0A  0840               	movf	(_res^(0+128)+2),w
 12485     0B0B  0020               	movlb	0	; select bank0
 12486     0B0C  00B1               	movwf	??_Clock_set
 12487     0B0D  3003               	movlw	3
 12488     0B0E                     u3865:
 12489     0B0E  35B1               	lslf	??_Clock_set,f
 12490     0B0F  3EFF               	addlw	-1
 12491     0B10  1D03               	skipz
 12492     0B11  2B0E               	goto	u3865
 12493     0B12  3531               	lslf	??_Clock_set,w
 12494     0B13  0021               	movlb	1	; select bank1
 12495     0B14  073E               	addwf	_res^(0+128),w
 12496     0B15  0081               	movwf	1
 12497     0B16                     l4809:
 12498     0B16  3001               	movlw	1
 12499     0B17  0020               	movlb	0	; select bank0
 12500     0B18  07B3               	addwf	Clock_set@i,f
 12501     0B19  3000               	movlw	0
 12502     0B1A  3DB4               	addwfc	Clock_set@i+1,f
 12503     0B1B                     l4811:
 12504     0B1B  0834               	movf	Clock_set@i+1,w
 12505     0B1C  3A80               	xorlw	128
 12506     0B1D  00B1               	movwf	??_Clock_set
 12507     0B1E  3080               	movlw	128
 12508     0B1F  0231               	subwf	??_Clock_set,w
 12509     0B20  1D03               	skipz
 12510     0B21  2B24               	goto	u3875
 12511     0B22  3008               	movlw	8
 12512     0B23  0233               	subwf	Clock_set@i,w
 12513     0B24                     u3875:
 12514     0B24  1C03               	skipc
 12515     0B25  2B27               	goto	u3871
 12516     0B26  2B28               	goto	u3870
 12517     0B27                     u3871:
 12518     0B27  2ADA               	goto	l4805
 12519     0B28                     u3870:
 12520     0B28                     l4813:
 12521                           
 12522                           ;main.c: 143: };main.c: 145: Time_data_write();
 12523     0B28  3187  27AE  318A   	fcall	_Time_data_write
 12524     0B2B                     l960:
 12525     0B2B  0008               	return
 12526     0B2C                     __end_of_Clock_set:
 12527                           
 12528                           	psect	text36
 12529     14E2                     __ptext36:	
 12530 ;; *************** function ___bmul *****************
 12531 ;; Defined at:
 12532 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c90\common\Umul8.c"
 12533 ;; Parameters:    Size  Location     Type
 12534 ;;  multiplier      1    wreg     unsigned char 
 12535 ;;  multiplicand    1    0[BANK0 ] unsigned char 
 12536 ;; Auto vars:     Size  Location     Type
 12537 ;;  multiplier      1    3[BANK0 ] unsigned char 
 12538 ;;  product         1    2[BANK0 ] unsigned char 
 12539 ;; Return value:  Size  Location     Type
 12540 ;;                  1    wreg      unsigned char 
 12541 ;; Registers used:
 12542 ;;		wreg, status,2, status,0
 12543 ;; Tracked objects:
 12544 ;;		On entry : 0/0
 12545 ;;		On exit  : 0/0
 12546 ;;		Unchanged: 0/0
 12547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12548 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12549 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12550 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12551 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12552 ;;Total ram usage:        4 bytes
 12553 ;; Hardware stack levels used: 1
 12554 ;; Hardware stack levels required when called: 7
 12555 ;; This function calls:
 12556 ;;		Nothing
 12557 ;; This function is called by:
 12558 ;;		_Clock_set
 12559 ;;		_Time_Adj
 12560 ;;		_Alm_Adj
 12561 ;;		_main
 12562 ;; This function uses a non-reentrant model
 12563 ;;
 12564                           
 12565     14E2                     ___bmul:	
 12566                           ;psect for function ___bmul
 12567                           
 12568                           
 12569                           ;incstack = 0
 12570                           ; Regs used in ___bmul: [wreg+status,2+status,0]
 12571                           ;___bmul@multiplier stored from wreg
 12572     14E2  0020               	movlb	0	; select bank0
 12573     14E3  00A3               	movwf	___bmul@multiplier
 12574     14E4                     l4763:
 12575     14E4  01A2               	clrf	___bmul@product
 12576     14E5                     l4765:
 12577     14E5  1C23               	btfss	___bmul@multiplier,0
 12578     14E6  2CE8               	goto	u3821
 12579     14E7  2CE9               	goto	u3820
 12580     14E8                     u3821:
 12581     14E8  2CED               	goto	l4769
 12582     14E9                     u3820:
 12583     14E9                     l4767:
 12584     14E9  0820               	movf	___bmul@multiplicand,w
 12585     14EA  00A1               	movwf	??___bmul
 12586     14EB  0821               	movf	??___bmul,w
 12587     14EC  07A2               	addwf	___bmul@product,f
 12588     14ED                     l4769:
 12589     14ED  1003               	clrc
 12590     14EE  0DA0               	rlf	___bmul@multiplicand,f
 12591     14EF                     l4771:
 12592     14EF  1003               	clrc
 12593     14F0  0CA3               	rrf	___bmul@multiplier,f
 12594     14F1  0823               	movf	___bmul@multiplier,w
 12595     14F2  1D03               	btfss	3,2
 12596     14F3  2CF5               	goto	u3831
 12597     14F4  2CF6               	goto	u3830
 12598     14F5                     u3831:
 12599     14F5  2CE5               	goto	l4765
 12600     14F6                     u3830:
 12601     14F6                     l4773:
 12602     14F6  0822               	movf	___bmul@product,w
 12603     14F7                     l1267:
 12604     14F7  0008               	return
 12605     14F8                     __end_of___bmul:
 12606                           
 12607                           	psect	text37
 12608     07AE                     __ptext37:	
 12609 ;; *************** function _Time_data_write *****************
 12610 ;; Defined at:
 12611 ;;		line 98 in file "main.c"
 12612 ;; Parameters:    Size  Location     Type
 12613 ;;		None
 12614 ;; Auto vars:     Size  Location     Type
 12615 ;;		None
 12616 ;; Return value:  Size  Location     Type
 12617 ;;                  1    wreg      void 
 12618 ;; Registers used:
 12619 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12620 ;; Tracked objects:
 12621 ;;		On entry : 0/0
 12622 ;;		On exit  : 0/0
 12623 ;;		Unchanged: 0/0
 12624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12628 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12629 ;;Total ram usage:        0 bytes
 12630 ;; Hardware stack levels used: 1
 12631 ;; Hardware stack levels required when called: 11
 12632 ;; This function calls:
 12633 ;;		_I2C_Write1ByteRegister
 12634 ;; This function is called by:
 12635 ;;		_Clock_set
 12636 ;;		_main
 12637 ;; This function uses a non-reentrant model
 12638 ;;
 12639                           
 12640     07AE                     _Time_data_write:	
 12641                           ;psect for function _Time_data_write
 12642                           
 12643     07AE                     l4577:	
 12644                           ;incstack = 0
 12645                           ; Regs used in _Time_data_write: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12646                           
 12647                           
 12648                           ;main.c: 100: I2C_Write1ByteRegister(0x32,0x00,REG[1]);
 12649     07AE  0020               	movlb	0	; select bank0
 12650     07AF  01A8               	clrf	I2C_Write1ByteRegister@reg
 12651     07B0  0021               	movlb	1	; select bank1
 12652     07B1  0862               	movf	(_REG^(0+128)+1),w
 12653     07B2  0020               	movlb	0	; select bank0
 12654     07B3  00A9               	movwf	I2C_Write1ByteRegister@data
 12655     07B4  3032               	movlw	50
 12656     07B5  3197  27C8  3187   	fcall	_I2C_Write1ByteRegister
 12657                           
 12658                           ;main.c: 101: I2C_Write1ByteRegister(0x32,0x10,REG[2]);
 12659     07B8  3010               	movlw	16
 12660     07B9  0020               	movlb	0	; select bank0
 12661     07BA  00A8               	movwf	I2C_Write1ByteRegister@reg
 12662     07BB  0021               	movlb	1	; select bank1
 12663     07BC  0863               	movf	(_REG^(0+128)+2),w
 12664     07BD  0020               	movlb	0	; select bank0
 12665     07BE  00A9               	movwf	I2C_Write1ByteRegister@data
 12666     07BF  3032               	movlw	50
 12667     07C0  3197  27C8  3187   	fcall	_I2C_Write1ByteRegister
 12668                           
 12669                           ;main.c: 102: I2C_Write1ByteRegister(0x32,0x20,REG[3]);
 12670     07C3  3020               	movlw	32
 12671     07C4  0020               	movlb	0	; select bank0
 12672     07C5  00A8               	movwf	I2C_Write1ByteRegister@reg
 12673     07C6  0021               	movlb	1	; select bank1
 12674     07C7  0864               	movf	(_REG^(0+128)+3),w
 12675     07C8  0020               	movlb	0	; select bank0
 12676     07C9  00A9               	movwf	I2C_Write1ByteRegister@data
 12677     07CA  3032               	movlw	50
 12678     07CB  3197  27C8  3187   	fcall	_I2C_Write1ByteRegister
 12679                           
 12680                           ;main.c: 103: I2C_Write1ByteRegister(0x32,0x30,REG[4]);
 12681     07CE  3030               	movlw	48
 12682     07CF  0020               	movlb	0	; select bank0
 12683     07D0  00A8               	movwf	I2C_Write1ByteRegister@reg
 12684     07D1  0021               	movlb	1	; select bank1
 12685     07D2  0865               	movf	(_REG^(0+128)+4),w
 12686     07D3  0020               	movlb	0	; select bank0
 12687     07D4  00A9               	movwf	I2C_Write1ByteRegister@data
 12688     07D5  3032               	movlw	50
 12689     07D6  3197  27C8  3187   	fcall	_I2C_Write1ByteRegister
 12690                           
 12691                           ;main.c: 104: I2C_Write1ByteRegister(0x32,0x40,REG[5]);
 12692     07D9  3040               	movlw	64
 12693     07DA  0020               	movlb	0	; select bank0
 12694     07DB  00A8               	movwf	I2C_Write1ByteRegister@reg
 12695     07DC  0021               	movlb	1	; select bank1
 12696     07DD  0866               	movf	(_REG^(0+128)+5),w
 12697     07DE  0020               	movlb	0	; select bank0
 12698     07DF  00A9               	movwf	I2C_Write1ByteRegister@data
 12699     07E0  3032               	movlw	50
 12700     07E1  3197  27C8  3187   	fcall	_I2C_Write1ByteRegister
 12701                           
 12702                           ;main.c: 105: I2C_Write1ByteRegister(0x32,0x50,REG[6]);
 12703     07E4  3050               	movlw	80
 12704     07E5  0020               	movlb	0	; select bank0
 12705     07E6  00A8               	movwf	I2C_Write1ByteRegister@reg
 12706     07E7  0021               	movlb	1	; select bank1
 12707     07E8  0867               	movf	(_REG^(0+128)+6),w
 12708     07E9  0020               	movlb	0	; select bank0
 12709     07EA  00A9               	movwf	I2C_Write1ByteRegister@data
 12710     07EB  3032               	movlw	50
 12711     07EC  3197  27C8  3187   	fcall	_I2C_Write1ByteRegister
 12712                           
 12713                           ;main.c: 106: I2C_Write1ByteRegister(0x32,0x60,REG[7]);
 12714     07EF  3060               	movlw	96
 12715     07F0  0020               	movlb	0	; select bank0
 12716     07F1  00A8               	movwf	I2C_Write1ByteRegister@reg
 12717     07F2  0021               	movlb	1	; select bank1
 12718     07F3  0868               	movf	(_REG^(0+128)+7),w
 12719     07F4  0020               	movlb	0	; select bank0
 12720     07F5  00A9               	movwf	I2C_Write1ByteRegister@data
 12721     07F6  3032               	movlw	50
 12722     07F7  3197  27C8  3187   	fcall	_I2C_Write1ByteRegister
 12723     07FA                     l946:
 12724     07FA  0008               	return
 12725     07FB                     __end_of_Time_data_write:
 12726                           
 12727                           	psect	text38
 12728     0B8C                     __ptext38:	
 12729 ;; *************** function _Alarm_set *****************
 12730 ;; Defined at:
 12731 ;;		line 126 in file "main.c"
 12732 ;; Parameters:    Size  Location     Type
 12733 ;;		None
 12734 ;; Auto vars:     Size  Location     Type
 12735 ;;		None
 12736 ;; Return value:  Size  Location     Type
 12737 ;;                  1    wreg      void 
 12738 ;; Registers used:
 12739 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12740 ;; Tracked objects:
 12741 ;;		On entry : 0/0
 12742 ;;		On exit  : 0/0
 12743 ;;		Unchanged: 0/0
 12744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12747 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12748 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12749 ;;Total ram usage:        2 bytes
 12750 ;; Hardware stack levels used: 1
 12751 ;; Hardware stack levels required when called: 12
 12752 ;; This function calls:
 12753 ;;		_ALM_set
 12754 ;;		_div
 12755 ;; This function is called by:
 12756 ;;		_main
 12757 ;; This function uses a non-reentrant model
 12758 ;;
 12759                           
 12760     0B8C                     _Alarm_set:	
 12761                           ;psect for function _Alarm_set
 12762                           
 12763     0B8C                     l4789:	
 12764                           ;incstack = 0
 12765                           ; Regs used in _Alarm_set: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12766                           
 12767                           
 12768                           ;main.c: 128: res=div(alm_settei[0][0],10);
 12769     0B8C  0022               	movlb	2	; select bank2
 12770     0B8D  0838               	movf	_alm_settei^(0+256),w
 12771     0B8E  0020               	movlb	0	; select bank0
 12772     0B8F  00B1               	movwf	??_Alarm_set
 12773     0B90  01B2               	clrf	??_Alarm_set+1
 12774     0B91  0831               	movf	??_Alarm_set,w
 12775     0B92  00A9               	movwf	div@number
 12776     0B93  0832               	movf	??_Alarm_set+1,w
 12777     0B94  00AA               	movwf	div@number+1
 12778     0B95  300A               	movlw	10
 12779     0B96  00AB               	movwf	div@denom
 12780     0B97  3000               	movlw	0
 12781     0B98  00AC               	movwf	div@denom+1
 12782     0B99  3196  26DD  318B   	fcall	_div
 12783     0B9C  0020               	movlb	0	; select bank0
 12784     0B9D  082C               	movf	?_div+3,w
 12785     0B9E  0021               	movlb	1	; select bank1
 12786     0B9F  00C1               	movwf	(_res+3)^(0+128)
 12787     0BA0  0020               	movlb	0	; select bank0
 12788     0BA1  082B               	movf	?_div+2,w
 12789     0BA2  0021               	movlb	1	; select bank1
 12790     0BA3  00C0               	movwf	(_res+2)^(0+128)
 12791     0BA4  0020               	movlb	0	; select bank0
 12792     0BA5  082A               	movf	?_div+1,w
 12793     0BA6  0021               	movlb	1	; select bank1
 12794     0BA7  00BF               	movwf	(_res+1)^(0+128)
 12795     0BA8  0020               	movlb	0	; select bank0
 12796     0BA9  0829               	movf	?_div,w
 12797     0BAA  0021               	movlb	1	; select bank1
 12798     0BAB  00BE               	movwf	_res^(0+128)
 12799     0BAC                     l4791:
 12800                           
 12801                           ;main.c: 129: ALM_M=res.quot*16+res.rem;
 12802     0BAC  0840               	movf	(_res^(0+128)+2),w
 12803     0BAD  0020               	movlb	0	; select bank0
 12804     0BAE  00B1               	movwf	??_Alarm_set
 12805     0BAF  3003               	movlw	3
 12806     0BB0                     u3845:
 12807     0BB0  35B1               	lslf	??_Alarm_set,f
 12808     0BB1  3EFF               	addlw	-1
 12809     0BB2  1D03               	skipz
 12810     0BB3  2BB0               	goto	u3845
 12811     0BB4  3531               	lslf	??_Alarm_set,w
 12812     0BB5  0021               	movlb	1	; select bank1
 12813     0BB6  073E               	addwf	_res^(0+128),w
 12814     0BB7  00D8               	movwf	_ALM_M^(0+128)
 12815     0BB8                     l4793:
 12816                           
 12817                           ;main.c: 130: res=div(alm_settei[1][0],10);
 12818     0BB8  0022               	movlb	2	; select bank2
 12819     0BB9  083B               	movf	(_alm_settei^(0+256)+3),w
 12820     0BBA  0020               	movlb	0	; select bank0
 12821     0BBB  00B1               	movwf	??_Alarm_set
 12822     0BBC  01B2               	clrf	??_Alarm_set+1
 12823     0BBD  0831               	movf	??_Alarm_set,w
 12824     0BBE  00A9               	movwf	div@number
 12825     0BBF  0832               	movf	??_Alarm_set+1,w
 12826     0BC0  00AA               	movwf	div@number+1
 12827     0BC1  300A               	movlw	10
 12828     0BC2  00AB               	movwf	div@denom
 12829     0BC3  3000               	movlw	0
 12830     0BC4  00AC               	movwf	div@denom+1
 12831     0BC5  3196  26DD  318B   	fcall	_div
 12832     0BC8  0020               	movlb	0	; select bank0
 12833     0BC9  082C               	movf	?_div+3,w
 12834     0BCA  0021               	movlb	1	; select bank1
 12835     0BCB  00C1               	movwf	(_res+3)^(0+128)
 12836     0BCC  0020               	movlb	0	; select bank0
 12837     0BCD  082B               	movf	?_div+2,w
 12838     0BCE  0021               	movlb	1	; select bank1
 12839     0BCF  00C0               	movwf	(_res+2)^(0+128)
 12840     0BD0  0020               	movlb	0	; select bank0
 12841     0BD1  082A               	movf	?_div+1,w
 12842     0BD2  0021               	movlb	1	; select bank1
 12843     0BD3  00BF               	movwf	(_res+1)^(0+128)
 12844     0BD4  0020               	movlb	0	; select bank0
 12845     0BD5  0829               	movf	?_div,w
 12846     0BD6  0021               	movlb	1	; select bank1
 12847     0BD7  00BE               	movwf	_res^(0+128)
 12848                           
 12849                           ;main.c: 131: ALM_H=res.quot*16+res.rem;
 12850     0BD8  0840               	movf	(_res^(0+128)+2),w
 12851     0BD9  0020               	movlb	0	; select bank0
 12852     0BDA  00B1               	movwf	??_Alarm_set
 12853     0BDB  3003               	movlw	3
 12854     0BDC                     u3855:
 12855     0BDC  35B1               	lslf	??_Alarm_set,f
 12856     0BDD  3EFF               	addlw	-1
 12857     0BDE  1D03               	skipz
 12858     0BDF  2BDC               	goto	u3855
 12859     0BE0  3531               	lslf	??_Alarm_set,w
 12860     0BE1  0021               	movlb	1	; select bank1
 12861     0BE2  073E               	addwf	_res^(0+128),w
 12862     0BE3  00D7               	movwf	_ALM_H^(0+128)
 12863     0BE4                     l4795:
 12864                           
 12865                           ;main.c: 132: ALM_set(ALM_M,ALM_H);
 12866     0BE4  0857               	movf	_ALM_H^(0+128),w
 12867     0BE5  0020               	movlb	0	; select bank0
 12868     0BE6  00AB               	movwf	ALM_set@HH
 12869     0BE7  0021               	movlb	1	; select bank1
 12870     0BE8  0858               	movf	_ALM_M^(0+128),w
 12871     0BE9  3197  2735  318B   	fcall	_ALM_set
 12872     0BEC                     l4797:
 12873                           
 12874                           ;main.c: 133: alm_active=1;
 12875     0BEC  0021               	movlb	1	; select bank1
 12876     0BED  01DA               	clrf	_alm_active^(0+128)
 12877     0BEE  0ADA               	incf	_alm_active^(0+128),f
 12878     0BEF                     l955:
 12879     0BEF  0008               	return
 12880     0BF0                     __end_of_Alarm_set:
 12881                           
 12882                           	psect	text39
 12883     16DD                     __ptext39:	
 12884 ;; *************** function _div *****************
 12885 ;; Defined at:
 12886 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c90\common\cdiv.c"
 12887 ;; Parameters:    Size  Location     Type
 12888 ;;  number          2    9[BANK0 ] int 
 12889 ;;  denom           2   11[BANK0 ] int 
 12890 ;; Auto vars:     Size  Location     Type
 12891 ;;  rv              4   13[BANK0 ] struct .
 12892 ;; Return value:  Size  Location     Type
 12893 ;;                  4    9[BANK0 ] struct .
 12894 ;; Registers used:
 12895 ;;		wreg, status,2, status,0, pclath, cstack
 12896 ;; Tracked objects:
 12897 ;;		On entry : 0/0
 12898 ;;		On exit  : 0/0
 12899 ;;		Unchanged: 0/0
 12900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12901 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12902 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12904 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12905 ;;Total ram usage:        8 bytes
 12906 ;; Hardware stack levels used: 1
 12907 ;; Hardware stack levels required when called: 8
 12908 ;; This function calls:
 12909 ;;		___awdiv
 12910 ;;		___awmod
 12911 ;; This function is called by:
 12912 ;;		_Alarm_set
 12913 ;;		_Clock_set
 12914 ;; This function uses a non-reentrant model
 12915 ;;
 12916                           
 12917     16DD                     _div:	
 12918                           ;psect for function _div
 12919                           
 12920     16DD                     l4581:	
 12921                           ;incstack = 0
 12922                           ; Regs used in _div: [wreg+status,2+status,0+pclath+cstack]
 12923                           
 12924     16DD  0020               	movlb	0	; select bank0
 12925     16DE  082C               	movf	div@denom+1,w
 12926     16DF  00A1               	movwf	___awdiv@divisor+1
 12927     16E0  082B               	movf	div@denom,w
 12928     16E1  00A0               	movwf	___awdiv@divisor
 12929     16E2  082A               	movf	div@number+1,w
 12930     16E3  00A3               	movwf	___awdiv@dividend+1
 12931     16E4  0829               	movf	div@number,w
 12932     16E5  00A2               	movwf	___awdiv@dividend
 12933     16E6  318B  232C  3196   	fcall	___awdiv
 12934     16E9  0020               	movlb	0	; select bank0
 12935     16EA  0821               	movf	?___awdiv+1,w
 12936     16EB  00B0               	movwf	div@rv+3
 12937     16EC  0820               	movf	?___awdiv,w
 12938     16ED  00AF               	movwf	div@rv+2
 12939     16EE  082C               	movf	div@denom+1,w
 12940     16EF  00A1               	movwf	___awmod@divisor+1
 12941     16F0  082B               	movf	div@denom,w
 12942     16F1  00A0               	movwf	___awmod@divisor
 12943     16F2  082A               	movf	div@number+1,w
 12944     16F3  00A3               	movwf	___awmod@dividend+1
 12945     16F4  0829               	movf	div@number,w
 12946     16F5  00A2               	movwf	___awmod@dividend
 12947     16F6  318A  222E  3196   	fcall	___awmod
 12948     16F9  0020               	movlb	0	; select bank0
 12949     16FA  0821               	movf	?___awmod+1,w
 12950     16FB  00AE               	movwf	div@rv+1
 12951     16FC  0820               	movf	?___awmod,w
 12952     16FD  00AD               	movwf	div@rv
 12953     16FE                     l4583:
 12954     16FE  0830               	movf	div@rv+3,w
 12955     16FF  00AC               	movwf	?_div+3
 12956     1700  082F               	movf	div@rv+2,w
 12957     1701  00AB               	movwf	?_div+2
 12958     1702  082E               	movf	div@rv+1,w
 12959     1703  00AA               	movwf	?_div+1
 12960     1704  082D               	movf	div@rv,w
 12961     1705  00A9               	movwf	?_div
 12962     1706                     l1692:
 12963     1706  0008               	return
 12964     1707                     __end_of_div:
 12965                           
 12966                           	psect	text40
 12967     0A2E                     __ptext40:	
 12968 ;; *************** function ___awmod *****************
 12969 ;; Defined at:
 12970 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c90\common\awmod.c"
 12971 ;; Parameters:    Size  Location     Type
 12972 ;;  divisor         2    0[BANK0 ] int 
 12973 ;;  dividend        2    2[BANK0 ] int 
 12974 ;; Auto vars:     Size  Location     Type
 12975 ;;  sign            1    6[BANK0 ] unsigned char 
 12976 ;;  counter         1    5[BANK0 ] unsigned char 
 12977 ;; Return value:  Size  Location     Type
 12978 ;;                  2    0[BANK0 ] int 
 12979 ;; Registers used:
 12980 ;;		wreg, status,2, status,0
 12981 ;; Tracked objects:
 12982 ;;		On entry : 0/0
 12983 ;;		On exit  : 0/0
 12984 ;;		Unchanged: 0/0
 12985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12986 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12987 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12988 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12989 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12990 ;;Total ram usage:        7 bytes
 12991 ;; Hardware stack levels used: 1
 12992 ;; Hardware stack levels required when called: 7
 12993 ;; This function calls:
 12994 ;;		Nothing
 12995 ;; This function is called by:
 12996 ;;		_div
 12997 ;; This function uses a non-reentrant model
 12998 ;;
 12999                           
 13000     0A2E                     ___awmod:	
 13001                           ;psect for function ___awmod
 13002                           
 13003     0A2E                     l4351:	
 13004                           ;incstack = 0
 13005                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 13006                           
 13007     0A2E  0020               	movlb	0	; select bank0
 13008     0A2F  01A6               	clrf	___awmod@sign
 13009     0A30                     l4353:
 13010     0A30  1FA3               	btfss	___awmod@dividend+1,7
 13011     0A31  2A33               	goto	u3281
 13012     0A32  2A34               	goto	u3280
 13013     0A33                     u3281:
 13014     0A33  2A3B               	goto	l4359
 13015     0A34                     u3280:
 13016     0A34                     l4355:
 13017     0A34  09A2               	comf	___awmod@dividend,f
 13018     0A35  09A3               	comf	___awmod@dividend+1,f
 13019     0A36  0AA2               	incf	___awmod@dividend,f
 13020     0A37  1903               	skipnz
 13021     0A38  0AA3               	incf	___awmod@dividend+1,f
 13022     0A39                     l4357:
 13023     0A39  01A6               	clrf	___awmod@sign
 13024     0A3A  0AA6               	incf	___awmod@sign,f
 13025     0A3B                     l4359:
 13026     0A3B  1FA1               	btfss	___awmod@divisor+1,7
 13027     0A3C  2A3E               	goto	u3291
 13028     0A3D  2A3F               	goto	u3290
 13029     0A3E                     u3291:
 13030     0A3E  2A44               	goto	l4363
 13031     0A3F                     u3290:
 13032     0A3F                     l4361:
 13033     0A3F  09A0               	comf	___awmod@divisor,f
 13034     0A40  09A1               	comf	___awmod@divisor+1,f
 13035     0A41  0AA0               	incf	___awmod@divisor,f
 13036     0A42  1903               	skipnz
 13037     0A43  0AA1               	incf	___awmod@divisor+1,f
 13038     0A44                     l4363:
 13039     0A44  0820               	movf	___awmod@divisor,w
 13040     0A45  0421               	iorwf	___awmod@divisor+1,w
 13041     0A46  1903               	btfsc	3,2
 13042     0A47  2A49               	goto	u3301
 13043     0A48  2A4A               	goto	u3300
 13044     0A49                     u3301:
 13045     0A49  2A73               	goto	l4381
 13046     0A4A                     u3300:
 13047     0A4A                     l4365:
 13048     0A4A  01A5               	clrf	___awmod@counter
 13049     0A4B  0AA5               	incf	___awmod@counter,f
 13050     0A4C  2A56               	goto	l4371
 13051     0A4D                     l4367:
 13052     0A4D  3001               	movlw	1
 13053     0A4E                     u3315:
 13054     0A4E  35A0               	lslf	___awmod@divisor,f
 13055     0A4F  0DA1               	rlf	___awmod@divisor+1,f
 13056     0A50  0B89               	decfsz	9,f
 13057     0A51  2A4E               	goto	u3315
 13058     0A52                     l4369:
 13059     0A52  3001               	movlw	1
 13060     0A53  00A4               	movwf	??___awmod
 13061     0A54  0824               	movf	??___awmod,w
 13062     0A55  07A5               	addwf	___awmod@counter,f
 13063     0A56                     l4371:
 13064     0A56  1FA1               	btfss	___awmod@divisor+1,7
 13065     0A57  2A59               	goto	u3321
 13066     0A58  2A5A               	goto	u3320
 13067     0A59                     u3321:
 13068     0A59  2A4D               	goto	l4367
 13069     0A5A                     u3320:
 13070     0A5A                     l4373:
 13071     0A5A  0821               	movf	___awmod@divisor+1,w
 13072     0A5B  0223               	subwf	___awmod@dividend+1,w
 13073     0A5C  1D03               	skipz
 13074     0A5D  2A60               	goto	u3335
 13075     0A5E  0820               	movf	___awmod@divisor,w
 13076     0A5F  0222               	subwf	___awmod@dividend,w
 13077     0A60                     u3335:
 13078     0A60  1C03               	skipc
 13079     0A61  2A63               	goto	u3331
 13080     0A62  2A64               	goto	u3330
 13081     0A63                     u3331:
 13082     0A63  2A68               	goto	l4377
 13083     0A64                     u3330:
 13084     0A64                     l4375:
 13085     0A64  0820               	movf	___awmod@divisor,w
 13086     0A65  02A2               	subwf	___awmod@dividend,f
 13087     0A66  0821               	movf	___awmod@divisor+1,w
 13088     0A67  3BA3               	subwfb	___awmod@dividend+1,f
 13089     0A68                     l4377:
 13090     0A68  3001               	movlw	1
 13091     0A69                     u3345:
 13092     0A69  36A1               	lsrf	___awmod@divisor+1,f
 13093     0A6A  0CA0               	rrf	___awmod@divisor,f
 13094     0A6B  0B89               	decfsz	9,f
 13095     0A6C  2A69               	goto	u3345
 13096     0A6D                     l4379:
 13097     0A6D  3001               	movlw	1
 13098     0A6E  02A5               	subwf	___awmod@counter,f
 13099     0A6F  1D03               	btfss	3,2
 13100     0A70  2A72               	goto	u3351
 13101     0A71  2A73               	goto	u3350
 13102     0A72                     u3351:
 13103     0A72  2A5A               	goto	l4373
 13104     0A73                     u3350:
 13105     0A73                     l4381:
 13106     0A73  0826               	movf	___awmod@sign,w
 13107     0A74  1903               	btfsc	3,2
 13108     0A75  2A77               	goto	u3361
 13109     0A76  2A78               	goto	u3360
 13110     0A77                     u3361:
 13111     0A77  2A7D               	goto	l4385
 13112     0A78                     u3360:
 13113     0A78                     l4383:
 13114     0A78  09A2               	comf	___awmod@dividend,f
 13115     0A79  09A3               	comf	___awmod@dividend+1,f
 13116     0A7A  0AA2               	incf	___awmod@dividend,f
 13117     0A7B  1903               	skipnz
 13118     0A7C  0AA3               	incf	___awmod@dividend+1,f
 13119     0A7D                     l4385:
 13120     0A7D  0823               	movf	___awmod@dividend+1,w
 13121     0A7E  00A1               	movwf	?___awmod+1
 13122     0A7F  0822               	movf	___awmod@dividend,w
 13123     0A80  00A0               	movwf	?___awmod
 13124     0A81                     l1407:
 13125     0A81  0008               	return
 13126     0A82                     __end_of___awmod:
 13127                           
 13128                           	psect	text41
 13129     0B2C                     __ptext41:	
 13130 ;; *************** function ___awdiv *****************
 13131 ;; Defined at:
 13132 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c90\common\awdiv.c"
 13133 ;; Parameters:    Size  Location     Type
 13134 ;;  divisor         2    0[BANK0 ] int 
 13135 ;;  dividend        2    2[BANK0 ] int 
 13136 ;; Auto vars:     Size  Location     Type
 13137 ;;  quotient        2    7[BANK0 ] int 
 13138 ;;  sign            1    6[BANK0 ] unsigned char 
 13139 ;;  counter         1    5[BANK0 ] unsigned char 
 13140 ;; Return value:  Size  Location     Type
 13141 ;;                  2    0[BANK0 ] int 
 13142 ;; Registers used:
 13143 ;;		wreg, status,2, status,0
 13144 ;; Tracked objects:
 13145 ;;		On entry : 0/0
 13146 ;;		On exit  : 0/0
 13147 ;;		Unchanged: 0/0
 13148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13149 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13150 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13151 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13152 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13153 ;;Total ram usage:        9 bytes
 13154 ;; Hardware stack levels used: 1
 13155 ;; Hardware stack levels required when called: 7
 13156 ;; This function calls:
 13157 ;;		Nothing
 13158 ;; This function is called by:
 13159 ;;		_div
 13160 ;; This function uses a non-reentrant model
 13161 ;;
 13162                           
 13163     0B2C                     ___awdiv:	
 13164                           ;psect for function ___awdiv
 13165                           
 13166     0B2C                     l4307:	
 13167                           ;incstack = 0
 13168                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 13169                           
 13170     0B2C  0020               	movlb	0	; select bank0
 13171     0B2D  01A6               	clrf	___awdiv@sign
 13172     0B2E                     l4309:
 13173     0B2E  1FA1               	btfss	___awdiv@divisor+1,7
 13174     0B2F  2B31               	goto	u3181
 13175     0B30  2B32               	goto	u3180
 13176     0B31                     u3181:
 13177     0B31  2B39               	goto	l4315
 13178     0B32                     u3180:
 13179     0B32                     l4311:
 13180     0B32  09A0               	comf	___awdiv@divisor,f
 13181     0B33  09A1               	comf	___awdiv@divisor+1,f
 13182     0B34  0AA0               	incf	___awdiv@divisor,f
 13183     0B35  1903               	skipnz
 13184     0B36  0AA1               	incf	___awdiv@divisor+1,f
 13185     0B37                     l4313:
 13186     0B37  01A6               	clrf	___awdiv@sign
 13187     0B38  0AA6               	incf	___awdiv@sign,f
 13188     0B39                     l4315:
 13189     0B39  1FA3               	btfss	___awdiv@dividend+1,7
 13190     0B3A  2B3C               	goto	u3191
 13191     0B3B  2B3D               	goto	u3190
 13192     0B3C                     u3191:
 13193     0B3C  2B46               	goto	l4321
 13194     0B3D                     u3190:
 13195     0B3D                     l4317:
 13196     0B3D  09A2               	comf	___awdiv@dividend,f
 13197     0B3E  09A3               	comf	___awdiv@dividend+1,f
 13198     0B3F  0AA2               	incf	___awdiv@dividend,f
 13199     0B40  1903               	skipnz
 13200     0B41  0AA3               	incf	___awdiv@dividend+1,f
 13201     0B42                     l4319:
 13202     0B42  3001               	movlw	1
 13203     0B43  00A4               	movwf	??___awdiv
 13204     0B44  0824               	movf	??___awdiv,w
 13205     0B45  06A6               	xorwf	___awdiv@sign,f
 13206     0B46                     l4321:
 13207     0B46  01A7               	clrf	___awdiv@quotient
 13208     0B47  01A8               	clrf	___awdiv@quotient+1
 13209     0B48                     l4323:
 13210     0B48  0820               	movf	___awdiv@divisor,w
 13211     0B49  0421               	iorwf	___awdiv@divisor+1,w
 13212     0B4A  1903               	btfsc	3,2
 13213     0B4B  2B4D               	goto	u3201
 13214     0B4C  2B4E               	goto	u3200
 13215     0B4D                     u3201:
 13216     0B4D  2B7D               	goto	l4343
 13217     0B4E                     u3200:
 13218     0B4E                     l4325:
 13219     0B4E  01A5               	clrf	___awdiv@counter
 13220     0B4F  0AA5               	incf	___awdiv@counter,f
 13221     0B50  2B5A               	goto	l4331
 13222     0B51                     l4327:
 13223     0B51  3001               	movlw	1
 13224     0B52                     u3215:
 13225     0B52  35A0               	lslf	___awdiv@divisor,f
 13226     0B53  0DA1               	rlf	___awdiv@divisor+1,f
 13227     0B54  0B89               	decfsz	9,f
 13228     0B55  2B52               	goto	u3215
 13229     0B56                     l4329:
 13230     0B56  3001               	movlw	1
 13231     0B57  00A4               	movwf	??___awdiv
 13232     0B58  0824               	movf	??___awdiv,w
 13233     0B59  07A5               	addwf	___awdiv@counter,f
 13234     0B5A                     l4331:
 13235     0B5A  1FA1               	btfss	___awdiv@divisor+1,7
 13236     0B5B  2B5D               	goto	u3221
 13237     0B5C  2B5E               	goto	u3220
 13238     0B5D                     u3221:
 13239     0B5D  2B51               	goto	l4327
 13240     0B5E                     u3220:
 13241     0B5E                     l4333:
 13242     0B5E  3001               	movlw	1
 13243     0B5F                     u3235:
 13244     0B5F  35A7               	lslf	___awdiv@quotient,f
 13245     0B60  0DA8               	rlf	___awdiv@quotient+1,f
 13246     0B61  0B89               	decfsz	9,f
 13247     0B62  2B5F               	goto	u3235
 13248     0B63  0821               	movf	___awdiv@divisor+1,w
 13249     0B64  0223               	subwf	___awdiv@dividend+1,w
 13250     0B65  1D03               	skipz
 13251     0B66  2B69               	goto	u3245
 13252     0B67  0820               	movf	___awdiv@divisor,w
 13253     0B68  0222               	subwf	___awdiv@dividend,w
 13254     0B69                     u3245:
 13255     0B69  1C03               	skipc
 13256     0B6A  2B6C               	goto	u3241
 13257     0B6B  2B6D               	goto	u3240
 13258     0B6C                     u3241:
 13259     0B6C  2B72               	goto	l4339
 13260     0B6D                     u3240:
 13261     0B6D                     l4335:
 13262     0B6D  0820               	movf	___awdiv@divisor,w
 13263     0B6E  02A2               	subwf	___awdiv@dividend,f
 13264     0B6F  0821               	movf	___awdiv@divisor+1,w
 13265     0B70  3BA3               	subwfb	___awdiv@dividend+1,f
 13266     0B71                     l4337:
 13267     0B71  1427               	bsf	___awdiv@quotient,0
 13268     0B72                     l4339:
 13269     0B72  3001               	movlw	1
 13270     0B73                     u3255:
 13271     0B73  36A1               	lsrf	___awdiv@divisor+1,f
 13272     0B74  0CA0               	rrf	___awdiv@divisor,f
 13273     0B75  0B89               	decfsz	9,f
 13274     0B76  2B73               	goto	u3255
 13275     0B77                     l4341:
 13276     0B77  3001               	movlw	1
 13277     0B78  02A5               	subwf	___awdiv@counter,f
 13278     0B79  1D03               	btfss	3,2
 13279     0B7A  2B7C               	goto	u3261
 13280     0B7B  2B7D               	goto	u3260
 13281     0B7C                     u3261:
 13282     0B7C  2B5E               	goto	l4333
 13283     0B7D                     u3260:
 13284     0B7D                     l4343:
 13285     0B7D  0826               	movf	___awdiv@sign,w
 13286     0B7E  1903               	btfsc	3,2
 13287     0B7F  2B81               	goto	u3271
 13288     0B80  2B82               	goto	u3270
 13289     0B81                     u3271:
 13290     0B81  2B87               	goto	l4347
 13291     0B82                     u3270:
 13292     0B82                     l4345:
 13293     0B82  09A7               	comf	___awdiv@quotient,f
 13294     0B83  09A8               	comf	___awdiv@quotient+1,f
 13295     0B84  0AA7               	incf	___awdiv@quotient,f
 13296     0B85  1903               	skipnz
 13297     0B86  0AA8               	incf	___awdiv@quotient+1,f
 13298     0B87                     l4347:
 13299     0B87  0828               	movf	___awdiv@quotient+1,w
 13300     0B88  00A1               	movwf	?___awdiv+1
 13301     0B89  0827               	movf	___awdiv@quotient,w
 13302     0B8A  00A0               	movwf	?___awdiv
 13303     0B8B                     l1394:
 13304     0B8B  0008               	return
 13305     0B8C                     __end_of___awdiv:
 13306                           
 13307                           	psect	text42
 13308     1735                     __ptext42:	
 13309 ;; *************** function _ALM_set *****************
 13310 ;; Defined at:
 13311 ;;		line 118 in file "main.c"
 13312 ;; Parameters:    Size  Location     Type
 13313 ;;  MM              1    wreg     unsigned char 
 13314 ;;  HH              1   11[BANK0 ] unsigned char 
 13315 ;; Auto vars:     Size  Location     Type
 13316 ;;  MM              1   12[BANK0 ] unsigned char 
 13317 ;; Return value:  Size  Location     Type
 13318 ;;                  1    wreg      void 
 13319 ;; Registers used:
 13320 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13321 ;; Tracked objects:
 13322 ;;		On entry : 0/0
 13323 ;;		On exit  : 0/0
 13324 ;;		Unchanged: 0/0
 13325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13326 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13327 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13329 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13330 ;;Total ram usage:        2 bytes
 13331 ;; Hardware stack levels used: 1
 13332 ;; Hardware stack levels required when called: 11
 13333 ;; This function calls:
 13334 ;;		_I2C_Write1ByteRegister
 13335 ;; This function is called by:
 13336 ;;		_Alarm_set
 13337 ;; This function uses a non-reentrant model
 13338 ;;
 13339                           
 13340     1735                     _ALM_set:	
 13341                           ;psect for function _ALM_set
 13342                           
 13343                           
 13344                           ;incstack = 0
 13345                           ; Regs used in _ALM_set: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13346                           ;ALM_set@MM stored from wreg
 13347     1735  0020               	movlb	0	; select bank0
 13348     1736  00AC               	movwf	ALM_set@MM
 13349     1737                     l4579:
 13350                           
 13351                           ;main.c: 119: I2C_Write1ByteRegister(0x32,0xE0,0x20);
 13352     1737  30E0               	movlw	224
 13353     1738  00A8               	movwf	I2C_Write1ByteRegister@reg
 13354     1739  3020               	movlw	32
 13355     173A  00A9               	movwf	I2C_Write1ByteRegister@data
 13356     173B  3032               	movlw	50
 13357     173C  3197  27C8  3197   	fcall	_I2C_Write1ByteRegister
 13358                           
 13359                           ;main.c: 120: I2C_Write1ByteRegister(0x32,0xB0,MM);
 13360     173F  30B0               	movlw	176
 13361     1740  0020               	movlb	0	; select bank0
 13362     1741  00A8               	movwf	I2C_Write1ByteRegister@reg
 13363     1742  082C               	movf	ALM_set@MM,w
 13364     1743  00A9               	movwf	I2C_Write1ByteRegister@data
 13365     1744  3032               	movlw	50
 13366     1745  3197  27C8  3197   	fcall	_I2C_Write1ByteRegister
 13367                           
 13368                           ;main.c: 121: I2C_Write1ByteRegister(0x32,0xC0,HH);
 13369     1748  30C0               	movlw	192
 13370     1749  0020               	movlb	0	; select bank0
 13371     174A  00A8               	movwf	I2C_Write1ByteRegister@reg
 13372     174B  082B               	movf	ALM_set@HH,w
 13373     174C  00A9               	movwf	I2C_Write1ByteRegister@data
 13374     174D  3032               	movlw	50
 13375     174E  3197  27C8  3197   	fcall	_I2C_Write1ByteRegister
 13376                           
 13377                           ;main.c: 122: I2C_Write1ByteRegister(0x32,0xF0,0x01);
 13378     1751  30F0               	movlw	240
 13379     1752  0020               	movlb	0	; select bank0
 13380     1753  00A8               	movwf	I2C_Write1ByteRegister@reg
 13381     1754  01A9               	clrf	I2C_Write1ByteRegister@data
 13382     1755  0AA9               	incf	I2C_Write1ByteRegister@data,f
 13383     1756  3032               	movlw	50
 13384     1757  3197  27C8  3197   	fcall	_I2C_Write1ByteRegister
 13385                           
 13386                           ;main.c: 123: I2C_Write1ByteRegister(0x32,0xE0,0x60);
 13387     175A  30E0               	movlw	224
 13388     175B  0020               	movlb	0	; select bank0
 13389     175C  00A8               	movwf	I2C_Write1ByteRegister@reg
 13390     175D  3060               	movlw	96
 13391     175E  00A9               	movwf	I2C_Write1ByteRegister@data
 13392     175F  3032               	movlw	50
 13393     1760  3197  27C8  3197   	fcall	_I2C_Write1ByteRegister
 13394     1763                     l952:
 13395     1763  0008               	return
 13396     1764                     __end_of_ALM_set:
 13397                           
 13398                           	psect	text43
 13399     17C8                     __ptext43:	
 13400 ;; *************** function _I2C_Write1ByteRegister *****************
 13401 ;; Defined at:
 13402 ;;		line 91 in file "mcc_generated_files/examples/i2c_master_example.c"
 13403 ;; Parameters:    Size  Location     Type
 13404 ;;  address         1    wreg     unsigned char 
 13405 ;;  reg             1    8[BANK0 ] unsigned char 
 13406 ;;  data            1    9[BANK0 ] unsigned char 
 13407 ;; Auto vars:     Size  Location     Type
 13408 ;;  address         1   10[BANK0 ] unsigned char 
 13409 ;; Return value:  Size  Location     Type
 13410 ;;                  1    wreg      void 
 13411 ;; Registers used:
 13412 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13413 ;; Tracked objects:
 13414 ;;		On entry : 0/0
 13415 ;;		On exit  : 0/0
 13416 ;;		Unchanged: 0/0
 13417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13418 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13419 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13421 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13422 ;;Total ram usage:        3 bytes
 13423 ;; Hardware stack levels used: 1
 13424 ;; Hardware stack levels required when called: 10
 13425 ;; This function calls:
 13426 ;;		_I2C_Close
 13427 ;;		_I2C_MasterWrite
 13428 ;;		_I2C_Open
 13429 ;;		_I2C_SetAddressNackCallback
 13430 ;;		_I2C_SetBuffer
 13431 ;;		_I2C_SetDataCompleteCallback
 13432 ;; This function is called by:
 13433 ;;		_Time_data_write
 13434 ;;		_ALM_set
 13435 ;;		_OLED_cmd
 13436 ;;		_OLED_data
 13437 ;;		_MoveServo
 13438 ;; This function uses a non-reentrant model
 13439 ;;
 13440                           
 13441     17C8                     _I2C_Write1ByteRegister:	
 13442                           ;psect for function _I2C_Write1ByteRegister
 13443                           
 13444                           
 13445                           ;incstack = 0
 13446                           ; Regs used in _I2C_Write1ByteRegister: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
 13447                           ;I2C_Write1ByteRegister@address stored from wreg
 13448     17C8  0020               	movlb	0	; select bank0
 13449     17C9  00AA               	movwf	I2C_Write1ByteRegister@address
 13450     17CA                     l3947:
 13451     17CA                     l3949:	
 13452                           ;i2c_master_example.c: 93: while(!I2C_Open(address));
 13453                           
 13454     17CA  0020               	movlb	0	; select bank0
 13455     17CB  082A               	movf	I2C_Write1ByteRegister@address,w
 13456     17CC  3189  2159  3197   	fcall	_I2C_Open
 13457     17CF  3A00               	xorlw	0
 13458     17D0  1903               	skipnz
 13459     17D1  2FD3               	goto	u2431
 13460     17D2  2FD4               	goto	u2430
 13461     17D3                     u2431:
 13462     17D3  2FCA               	goto	l3949
 13463     17D4                     u2430:
 13464     17D4                     l3951:
 13465                           
 13466                           ;i2c_master_example.c: 94: I2C_SetDataCompleteCallback(wr1RegCompleteHandler,&data);
 13467     17D4  3045               	movlw	low _wr1RegCompleteHandler
 13468     17D5  0020               	movlb	0	; select bank0
 13469     17D6  00A4               	movwf	I2C_SetDataCompleteCallback@cb
 13470     17D7  3014               	movlw	high _wr1RegCompleteHandler
 13471     17D8  00A5               	movwf	I2C_SetDataCompleteCallback@cb+1
 13472     17D9  3029               	movlw	(low (I2C_Write1ByteRegister@data| 0))& (0+255)
 13473     17DA  00A6               	movwf	I2C_SetDataCompleteCallback@ptr
 13474     17DB  3193  23A4  3197   	fcall	_I2C_SetDataCompleteCallback
 13475     17DE                     l3953:
 13476                           
 13477                           ;i2c_master_example.c: 95: I2C_SetBuffer(&reg,1);
 13478     17DE  3028               	movlw	low I2C_Write1ByteRegister@reg
 13479     17DF  0020               	movlb	0	; select bank0
 13480     17E0  00A0               	movwf	I2C_SetBuffer@buffer
 13481     17E1  3000               	movlw	high I2C_Write1ByteRegister@reg
 13482     17E2  00A1               	movwf	I2C_SetBuffer@buffer+1
 13483     17E3  3001               	movlw	1
 13484     17E4  00A2               	movwf	I2C_SetBuffer@bufferSize
 13485     17E5  3000               	movlw	0
 13486     17E6  00A3               	movwf	I2C_SetBuffer@bufferSize+1
 13487     17E7  3195  250E  3197   	fcall	_I2C_SetBuffer
 13488     17EA                     l3955:
 13489                           
 13490                           ;i2c_master_example.c: 96: I2C_SetAddressNackCallback((0),(0));
 13491     17EA  3000               	movlw	0
 13492     17EB  0020               	movlb	0	; select bank0
 13493     17EC  00A4               	movwf	I2C_SetAddressNackCallback@cb
 13494     17ED  00A5               	movwf	I2C_SetAddressNackCallback@cb+1
 13495     17EE  3000               	movlw	0
 13496     17EF  00A6               	movwf	I2C_SetAddressNackCallback@ptr
 13497     17F0  00A7               	movwf	I2C_SetAddressNackCallback@ptr+1
 13498     17F1  3193  2398  3197   	fcall	_I2C_SetAddressNackCallback
 13499                           
 13500                           ;i2c_master_example.c: 97: I2C_MasterWrite();
 13501     17F4  3193  230D  3197   	fcall	_I2C_MasterWrite
 13502     17F7                     l3957:	
 13503                           ;i2c_master_example.c: 98: while(I2C_BUSY == I2C_Close());
 13504                           
 13505     17F7  3195  2588  3197   	fcall	_I2C_Close
 13506     17FA  3A01               	xorlw	1
 13507     17FB  1903               	skipnz
 13508     17FC  2FFE               	goto	u2441
 13509     17FD  2FFF               	goto	u2440
 13510     17FE                     u2441:
 13511     17FE  2FF7               	goto	l3957
 13512     17FF                     u2440:
 13513     17FF                     l53:
 13514     17FF  0008               	return
 13515     1800                     __end_of_I2C_Write1ByteRegister:
 13516                           
 13517                           	psect	text44
 13518     13A4                     __ptext44:	
 13519 ;; *************** function _I2C_SetDataCompleteCallback *****************
 13520 ;; Defined at:
 13521 ;;		line 274 in file "mcc_generated_files/i2c_master.c"
 13522 ;; Parameters:    Size  Location     Type
 13523 ;;  cb              2    4[BANK0 ] PTR FTN(PTR void ,)enum 
 13524 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), rd2RegCompleteHandler(1), 
 13525 ;;		 -> NULL(1), rd1RegCompleteHandler(1), 
 13526 ;;  ptr             1    6[BANK0 ] PTR void 
 13527 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 13528 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 13529 ;; Auto vars:     Size  Location     Type
 13530 ;;		None
 13531 ;; Return value:  Size  Location     Type
 13532 ;;                  1    wreg      void 
 13533 ;; Registers used:
 13534 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13535 ;; Tracked objects:
 13536 ;;		On entry : 0/0
 13537 ;;		On exit  : 0/0
 13538 ;;		Unchanged: 0/0
 13539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13540 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13543 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13544 ;;Total ram usage:        3 bytes
 13545 ;; Hardware stack levels used: 1
 13546 ;; Hardware stack levels required when called: 8
 13547 ;; This function calls:
 13548 ;;		_I2C_SetCallback
 13549 ;; This function is called by:
 13550 ;;		_I2C_Write1ByteRegister
 13551 ;;		_I2C_Read1ByteRegister
 13552 ;;		_I2C_Read2ByteRegister
 13553 ;;		_I2C_Write2ByteRegister
 13554 ;;		_I2C_ReadDataBlock
 13555 ;; This function uses a non-reentrant model
 13556 ;;
 13557                           
 13558     13A4                     _I2C_SetDataCompleteCallback:	
 13559                           ;psect for function _I2C_SetDataCompleteCallback
 13560                           
 13561     13A4                     l3709:	
 13562                           ;incstack = 0
 13563                           ; Regs used in _I2C_SetDataCompleteCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 13564                           
 13565                           
 13566                           ;i2c_master.c: 276: I2C_SetCallback(I2C_DATA_COMPLETE, cb, ptr);
 13567     13A4  0020               	movlb	0	; select bank0
 13568     13A5  0825               	movf	I2C_SetDataCompleteCallback@cb+1,w
 13569     13A6  00A1               	movwf	I2C_SetCallback@cb+1
 13570     13A7  0824               	movf	I2C_SetDataCompleteCallback@cb,w
 13571     13A8  00A0               	movwf	I2C_SetCallback@cb
 13572     13A9  0826               	movf	I2C_SetDataCompleteCallback@ptr,w
 13573     13AA  00A2               	movwf	I2C_SetCallback@ptr
 13574     13AB  3000               	movlw	0
 13575     13AC  3196  2690  3193   	fcall	_I2C_SetCallback
 13576     13AF                     l510:
 13577     13AF  0008               	return
 13578     13B0                     __end_of_I2C_SetDataCompleteCallback:
 13579                           
 13580                           	psect	text45
 13581     150E                     __ptext45:	
 13582 ;; *************** function _I2C_SetBuffer *****************
 13583 ;; Defined at:
 13584 ;;		line 264 in file "mcc_generated_files/i2c_master.c"
 13585 ;; Parameters:    Size  Location     Type
 13586 ;;  buffer          2    0[BANK0 ] PTR void 
 13587 ;;		 -> Font12_data(13), Font6_data(7), Posi_cmd(6), CLR_cmd(9), 
 13588 ;;		 -> REG(8), I2C_ReadDataBlock@reg(1), I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@reg(1), 
 13589 ;;		 -> I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@reg(1), I2C_Write1ByteRegister@data(1), I2C_Read2ByteRegi
      +ster@reg(1), 
 13590 ;;		 -> I2C_Read2ByteRegister@returnValue(2), NULL(0), I2C_Read1ByteRegister@reg(1), I2C_Read1ByteRegister@returnValue(1
      +), 
 13591 ;;  bufferSize      2    2[BANK0 ] unsigned int 
 13592 ;; Auto vars:     Size  Location     Type
 13593 ;;		None
 13594 ;; Return value:  Size  Location     Type
 13595 ;;                  1    wreg      void 
 13596 ;; Registers used:
 13597 ;;		wreg
 13598 ;; Tracked objects:
 13599 ;;		On entry : 0/0
 13600 ;;		On exit  : 0/0
 13601 ;;		Unchanged: 0/0
 13602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13603 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13606 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13607 ;;Total ram usage:        4 bytes
 13608 ;; Hardware stack levels used: 1
 13609 ;; Hardware stack levels required when called: 7
 13610 ;; This function calls:
 13611 ;;		Nothing
 13612 ;; This function is called by:
 13613 ;;		_I2C_Write1ByteRegister
 13614 ;;		_I2C_WriteNBytes
 13615 ;;		_I2C_ReadNBytes
 13616 ;;		_I2C_Read1ByteRegister
 13617 ;;		_I2C_Read2ByteRegister
 13618 ;;		_I2C_Write2ByteRegister
 13619 ;;		_I2C_ReadDataBlock
 13620 ;; This function uses a non-reentrant model
 13621 ;;
 13622                           
 13623     150E                     _I2C_SetBuffer:	
 13624                           ;psect for function _I2C_SetBuffer
 13625                           
 13626     150E                     l3607:	
 13627                           ;incstack = 0
 13628                           ; Regs used in _I2C_SetBuffer: [wreg]
 13629                           
 13630                           
 13631                           ;i2c_master.c: 266: if(I2C_Status.bufferFree)
 13632     150E  0021               	movlb	1	; select bank1
 13633     150F  1DBD               	btfss	(_I2C_Status^(0+128)+29),3
 13634     1510  2D12               	goto	u2191
 13635     1511  2D13               	goto	u2190
 13636     1512                     u2191:
 13637     1512  2D24               	goto	l507
 13638     1513                     u2190:
 13639     1513                     l3609:
 13640                           
 13641                           ;i2c_master.c: 267: {;i2c_master.c: 268: I2C_Status.data_ptr = buffer;
 13642     1513  0020               	movlb	0	; select bank0
 13643     1514  0821               	movf	I2C_SetBuffer@buffer+1,w
 13644     1515  0021               	movlb	1	; select bank1
 13645     1516  00B8               	movwf	((low ((_I2C_Status| 0+23))+1))^(0+128)
 13646     1517  0020               	movlb	0	; select bank0
 13647     1518  0820               	movf	I2C_SetBuffer@buffer,w
 13648     1519  0021               	movlb	1	; select bank1
 13649     151A  00B7               	movwf	(low ((_I2C_Status| 0+23)))^(0+128)
 13650                           
 13651                           ;i2c_master.c: 269: I2C_Status.data_length = bufferSize;
 13652     151B  0020               	movlb	0	; select bank0
 13653     151C  0823               	movf	I2C_SetBuffer@bufferSize+1,w
 13654     151D  0021               	movlb	1	; select bank1
 13655     151E  00BA               	movwf	((_I2C_Status+1)^(0+128)+25)
 13656     151F  0020               	movlb	0	; select bank0
 13657     1520  0822               	movf	I2C_SetBuffer@bufferSize,w
 13658     1521  0021               	movlb	1	; select bank1
 13659     1522  00B9               	movwf	(_I2C_Status^(0+128)+25)
 13660     1523                     l3611:
 13661                           
 13662                           ;i2c_master.c: 270: I2C_Status.bufferFree = 0;
 13663     1523  11BD               	bcf	(_I2C_Status^(0+128)+29),3
 13664     1524                     l507:
 13665     1524  0008               	return
 13666     1525                     __end_of_I2C_SetBuffer:
 13667                           
 13668                           	psect	text46
 13669     1398                     __ptext46:	
 13670 ;; *************** function _I2C_SetAddressNackCallback *****************
 13671 ;; Defined at:
 13672 ;;		line 284 in file "mcc_generated_files/i2c_master.c"
 13673 ;; Parameters:    Size  Location     Type
 13674 ;;  cb              2    4[BANK0 ] PTR FTN(PTR void ,)enum 
 13675 ;;		 -> NULL(1), 
 13676 ;;  ptr             2    6[BANK0 ] PTR void 
 13677 ;;		 -> NULL(0), 
 13678 ;; Auto vars:     Size  Location     Type
 13679 ;;		None
 13680 ;; Return value:  Size  Location     Type
 13681 ;;                  1    wreg      void 
 13682 ;; Registers used:
 13683 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13684 ;; Tracked objects:
 13685 ;;		On entry : 0/0
 13686 ;;		On exit  : 0/0
 13687 ;;		Unchanged: 0/0
 13688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13689 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13692 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13693 ;;Total ram usage:        4 bytes
 13694 ;; Hardware stack levels used: 1
 13695 ;; Hardware stack levels required when called: 8
 13696 ;; This function calls:
 13697 ;;		_I2C_SetCallback
 13698 ;; This function is called by:
 13699 ;;		_I2C_Write1ByteRegister
 13700 ;;		_I2C_WriteNBytes
 13701 ;;		_I2C_Read1ByteRegister
 13702 ;;		_I2C_Read2ByteRegister
 13703 ;;		_I2C_Write2ByteRegister
 13704 ;;		_I2C_ReadDataBlock
 13705 ;; This function uses a non-reentrant model
 13706 ;;
 13707                           
 13708     1398                     _I2C_SetAddressNackCallback:	
 13709                           ;psect for function _I2C_SetAddressNackCallback
 13710                           
 13711     1398                     l3613:	
 13712                           ;incstack = 0
 13713                           ; Regs used in _I2C_SetAddressNackCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 13714                           
 13715                           
 13716                           ;i2c_master.c: 286: I2C_SetCallback(I2C_ADDR_NACK, cb, ptr);
 13717     1398  0020               	movlb	0	; select bank0
 13718     1399  0825               	movf	I2C_SetAddressNackCallback@cb+1,w
 13719     139A  00A1               	movwf	I2C_SetCallback@cb+1
 13720     139B  0824               	movf	I2C_SetAddressNackCallback@cb,w
 13721     139C  00A0               	movwf	I2C_SetCallback@cb
 13722     139D  0826               	movf	I2C_SetAddressNackCallback@ptr,w
 13723     139E  00A2               	movwf	I2C_SetCallback@ptr
 13724     139F  3002               	movlw	2
 13725     13A0  3196  2690  3193   	fcall	_I2C_SetCallback
 13726     13A3                     l516:
 13727     13A3  0008               	return
 13728     13A4                     __end_of_I2C_SetAddressNackCallback:
 13729                           
 13730                           	psect	text47
 13731     1690                     __ptext47:	
 13732 ;; *************** function _I2C_SetCallback *****************
 13733 ;; Defined at:
 13734 ;;		line 304 in file "mcc_generated_files/i2c_master.c"
 13735 ;; Parameters:    Size  Location     Type
 13736 ;;  idx             1    wreg     enum E12000
 13737 ;;  cb              2    0[BANK0 ] PTR FTN(PTR void ,)enum 
 13738 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), rd2RegCompleteHandler(1), 
 13739 ;;		 -> NULL(1), rd1RegCompleteHandler(1), 
 13740 ;;  ptr             1    2[BANK0 ] PTR void 
 13741 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 13742 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 13743 ;; Auto vars:     Size  Location     Type
 13744 ;;  idx             1    3[BANK0 ] enum E12000
 13745 ;; Return value:  Size  Location     Type
 13746 ;;                  1    wreg      void 
 13747 ;; Registers used:
 13748 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13749 ;; Tracked objects:
 13750 ;;		On entry : 0/0
 13751 ;;		On exit  : 0/0
 13752 ;;		Unchanged: 0/0
 13753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13754 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13755 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13757 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13758 ;;Total ram usage:        4 bytes
 13759 ;; Hardware stack levels used: 1
 13760 ;; Hardware stack levels required when called: 7
 13761 ;; This function calls:
 13762 ;;		Nothing
 13763 ;; This function is called by:
 13764 ;;		_I2C_SetDataCompleteCallback
 13765 ;;		_I2C_SetAddressNackCallback
 13766 ;;		_I2C_SetWriteCollisionCallback
 13767 ;;		_I2C_SetDataNackCallback
 13768 ;;		_I2C_SetTimeoutCallback
 13769 ;; This function uses a non-reentrant model
 13770 ;;
 13771                           
 13772     1690                     _I2C_SetCallback:	
 13773                           ;psect for function _I2C_SetCallback
 13774                           
 13775                           
 13776                           ;incstack = 0
 13777                           ; Regs used in _I2C_SetCallback: [wreg+fsr1l+fsr1h+status,2+status,0]
 13778                           ;I2C_SetCallback@idx stored from wreg
 13779     1690  0020               	movlb	0	; select bank0
 13780     1691  00A3               	movwf	I2C_SetCallback@idx
 13781     1692                     l3565:
 13782                           
 13783                           ;i2c_master.c: 306: if(cb)
 13784     1692  0820               	movf	I2C_SetCallback@cb,w
 13785     1693  0421               	iorwf	I2C_SetCallback@cb+1,w
 13786     1694  1903               	btfsc	3,2
 13787     1695  2E97               	goto	u2171
 13788     1696  2E98               	goto	u2170
 13789     1697                     u2171:
 13790     1697  2EA7               	goto	l3569
 13791     1698                     u2170:
 13792     1698                     l3567:
 13793                           
 13794                           ;i2c_master.c: 307: {;i2c_master.c: 308: I2C_Status.callbackTable[idx] = cb;
 13795     1698  3523               	lslf	I2C_SetCallback@idx,w
 13796     1699  3EA0               	addlw	(low (_I2C_Status| 0))& (0+255)
 13797     169A  0086               	movwf	6
 13798     169B  0187               	clrf	7
 13799     169C  0820               	movf	I2C_SetCallback@cb,w
 13800     169D  3FC0               	movwi [0]fsr1
 13801     169E  0821               	movf	I2C_SetCallback@cb+1,w
 13802     169F  3FC1               	movwi [1]fsr1
 13803                           
 13804                           ;i2c_master.c: 309: I2C_Status.callbackPayload[idx] = ptr;
 13805     16A0  0823               	movf	I2C_SetCallback@idx,w
 13806     16A1  3EAC               	addlw	(low ((_I2C_Status| 0+12)))& (0+255)
 13807     16A2  0086               	movwf	6
 13808     16A3  0187               	clrf	7
 13809     16A4  0822               	movf	I2C_SetCallback@ptr,w
 13810     16A5  0081               	movwf	1
 13811                           
 13812                           ;i2c_master.c: 310: }
 13813     16A6  2EB4               	goto	l530
 13814     16A7                     l3569:
 13815                           
 13816                           ;i2c_master.c: 311: else;i2c_master.c: 312: {;i2c_master.c: 313: I2C_Status.callbackTabl
      +                          e[idx] = I2C_CallbackReturnStop;
 13817     16A7  3523               	lslf	I2C_SetCallback@idx,w
 13818     16A8  3EA0               	addlw	(low (_I2C_Status| 0))& (0+255)
 13819     16A9  0086               	movwf	6
 13820     16AA  0187               	clrf	7
 13821     16AB  309C               	movlw	low _I2C_CallbackReturnStop
 13822     16AC  3FC0               	movwi [0]fsr1
 13823     16AD  3012               	movlw	high _I2C_CallbackReturnStop
 13824     16AE  3FC1               	movwi [1]fsr1
 13825                           
 13826                           ;i2c_master.c: 314: I2C_Status.callbackPayload[idx] = (0);
 13827     16AF  0823               	movf	I2C_SetCallback@idx,w
 13828     16B0  3EAC               	addlw	(low ((_I2C_Status| 0+12)))& (0+255)
 13829     16B1  0086               	movwf	6
 13830     16B2  0187               	clrf	7
 13831     16B3  0181               	clrf	1
 13832     16B4                     l530:
 13833     16B4  0008               	return
 13834     16B5                     __end_of_I2C_SetCallback:
 13835                           
 13836                           	psect	text48
 13837     0959                     __ptext48:	
 13838 ;; *************** function _I2C_Open *****************
 13839 ;; Defined at:
 13840 ;;		line 176 in file "mcc_generated_files/i2c_master.c"
 13841 ;; Parameters:    Size  Location     Type
 13842 ;;  address         1    wreg     unsigned char 
 13843 ;; Auto vars:     Size  Location     Type
 13844 ;;  address         1    2[BANK0 ] unsigned char 
 13845 ;;  returnValue     1    3[BANK0 ] enum E92
 13846 ;; Return value:  Size  Location     Type
 13847 ;;                  1    wreg      enum E92
 13848 ;; Registers used:
 13849 ;;		wreg, status,2, status,0, pclath, cstack
 13850 ;; Tracked objects:
 13851 ;;		On entry : 0/0
 13852 ;;		On exit  : 0/0
 13853 ;;		Unchanged: 0/0
 13854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13856 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13858 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13859 ;;Total ram usage:        2 bytes
 13860 ;; Hardware stack levels used: 1
 13861 ;; Hardware stack levels required when called: 8
 13862 ;; This function calls:
 13863 ;;		_I2C_MasterClearIrq
 13864 ;;		_I2C_MasterEnableIrq
 13865 ;;		_I2C_MasterOpen
 13866 ;;		_I2C_SetInterruptHandler
 13867 ;; This function is called by:
 13868 ;;		_I2C_Write1ByteRegister
 13869 ;;		_I2C_WriteNBytes
 13870 ;;		_I2C_ReadNBytes
 13871 ;;		_I2C_Read1ByteRegister
 13872 ;;		_I2C_Read2ByteRegister
 13873 ;;		_I2C_Write2ByteRegister
 13874 ;;		_I2C_ReadDataBlock
 13875 ;; This function uses a non-reentrant model
 13876 ;;
 13877                           
 13878     0959                     _I2C_Open:	
 13879                           ;psect for function _I2C_Open
 13880                           
 13881                           
 13882                           ;incstack = 0
 13883                           ; Regs used in _I2C_Open: [wreg+status,2+status,0+pclath+cstack]
 13884                           ;I2C_Open@address stored from wreg
 13885     0959  0020               	movlb	0	; select bank0
 13886     095A  00A2               	movwf	I2C_Open@address
 13887     095B                     l3571:
 13888                           
 13889                           ;i2c_master.c: 178: i2c_error_t returnValue = I2C_BUSY;
 13890     095B  01A3               	clrf	I2C_Open@returnValue
 13891     095C  0AA3               	incf	I2C_Open@returnValue,f
 13892                           
 13893                           ;i2c_master.c: 180: if(!I2C_Status.inUse)
 13894     095D  0021               	movlb	1	; select bank1
 13895     095E  193D               	btfsc	(_I2C_Status^(0+128)+29),2
 13896     095F  2961               	goto	u2181
 13897     0960  2962               	goto	u2180
 13898     0961                     u2181:
 13899     0961  299C               	goto	l3603
 13900     0962                     u2180:
 13901     0962                     l3573:
 13902                           
 13903                           ;i2c_master.c: 181: {;i2c_master.c: 182: I2C_Status.address = address;
 13904     0962  0020               	movlb	0	; select bank0
 13905     0963  0822               	movf	I2C_Open@address,w
 13906     0964  0021               	movlb	1	; select bank1
 13907     0965  00B6               	movwf	(_I2C_Status^(0+128)+22)
 13908     0966                     l3575:
 13909                           
 13910                           ;i2c_master.c: 183: I2C_Status.busy = 0;
 13911     0966  10BD               	bcf	(_I2C_Status^(0+128)+29),1
 13912     0967                     l3577:
 13913                           
 13914                           ;i2c_master.c: 184: I2C_Status.inUse = 1;
 13915     0967  153D               	bsf	(_I2C_Status^(0+128)+29),2
 13916     0968                     l3579:
 13917                           
 13918                           ;i2c_master.c: 185: I2C_Status.addressNackCheck = 0;
 13919     0968  103D               	bcf	(_I2C_Status^(0+128)+29),0
 13920                           
 13921                           ;i2c_master.c: 186: I2C_Status.state = I2C_RESET;
 13922     0969  300E               	movlw	14
 13923     096A  00BB               	movwf	(_I2C_Status^(0+128)+27)
 13924                           
 13925                           ;i2c_master.c: 187: I2C_Status.time_out_value = 500;
 13926     096B  30F4               	movlw	244
 13927     096C  00B4               	movwf	(_I2C_Status^(0+128)+20)
 13928     096D  3001               	movlw	1
 13929     096E  00B5               	movwf	(_I2C_Status^(0+128)+21)
 13930     096F                     l3581:
 13931                           
 13932                           ;i2c_master.c: 188: I2C_Status.bufferFree = 1;
 13933     096F  15BD               	bsf	(_I2C_Status^(0+128)+29),3
 13934                           
 13935                           ;i2c_master.c: 191: I2C_Status.callbackTable[I2C_DATA_COMPLETE]=I2C_CallbackReturnStop;
 13936     0970  309C               	movlw	low _I2C_CallbackReturnStop
 13937     0971  00A0               	movwf	_I2C_Status^(0+128)
 13938     0972  3012               	movlw	high _I2C_CallbackReturnStop
 13939     0973  00A1               	movwf	(_I2C_Status^(0+128)+1)
 13940     0974                     l3583:
 13941                           
 13942                           ;i2c_master.c: 192: I2C_Status.callbackPayload[I2C_DATA_COMPLETE] = (0);
 13943     0974  01AC               	clrf	(low ((_I2C_Status| 0+12)))^(0+128)
 13944     0975                     l3585:
 13945                           
 13946                           ;i2c_master.c: 193: I2C_Status.callbackTable[I2C_WRITE_COLLISION]=I2C_CallbackReturnStop
      +                          ;
 13947     0975  309C               	movlw	low _I2C_CallbackReturnStop
 13948     0976  00A2               	movwf	(low ((_I2C_Status| 0+2)))^(0+128)
 13949     0977  3012               	movlw	high _I2C_CallbackReturnStop
 13950     0978  00A3               	movwf	((low ((_I2C_Status| 0+2)))^(0+128)+1)
 13951                           
 13952                           ;i2c_master.c: 194: I2C_Status.callbackPayload[I2C_WRITE_COLLISION] = (0);
 13953     0979  01AD               	clrf	(low ((_I2C_Status| 0+13)))^(0+128)
 13954     097A                     l3587:
 13955                           
 13956                           ;i2c_master.c: 195: I2C_Status.callbackTable[I2C_ADDR_NACK]=I2C_CallbackReturnStop;
 13957     097A  309C               	movlw	low _I2C_CallbackReturnStop
 13958     097B  00A4               	movwf	(low ((_I2C_Status| 0+4)))^(0+128)
 13959     097C  3012               	movlw	high _I2C_CallbackReturnStop
 13960     097D  00A5               	movwf	((low ((_I2C_Status| 0+4)))^(0+128)+1)
 13961     097E                     l3589:
 13962                           
 13963                           ;i2c_master.c: 196: I2C_Status.callbackPayload[I2C_ADDR_NACK] = (0);
 13964     097E  01AE               	clrf	(low ((_I2C_Status| 0+14)))^(0+128)
 13965                           
 13966                           ;i2c_master.c: 197: I2C_Status.callbackTable[I2C_DATA_NACK]=I2C_CallbackReturnStop;
 13967     097F  309C               	movlw	low _I2C_CallbackReturnStop
 13968     0980  00A6               	movwf	(low ((_I2C_Status| 0+6)))^(0+128)
 13969     0981  3012               	movlw	high _I2C_CallbackReturnStop
 13970     0982  00A7               	movwf	((low ((_I2C_Status| 0+6)))^(0+128)+1)
 13971     0983                     l3591:
 13972                           
 13973                           ;i2c_master.c: 198: I2C_Status.callbackPayload[I2C_DATA_NACK] = (0);
 13974     0983  01AF               	clrf	(low ((_I2C_Status| 0+15)))^(0+128)
 13975     0984                     l3593:
 13976                           
 13977                           ;i2c_master.c: 199: I2C_Status.callbackTable[I2C_TIMEOUT]=I2C_CallbackReturnReset;
 13978     0984  3002               	movlw	low _I2C_CallbackReturnReset
 13979     0985  00A8               	movwf	(low ((_I2C_Status| 0+8)))^(0+128)
 13980     0986  3000               	movlw	high _I2C_CallbackReturnReset
 13981     0987  00A9               	movwf	((low ((_I2C_Status| 0+8)))^(0+128)+1)
 13982                           
 13983                           ;i2c_master.c: 200: I2C_Status.callbackPayload[I2C_TIMEOUT] = (0);
 13984     0988  01B0               	clrf	(low ((_I2C_Status| 0+16)))^(0+128)
 13985     0989                     l3595:
 13986                           
 13987                           ;i2c_master.c: 202: I2C_SetInterruptHandler(I2C_MasterIsr);
 13988     0989  30D3               	movlw	low _I2C_MasterIsr
 13989     098A  0020               	movlb	0	; select bank0
 13990     098B  00A0               	movwf	I2C_SetInterruptHandler@InterruptHandler
 13991     098C  3012               	movlw	high _I2C_MasterIsr
 13992     098D  00A1               	movwf	I2C_SetInterruptHandler@InterruptHandler+1
 13993     098E  3193  234A  3189   	fcall	_I2C_SetInterruptHandler
 13994     0991                     l3597:
 13995                           
 13996                           ;i2c_master.c: 203: I2C_MasterClearIrq();
 13997     0991  3192  22B6  3189   	fcall	_I2C_MasterClearIrq
 13998     0994                     l3599:
 13999                           
 14000                           ;i2c_master.c: 204: I2C_MasterOpen();
 14001     0994  3193  23D5  3189   	fcall	_I2C_MasterOpen
 14002     0997                     l3601:
 14003                           
 14004                           ;i2c_master.c: 205: I2C_MasterEnableIrq();
 14005     0997  3192  22C2  3189   	fcall	_I2C_MasterEnableIrq
 14006                           
 14007                           ;i2c_master.c: 206: returnValue = I2C_NOERR;
 14008     099A  0020               	movlb	0	; select bank0
 14009     099B  01A3               	clrf	I2C_Open@returnValue
 14010     099C                     l3603:
 14011                           
 14012                           ;i2c_master.c: 207: };i2c_master.c: 208: return returnValue;
 14013     099C  0020               	movlb	0	; select bank0
 14014     099D  0823               	movf	I2C_Open@returnValue,w
 14015     099E                     l484:
 14016     099E  0008               	return
 14017     099F                     __end_of_I2C_Open:
 14018                           
 14019                           	psect	text49
 14020     134A                     __ptext49:	
 14021 ;; *************** function _I2C_SetInterruptHandler *****************
 14022 ;; Defined at:
 14023 ;;		line 299 in file "mcc_generated_files/i2c_master.c"
 14024 ;; Parameters:    Size  Location     Type
 14025 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 14026 ;;		 -> I2C_MasterIsr(1), 
 14027 ;; Auto vars:     Size  Location     Type
 14028 ;;		None
 14029 ;; Return value:  Size  Location     Type
 14030 ;;                  1    wreg      void 
 14031 ;; Registers used:
 14032 ;;		wreg
 14033 ;; Tracked objects:
 14034 ;;		On entry : 0/0
 14035 ;;		On exit  : 0/0
 14036 ;;		Unchanged: 0/0
 14037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14038 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14041 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14042 ;;Total ram usage:        2 bytes
 14043 ;; Hardware stack levels used: 1
 14044 ;; Hardware stack levels required when called: 7
 14045 ;; This function calls:
 14046 ;;		Nothing
 14047 ;; This function is called by:
 14048 ;;		_I2C_Open
 14049 ;; This function uses a non-reentrant model
 14050 ;;
 14051                           
 14052     134A                     _I2C_SetInterruptHandler:	
 14053                           ;psect for function _I2C_SetInterruptHandler
 14054                           
 14055     134A                     l3525:	
 14056                           ;incstack = 0
 14057                           ; Regs used in _I2C_SetInterruptHandler: [wreg]
 14058                           
 14059                           
 14060                           ;i2c_master.c: 301: MSSP_InterruptHandler = InterruptHandler;
 14061     134A  0020               	movlb	0	; select bank0
 14062     134B  0821               	movf	I2C_SetInterruptHandler@InterruptHandler+1,w
 14063     134C  0021               	movlb	1	; select bank1
 14064     134D  00D5               	movwf	(_MSSP_InterruptHandler+1)^(0+128)
 14065     134E  0020               	movlb	0	; select bank0
 14066     134F  0820               	movf	I2C_SetInterruptHandler@InterruptHandler,w
 14067     1350  0021               	movlb	1	; select bank1
 14068     1351  00D4               	movwf	_MSSP_InterruptHandler^(0+128)
 14069     1352                     l525:
 14070     1352  0008               	return
 14071     1353                     __end_of_I2C_SetInterruptHandler:
 14072                           
 14073                           	psect	text50
 14074     13D5                     __ptext50:	
 14075 ;; *************** function _I2C_MasterOpen *****************
 14076 ;; Defined at:
 14077 ;;		line 544 in file "mcc_generated_files/i2c_master.c"
 14078 ;; Parameters:    Size  Location     Type
 14079 ;;		None
 14080 ;; Auto vars:     Size  Location     Type
 14081 ;;		None
 14082 ;; Return value:  Size  Location     Type
 14083 ;;                  1    wreg      unsigned char 
 14084 ;; Registers used:
 14085 ;;		wreg, status,2
 14086 ;; Tracked objects:
 14087 ;;		On entry : 0/0
 14088 ;;		On exit  : 0/0
 14089 ;;		Unchanged: 0/0
 14090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14094 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14095 ;;Total ram usage:        0 bytes
 14096 ;; Hardware stack levels used: 1
 14097 ;; Hardware stack levels required when called: 7
 14098 ;; This function calls:
 14099 ;;		Nothing
 14100 ;; This function is called by:
 14101 ;;		_I2C_Open
 14102 ;; This function uses a non-reentrant model
 14103 ;;
 14104                           
 14105     13D5                     _I2C_MasterOpen:	
 14106                           ;psect for function _I2C_MasterOpen
 14107                           
 14108     13D5                     l3529:	
 14109                           ;incstack = 0
 14110                           ; Regs used in _I2C_MasterOpen: [wreg+status,2]
 14111                           
 14112                           
 14113                           ;i2c_master.c: 546: if(!SSP1CON1bits.SSPEN)
 14114     13D5  0024               	movlb	4	; select bank4
 14115     13D6  1A95               	btfsc	21,5	;volatile
 14116     13D7  2BD9               	goto	u2141
 14117     13D8  2BDA               	goto	u2140
 14118     13D9                     u2141:
 14119     13D9  2BE1               	goto	l649
 14120     13DA                     u2140:
 14121     13DA                     l3531:
 14122                           
 14123                           ;i2c_master.c: 547: {;i2c_master.c: 548: SSP1STAT = 0x00;
 14124     13DA  0194               	clrf	20	;volatile
 14125     13DB                     l3533:
 14126                           
 14127                           ;i2c_master.c: 549: SSP1CON1 = 0x08;
 14128     13DB  3008               	movlw	8
 14129     13DC  0095               	movwf	21	;volatile
 14130     13DD                     l3535:
 14131                           
 14132                           ;i2c_master.c: 550: SSP1CON2 = 0x00;
 14133     13DD  0196               	clrf	22	;volatile
 14134                           
 14135                           ;i2c_master.c: 551: SSP1ADD = 0x27;
 14136     13DE  3027               	movlw	39
 14137     13DF  0092               	movwf	18	;volatile
 14138     13E0                     l3537:
 14139                           
 14140                           ;i2c_master.c: 552: SSP1CON1bits.SSPEN = 1;
 14141     13E0  1695               	bsf	21,5	;volatile
 14142     13E1                     l649:
 14143     13E1  0008               	return
 14144     13E2                     __end_of_I2C_MasterOpen:
 14145                           
 14146                           	psect	text51
 14147     12C2                     __ptext51:	
 14148 ;; *************** function _I2C_MasterEnableIrq *****************
 14149 ;; Defined at:
 14150 ;;		line 627 in file "mcc_generated_files/i2c_master.c"
 14151 ;; Parameters:    Size  Location     Type
 14152 ;;		None
 14153 ;; Auto vars:     Size  Location     Type
 14154 ;;		None
 14155 ;; Return value:  Size  Location     Type
 14156 ;;                  1    wreg      void 
 14157 ;; Registers used:
 14158 ;;		None
 14159 ;; Tracked objects:
 14160 ;;		On entry : 0/0
 14161 ;;		On exit  : 0/0
 14162 ;;		Unchanged: 0/0
 14163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14167 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14168 ;;Total ram usage:        0 bytes
 14169 ;; Hardware stack levels used: 1
 14170 ;; Hardware stack levels required when called: 7
 14171 ;; This function calls:
 14172 ;;		Nothing
 14173 ;; This function is called by:
 14174 ;;		_I2C_Open
 14175 ;;		_I2C_SetTimeOut
 14176 ;; This function uses a non-reentrant model
 14177 ;;
 14178                           
 14179     12C2                     _I2C_MasterEnableIrq:	
 14180                           ;psect for function _I2C_MasterEnableIrq
 14181                           
 14182     12C2                     l3541:	
 14183                           ;incstack = 0
 14184                           ; Regs used in _I2C_MasterEnableIrq: []
 14185                           
 14186                           
 14187                           ;i2c_master.c: 629: PIE1bits.SSP1IE = 1;
 14188     12C2  0021               	movlb	1	; select bank1
 14189     12C3  1591               	bsf	17,3	;volatile
 14190     12C4                     l691:
 14191     12C4  0008               	return
 14192     12C5                     __end_of_I2C_MasterEnableIrq:
 14193                           
 14194                           	psect	text52
 14195     130D                     __ptext52:	
 14196 ;; *************** function _I2C_MasterWrite *****************
 14197 ;; Defined at:
 14198 ;;		line 252 in file "mcc_generated_files/i2c_master.c"
 14199 ;; Parameters:    Size  Location     Type
 14200 ;;		None
 14201 ;; Auto vars:     Size  Location     Type
 14202 ;;		None
 14203 ;; Return value:  Size  Location     Type
 14204 ;;                  1    wreg      enum E92
 14205 ;; Registers used:
 14206 ;;		wreg, status,2, status,0, pclath, cstack
 14207 ;; Tracked objects:
 14208 ;;		On entry : 0/0
 14209 ;;		On exit  : 0/0
 14210 ;;		Unchanged: 0/0
 14211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14215 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14216 ;;Total ram usage:        0 bytes
 14217 ;; Hardware stack levels used: 1
 14218 ;; Hardware stack levels required when called: 9
 14219 ;; This function calls:
 14220 ;;		_I2C_MasterOperation
 14221 ;; This function is called by:
 14222 ;;		_I2C_Write1ByteRegister
 14223 ;;		_I2C_WriteNBytes
 14224 ;;		_I2C_Read1ByteRegister
 14225 ;;		_I2C_Read2ByteRegister
 14226 ;;		_I2C_Write2ByteRegister
 14227 ;;		_I2C_ReadDataBlock
 14228 ;; This function uses a non-reentrant model
 14229 ;;
 14230                           
 14231     130D                     _I2C_MasterWrite:	
 14232                           ;psect for function _I2C_MasterWrite
 14233                           
 14234     130D                     l3615:	
 14235                           ;incstack = 0
 14236                           ; Regs used in _I2C_MasterWrite: [wreg+status,2+status,0+pclath+cstack]
 14237                           
 14238                           
 14239                           ;i2c_master.c: 254: return I2C_MasterOperation(0);;	Return value of _I2C_MasterWrite is 
      +                          never used
 14240     130D  3000               	movlw	0
 14241     130E  3195  25A3  3193   	fcall	_I2C_MasterOperation
 14242     1311                     l500:
 14243     1311  0008               	return
 14244     1312                     __end_of_I2C_MasterWrite:
 14245                           
 14246                           	psect	text53
 14247     15A3                     __ptext53:	
 14248 ;; *************** function _I2C_MasterOperation *****************
 14249 ;; Defined at:
 14250 ;;		line 226 in file "mcc_generated_files/i2c_master.c"
 14251 ;; Parameters:    Size  Location     Type
 14252 ;;  read            1    wreg     unsigned char 
 14253 ;; Auto vars:     Size  Location     Type
 14254 ;;  read            1    0[BANK0 ] unsigned char 
 14255 ;;  returnValue     1    1[BANK0 ] enum E92
 14256 ;; Return value:  Size  Location     Type
 14257 ;;                  1    wreg      enum E92
 14258 ;; Registers used:
 14259 ;;		wreg, status,2, status,0, pclath, cstack
 14260 ;; Tracked objects:
 14261 ;;		On entry : 0/0
 14262 ;;		On exit  : 0/0
 14263 ;;		Unchanged: 0/0
 14264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14266 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14268 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14269 ;;Total ram usage:        2 bytes
 14270 ;; Hardware stack levels used: 1
 14271 ;; Hardware stack levels required when called: 8
 14272 ;; This function calls:
 14273 ;;		_I2C_MasterStart
 14274 ;; This function is called by:
 14275 ;;		_I2C_MasterRead
 14276 ;;		_I2C_MasterWrite
 14277 ;; This function uses a non-reentrant model
 14278 ;;
 14279                           
 14280     15A3                     _I2C_MasterOperation:	
 14281                           ;psect for function _I2C_MasterOperation
 14282                           
 14283                           
 14284                           ;incstack = 0
 14285                           ; Regs used in _I2C_MasterOperation: [wreg+status,2+status,0+pclath+cstack]
 14286                           ;I2C_MasterOperation@read stored from wreg
 14287     15A3  0020               	movlb	0	; select bank0
 14288     15A4  00A0               	movwf	I2C_MasterOperation@read
 14289     15A5                     l3547:
 14290                           
 14291                           ;i2c_master.c: 228: i2c_error_t returnValue = I2C_BUSY;
 14292     15A5  01A1               	clrf	I2C_MasterOperation@returnValue
 14293     15A6  0AA1               	incf	I2C_MasterOperation@returnValue,f
 14294                           
 14295                           ;i2c_master.c: 229: if(!I2C_Status.busy)
 14296     15A7  0021               	movlb	1	; select bank1
 14297     15A8  18BD               	btfsc	(_I2C_Status^(0+128)+29),1
 14298     15A9  2DAB               	goto	u2151
 14299     15AA  2DAC               	goto	u2150
 14300     15AB                     u2151:
 14301     15AB  2DBE               	goto	l3561
 14302     15AC                     u2150:
 14303     15AC                     l3549:
 14304                           
 14305                           ;i2c_master.c: 230: {;i2c_master.c: 231: I2C_Status.busy = 1;
 14306     15AC  14BD               	bsf	(_I2C_Status^(0+128)+29),1
 14307     15AD                     l3551:
 14308                           
 14309                           ;i2c_master.c: 232: returnValue = I2C_NOERR;
 14310     15AD  0020               	movlb	0	; select bank0
 14311     15AE  01A1               	clrf	I2C_MasterOperation@returnValue
 14312     15AF                     l3553:
 14313                           
 14314                           ;i2c_master.c: 234: if(read)
 14315     15AF  0820               	movf	I2C_MasterOperation@read,w
 14316     15B0  1903               	btfsc	3,2
 14317     15B1  2DB3               	goto	u2161
 14318     15B2  2DB4               	goto	u2160
 14319     15B3                     u2161:
 14320     15B3  2DB8               	goto	l3557
 14321     15B4                     u2160:
 14322     15B4                     l3555:
 14323                           
 14324                           ;i2c_master.c: 235: {;i2c_master.c: 236: I2C_Status.state = I2C_SEND_ADR_READ;
 14325     15B4  0021               	movlb	1	; select bank1
 14326     15B5  01BB               	clrf	(_I2C_Status^(0+128)+27)
 14327     15B6  0ABB               	incf	(_I2C_Status^(0+128)+27),f
 14328                           
 14329                           ;i2c_master.c: 237: }
 14330     15B7  2DBB               	goto	l3559
 14331     15B8                     l3557:
 14332                           
 14333                           ;i2c_master.c: 238: else;i2c_master.c: 239: {;i2c_master.c: 240: I2C_Status.state = I2C_
      +                          SEND_ADR_WRITE;
 14334     15B8  3002               	movlw	2
 14335     15B9  0021               	movlb	1	; select bank1
 14336     15BA  00BB               	movwf	(_I2C_Status^(0+128)+27)
 14337     15BB                     l3559:
 14338                           
 14339                           ;i2c_master.c: 241: };i2c_master.c: 242: I2C_MasterStart();
 14340     15BB  3192  22BF  3195   	fcall	_I2C_MasterStart
 14341     15BE                     l3561:
 14342                           
 14343                           ;i2c_master.c: 243: };i2c_master.c: 244: return returnValue;
 14344     15BE  0020               	movlb	0	; select bank0
 14345     15BF  0821               	movf	I2C_MasterOperation@returnValue,w
 14346     15C0                     l494:
 14347     15C0  0008               	return
 14348     15C1                     __end_of_I2C_MasterOperation:
 14349                           
 14350                           	psect	text54
 14351     12BF                     __ptext54:	
 14352 ;; *************** function _I2C_MasterStart *****************
 14353 ;; Defined at:
 14354 ;;		line 589 in file "mcc_generated_files/i2c_master.c"
 14355 ;; Parameters:    Size  Location     Type
 14356 ;;		None
 14357 ;; Auto vars:     Size  Location     Type
 14358 ;;		None
 14359 ;; Return value:  Size  Location     Type
 14360 ;;                  1    wreg      void 
 14361 ;; Registers used:
 14362 ;;		None
 14363 ;; Tracked objects:
 14364 ;;		On entry : 0/0
 14365 ;;		On exit  : 0/0
 14366 ;;		Unchanged: 0/0
 14367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14371 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14372 ;;Total ram usage:        0 bytes
 14373 ;; Hardware stack levels used: 1
 14374 ;; Hardware stack levels required when called: 7
 14375 ;; This function calls:
 14376 ;;		Nothing
 14377 ;; This function is called by:
 14378 ;;		_I2C_MasterOperation
 14379 ;; This function uses a non-reentrant model
 14380 ;;
 14381                           
 14382     12BF                     _I2C_MasterStart:	
 14383                           ;psect for function _I2C_MasterStart
 14384                           
 14385     12BF                     l3523:	
 14386                           ;incstack = 0
 14387                           ; Regs used in _I2C_MasterStart: []
 14388                           
 14389                           
 14390                           ;i2c_master.c: 591: SSP1CON2bits.SEN = 1;
 14391     12BF  0024               	movlb	4	; select bank4
 14392     12C0  1416               	bsf	22,0	;volatile
 14393     12C1                     l670:
 14394     12C1  0008               	return
 14395     12C2                     __end_of_I2C_MasterStart:
 14396                           
 14397                           	psect	text55
 14398     1588                     __ptext55:	
 14399 ;; *************** function _I2C_Close *****************
 14400 ;; Defined at:
 14401 ;;		line 211 in file "mcc_generated_files/i2c_master.c"
 14402 ;; Parameters:    Size  Location     Type
 14403 ;;		None
 14404 ;; Auto vars:     Size  Location     Type
 14405 ;;  returnValue     1    0[BANK0 ] enum E92
 14406 ;; Return value:  Size  Location     Type
 14407 ;;                  1    wreg      enum E92
 14408 ;; Registers used:
 14409 ;;		wreg, status,2, status,0, pclath, cstack
 14410 ;; Tracked objects:
 14411 ;;		On entry : 0/0
 14412 ;;		On exit  : 0/0
 14413 ;;		Unchanged: 0/0
 14414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14416 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14418 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14419 ;;Total ram usage:        1 bytes
 14420 ;; Hardware stack levels used: 1
 14421 ;; Hardware stack levels required when called: 8
 14422 ;; This function calls:
 14423 ;;		_I2C_MasterClearIrq
 14424 ;;		_I2C_MasterClose
 14425 ;;		_I2C_MasterDisableIrq
 14426 ;; This function is called by:
 14427 ;;		_I2C_Write1ByteRegister
 14428 ;;		_I2C_WriteNBytes
 14429 ;;		_I2C_ReadNBytes
 14430 ;;		_I2C_Read1ByteRegister
 14431 ;;		_I2C_Read2ByteRegister
 14432 ;;		_I2C_Write2ByteRegister
 14433 ;;		_I2C_ReadDataBlock
 14434 ;; This function uses a non-reentrant model
 14435 ;;
 14436                           
 14437     1588                     _I2C_Close:	
 14438                           ;psect for function _I2C_Close
 14439                           
 14440     1588                     l3619:	
 14441                           ;incstack = 0
 14442                           ; Regs used in _I2C_Close: [wreg+status,2+status,0+pclath+cstack]
 14443                           
 14444                           
 14445                           ;i2c_master.c: 213: i2c_error_t returnValue = I2C_BUSY;
 14446     1588  0020               	movlb	0	; select bank0
 14447     1589  01A0               	clrf	I2C_Close@returnValue
 14448     158A  0AA0               	incf	I2C_Close@returnValue,f
 14449                           
 14450                           ;i2c_master.c: 214: if(!I2C_Status.busy)
 14451     158B  0021               	movlb	1	; select bank1
 14452     158C  18BD               	btfsc	(_I2C_Status^(0+128)+29),1
 14453     158D  2D8F               	goto	u2201
 14454     158E  2D90               	goto	u2200
 14455     158F                     u2201:
 14456     158F  2DA0               	goto	l3633
 14457     1590                     u2200:
 14458     1590                     l3621:
 14459                           
 14460                           ;i2c_master.c: 215: {;i2c_master.c: 216: I2C_Status.inUse = 0;
 14461     1590  113D               	bcf	(_I2C_Status^(0+128)+29),2
 14462     1591                     l3623:
 14463                           
 14464                           ;i2c_master.c: 217: I2C_Status.address = 0xff;
 14465     1591  30FF               	movlw	255
 14466     1592  00B6               	movwf	(_I2C_Status^(0+128)+22)
 14467     1593                     l3625:
 14468                           
 14469                           ;i2c_master.c: 218: I2C_MasterClearIrq();
 14470     1593  3192  22B6  3195   	fcall	_I2C_MasterClearIrq
 14471     1596                     l3627:
 14472                           
 14473                           ;i2c_master.c: 219: I2C_MasterDisableIrq();
 14474     1596  3192  22BC  3195   	fcall	_I2C_MasterDisableIrq
 14475     1599                     l3629:
 14476                           
 14477                           ;i2c_master.c: 220: I2C_MasterClose();
 14478     1599  3192  22B9  3195   	fcall	_I2C_MasterClose
 14479     159C                     l3631:
 14480                           
 14481                           ;i2c_master.c: 221: returnValue = I2C_Status.error;
 14482     159C  0021               	movlb	1	; select bank1
 14483     159D  083C               	movf	(_I2C_Status^(0+128)+28),w
 14484     159E  0020               	movlb	0	; select bank0
 14485     159F  00A0               	movwf	I2C_Close@returnValue
 14486     15A0                     l3633:
 14487                           
 14488                           ;i2c_master.c: 222: };i2c_master.c: 223: return returnValue;
 14489     15A0  0020               	movlb	0	; select bank0
 14490     15A1  0820               	movf	I2C_Close@returnValue,w
 14491     15A2                     l488:
 14492     15A2  0008               	return
 14493     15A3                     __end_of_I2C_Close:
 14494                           
 14495                           	psect	text56
 14496     12BC                     __ptext56:	
 14497 ;; *************** function _I2C_MasterDisableIrq *****************
 14498 ;; Defined at:
 14499 ;;		line 637 in file "mcc_generated_files/i2c_master.c"
 14500 ;; Parameters:    Size  Location     Type
 14501 ;;		None
 14502 ;; Auto vars:     Size  Location     Type
 14503 ;;		None
 14504 ;; Return value:  Size  Location     Type
 14505 ;;                  1    wreg      void 
 14506 ;; Registers used:
 14507 ;;		None
 14508 ;; Tracked objects:
 14509 ;;		On entry : 0/0
 14510 ;;		On exit  : 0/0
 14511 ;;		Unchanged: 0/0
 14512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14516 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14517 ;;Total ram usage:        0 bytes
 14518 ;; Hardware stack levels used: 1
 14519 ;; Hardware stack levels required when called: 7
 14520 ;; This function calls:
 14521 ;;		Nothing
 14522 ;; This function is called by:
 14523 ;;		_I2C_Close
 14524 ;;		_I2C_SetTimeOut
 14525 ;; This function uses a non-reentrant model
 14526 ;;
 14527                           
 14528     12BC                     _I2C_MasterDisableIrq:	
 14529                           ;psect for function _I2C_MasterDisableIrq
 14530                           
 14531     12BC                     l3543:	
 14532                           ;incstack = 0
 14533                           ; Regs used in _I2C_MasterDisableIrq: []
 14534                           
 14535                           
 14536                           ;i2c_master.c: 639: PIE1bits.SSP1IE = 0;
 14537     12BC  0021               	movlb	1	; select bank1
 14538     12BD  1191               	bcf	17,3	;volatile
 14539     12BE                     l697:
 14540     12BE  0008               	return
 14541     12BF                     __end_of_I2C_MasterDisableIrq:
 14542                           
 14543                           	psect	text57
 14544     12B9                     __ptext57:	
 14545 ;; *************** function _I2C_MasterClose *****************
 14546 ;; Defined at:
 14547 ;;		line 558 in file "mcc_generated_files/i2c_master.c"
 14548 ;; Parameters:    Size  Location     Type
 14549 ;;		None
 14550 ;; Auto vars:     Size  Location     Type
 14551 ;;		None
 14552 ;; Return value:  Size  Location     Type
 14553 ;;                  1    wreg      void 
 14554 ;; Registers used:
 14555 ;;		None
 14556 ;; Tracked objects:
 14557 ;;		On entry : 0/0
 14558 ;;		On exit  : 0/0
 14559 ;;		Unchanged: 0/0
 14560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14564 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14565 ;;Total ram usage:        0 bytes
 14566 ;; Hardware stack levels used: 1
 14567 ;; Hardware stack levels required when called: 7
 14568 ;; This function calls:
 14569 ;;		Nothing
 14570 ;; This function is called by:
 14571 ;;		_I2C_Close
 14572 ;; This function uses a non-reentrant model
 14573 ;;
 14574                           
 14575     12B9                     _I2C_MasterClose:	
 14576                           ;psect for function _I2C_MasterClose
 14577                           
 14578     12B9                     l3545:	
 14579                           ;incstack = 0
 14580                           ; Regs used in _I2C_MasterClose: []
 14581                           
 14582                           
 14583                           ;i2c_master.c: 561: SSP1CON1bits.SSPEN = 0;
 14584     12B9  0024               	movlb	4	; select bank4
 14585     12BA  1295               	bcf	21,5	;volatile
 14586     12BB                     l652:
 14587     12BB  0008               	return
 14588     12BC                     __end_of_I2C_MasterClose:
 14589                           
 14590                           	psect	text58
 14591     12B6                     __ptext58:	
 14592 ;; *************** function _I2C_MasterClearIrq *****************
 14593 ;; Defined at:
 14594 ;;		line 642 in file "mcc_generated_files/i2c_master.c"
 14595 ;; Parameters:    Size  Location     Type
 14596 ;;		None
 14597 ;; Auto vars:     Size  Location     Type
 14598 ;;		None
 14599 ;; Return value:  Size  Location     Type
 14600 ;;                  1    wreg      void 
 14601 ;; Registers used:
 14602 ;;		None
 14603 ;; Tracked objects:
 14604 ;;		On entry : 0/0
 14605 ;;		On exit  : 0/0
 14606 ;;		Unchanged: 0/0
 14607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14611 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14612 ;;Total ram usage:        0 bytes
 14613 ;; Hardware stack levels used: 1
 14614 ;; Hardware stack levels required when called: 7
 14615 ;; This function calls:
 14616 ;;		Nothing
 14617 ;; This function is called by:
 14618 ;;		_I2C_Open
 14619 ;;		_I2C_Close
 14620 ;; This function uses a non-reentrant model
 14621 ;;
 14622                           
 14623     12B6                     _I2C_MasterClearIrq:	
 14624                           ;psect for function _I2C_MasterClearIrq
 14625                           
 14626     12B6                     l3527:	
 14627                           ;incstack = 0
 14628                           ; Regs used in _I2C_MasterClearIrq: []
 14629                           
 14630                           
 14631                           ;i2c_master.c: 644: PIR1bits.SSP1IF = 0;
 14632     12B6  0020               	movlb	0	; select bank0
 14633     12B7  1191               	bcf	17,3	;volatile
 14634     12B8                     l700:
 14635     12B8  0008               	return
 14636     12B9                     __end_of_I2C_MasterClearIrq:
 14637                           
 14638                           	psect	intentry
 14639     0004                     __pintentry:	
 14640 ;; *************** function _INTERRUPT_InterruptManager *****************
 14641 ;; Defined at:
 14642 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 14643 ;; Parameters:    Size  Location     Type
 14644 ;;		None
 14645 ;; Auto vars:     Size  Location     Type
 14646 ;;		None
 14647 ;; Return value:  Size  Location     Type
 14648 ;;                  1    wreg      void 
 14649 ;; Registers used:
 14650 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14651 ;; Tracked objects:
 14652 ;;		On entry : 0/0
 14653 ;;		On exit  : 0/0
 14654 ;;		Unchanged: 0/0
 14655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14659 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14660 ;;Total ram usage:        0 bytes
 14661 ;; Hardware stack levels used: 1
 14662 ;; Hardware stack levels required when called: 6
 14663 ;; This function calls:
 14664 ;;		NULL
 14665 ;;		_I2C_MasterIsr
 14666 ;;		_TMR2_ISR
 14667 ;; This function is called by:
 14668 ;;		Interrupt level 1
 14669 ;; This function uses a non-reentrant model
 14670 ;;
 14671                           
 14672     0004                     _INTERRUPT_InterruptManager:
 14673                           
 14674                           ;incstack = 0
 14675     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 14676                           
 14677                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14678     0005  3180               	pagesel	$
 14679     0006                     i1l4973:
 14680                           
 14681                           ;interrupt_manager.c: 55: if(INTCONbits.PEIE == 1)
 14682     0006  1F0B               	btfss	11,6	;volatile
 14683     0007  2809               	goto	u406_21
 14684     0008  280A               	goto	u406_20
 14685     0009                     u406_21:
 14686     0009  2834               	goto	i1l737
 14687     000A                     u406_20:
 14688     000A                     i1l4975:
 14689                           
 14690                           ;interrupt_manager.c: 56: {;interrupt_manager.c: 57: if(PIE2bits.BCL1IE == 1 && PIR2bits
      +                          .BCL1IF == 1)
 14691     000A  0021               	movlb	1	; select bank1
 14692     000B  1D92               	btfss	18,3	;volatile
 14693     000C  280E               	goto	u407_21
 14694     000D  280F               	goto	u407_20
 14695     000E                     u407_21:
 14696     000E  281B               	goto	i1l730
 14697     000F                     u407_20:
 14698     000F                     i1l4977:
 14699     000F  0020               	movlb	0	; select bank0
 14700     0010  1D92               	btfss	18,3	;volatile
 14701     0011  2813               	goto	u408_21
 14702     0012  2814               	goto	u408_20
 14703     0013                     u408_21:
 14704     0013  281B               	goto	i1l730
 14705     0014                     u408_20:
 14706     0014                     i1l4979:
 14707                           
 14708                           ;interrupt_manager.c: 58: {;interrupt_manager.c: 59: MSSP_InterruptHandler();
 14709     0014  0021               	movlb	1	; select bank1
 14710     0015  0855               	movf	(_MSSP_InterruptHandler+1)^(0+128),w
 14711     0016  008A               	movwf	10
 14712     0017  0854               	movf	_MSSP_InterruptHandler^(0+128),w
 14713     0018  000A               	callw
 14714     0019  3180               	pagesel	$
 14715                           
 14716                           ;interrupt_manager.c: 60: }
 14717     001A  2834               	goto	i1l737
 14718     001B                     i1l730:
 14719                           
 14720                           ;interrupt_manager.c: 61: else if(PIE1bits.SSP1IE == 1 && PIR1bits.SSP1IF == 1)
 14721     001B  0021               	movlb	1	; select bank1
 14722     001C  1D91               	btfss	17,3	;volatile
 14723     001D  281F               	goto	u409_21
 14724     001E  2820               	goto	u409_20
 14725     001F                     u409_21:
 14726     001F  2826               	goto	i1l732
 14727     0020                     u409_20:
 14728     0020                     i1l4981:
 14729     0020  0020               	movlb	0	; select bank0
 14730     0021  1D91               	btfss	17,3	;volatile
 14731     0022  2824               	goto	u410_21
 14732     0023  2825               	goto	u410_20
 14733     0024                     u410_21:
 14734     0024  2826               	goto	i1l732
 14735     0025                     u410_20:
 14736     0025  2814               	goto	i1l4979
 14737     0026                     i1l732:
 14738                           
 14739                           ;interrupt_manager.c: 65: else if(PIE1bits.TMR2IE == 1 && PIR1bits.TMR2IF == 1)
 14740     0026  0021               	movlb	1	; select bank1
 14741     0027  1C91               	btfss	17,1	;volatile
 14742     0028  282A               	goto	u411_21
 14743     0029  282B               	goto	u411_20
 14744     002A                     u411_21:
 14745     002A  2834               	goto	i1l731
 14746     002B                     u411_20:
 14747     002B                     i1l4985:
 14748     002B  0020               	movlb	0	; select bank0
 14749     002C  1C91               	btfss	17,1	;volatile
 14750     002D  282F               	goto	u412_21
 14751     002E  2830               	goto	u412_20
 14752     002F                     u412_21:
 14753     002F  2834               	goto	i1l731
 14754     0030                     u412_20:
 14755     0030                     i1l4987:
 14756                           
 14757                           ;interrupt_manager.c: 66: {;interrupt_manager.c: 67: TMR2_ISR();
 14758     0030  3193  2324  3180   	fcall	_TMR2_ISR
 14759                           
 14760                           ;interrupt_manager.c: 68: }
 14761     0033  2834               	goto	i1l737
 14762     0034                     i1l731:
 14763     0034                     i1l737:	
 14764                           ;interrupt_manager.c: 72: };interrupt_manager.c: 73: }
 14765                           
 14766     0034  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 14767     0035  0009               	retfie
 14768     0036                     __end_of_INTERRUPT_InterruptManager:
 14769                           
 14770                           	psect	text60
 14771     1324                     __ptext60:	
 14772 ;; *************** function _TMR2_ISR *****************
 14773 ;; Defined at:
 14774 ;;		line 165 in file "mcc_generated_files/tmr2.c"
 14775 ;; Parameters:    Size  Location     Type
 14776 ;;		None
 14777 ;; Auto vars:     Size  Location     Type
 14778 ;;		None
 14779 ;; Return value:  Size  Location     Type
 14780 ;;                  1    wreg      void 
 14781 ;; Registers used:
 14782 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14783 ;; Tracked objects:
 14784 ;;		On entry : 0/0
 14785 ;;		On exit  : 0/0
 14786 ;;		Unchanged: 0/0
 14787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14791 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14792 ;;Total ram usage:        0 bytes
 14793 ;; Hardware stack levels used: 1
 14794 ;; Hardware stack levels required when called: 4
 14795 ;; This function calls:
 14796 ;;		_TMR2_CallBack
 14797 ;; This function is called by:
 14798 ;;		_INTERRUPT_InterruptManager
 14799 ;; This function uses a non-reentrant model
 14800 ;;
 14801                           
 14802     1324                     _TMR2_ISR:	
 14803                           ;psect for function _TMR2_ISR
 14804                           
 14805     1324                     i1l4779:	
 14806                           ;incstack = 0
 14807                           ; Regs used in _TMR2_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14808                           
 14809                           
 14810                           ;tmr2.c: 169: PIR1bits.TMR2IF = 0;
 14811     1324  0020               	movlb	0	; select bank0
 14812     1325  1091               	bcf	17,1	;volatile
 14813     1326                     i1l4781:
 14814                           
 14815                           ;tmr2.c: 173: TMR2_CallBack();
 14816     1326  3193  23C8  3193   	fcall	_TMR2_CallBack
 14817     1329                     i1l361:
 14818     1329  0008               	return
 14819     132A                     __end_of_TMR2_ISR:
 14820                           
 14821                           	psect	text61
 14822     13C8                     __ptext61:	
 14823 ;; *************** function _TMR2_CallBack *****************
 14824 ;; Defined at:
 14825 ;;		line 176 in file "mcc_generated_files/tmr2.c"
 14826 ;; Parameters:    Size  Location     Type
 14827 ;;		None
 14828 ;; Auto vars:     Size  Location     Type
 14829 ;;		None
 14830 ;; Return value:  Size  Location     Type
 14831 ;;                  1    wreg      void 
 14832 ;; Registers used:
 14833 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14834 ;; Tracked objects:
 14835 ;;		On entry : 0/0
 14836 ;;		On exit  : 0/0
 14837 ;;		Unchanged: 0/0
 14838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14842 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14843 ;;Total ram usage:        0 bytes
 14844 ;; Hardware stack levels used: 1
 14845 ;; Hardware stack levels required when called: 3
 14846 ;; This function calls:
 14847 ;;		NULL
 14848 ;;		_TMR2_DefaultInterruptHandler
 14849 ;;		_TMR2_Process
 14850 ;; This function is called by:
 14851 ;;		_TMR2_ISR
 14852 ;; This function uses a non-reentrant model
 14853 ;;
 14854                           
 14855     13C8                     _TMR2_CallBack:	
 14856                           ;psect for function _TMR2_CallBack
 14857                           
 14858     13C8                     i1l4563:	
 14859                           ;incstack = 0
 14860                           ; Regs used in _TMR2_CallBack: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14861                           
 14862                           
 14863                           ;tmr2.c: 180: if(TMR2_InterruptHandler)
 14864     13C8  0022               	movlb	2	; select bank2
 14865     13C9  086D               	movf	_TMR2_InterruptHandler^(0+256),w
 14866     13CA  046E               	iorwf	(_TMR2_InterruptHandler+1)^(0+256),w
 14867     13CB  1903               	btfsc	3,2
 14868     13CC  2BCE               	goto	u352_21
 14869     13CD  2BCF               	goto	u352_20
 14870     13CE                     u352_21:
 14871     13CE  2BD4               	goto	i1l365
 14872     13CF                     u352_20:
 14873     13CF                     i1l4565:
 14874                           
 14875                           ;tmr2.c: 181: {;tmr2.c: 182: TMR2_InterruptHandler();
 14876     13CF  086E               	movf	(_TMR2_InterruptHandler+1)^(0+256),w
 14877     13D0  008A               	movwf	10
 14878     13D1  086D               	movf	_TMR2_InterruptHandler^(0+256),w
 14879     13D2  000A               	callw
 14880     13D3  3193               	pagesel	$
 14881     13D4                     i1l365:
 14882     13D4  0008               	return
 14883     13D5                     __end_of_TMR2_CallBack:
 14884                           
 14885                           	psect	text62
 14886     129B                     __ptext62:	
 14887 ;; *************** function _TMR2_DefaultInterruptHandler *****************
 14888 ;; Defined at:
 14889 ;;		line 190 in file "mcc_generated_files/tmr2.c"
 14890 ;; Parameters:    Size  Location     Type
 14891 ;;		None
 14892 ;; Auto vars:     Size  Location     Type
 14893 ;;		None
 14894 ;; Return value:  Size  Location     Type
 14895 ;;                  1    wreg      void 
 14896 ;; Registers used:
 14897 ;;		None
 14898 ;; Tracked objects:
 14899 ;;		On entry : 0/0
 14900 ;;		On exit  : 0/0
 14901 ;;		Unchanged: 0/0
 14902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14903 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14906 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14907 ;;Total ram usage:        0 bytes
 14908 ;; Hardware stack levels used: 1
 14909 ;; This function calls:
 14910 ;;		Nothing
 14911 ;; This function is called by:
 14912 ;;		_TMR2_Initialize
 14913 ;;		_TMR2_CallBack
 14914 ;; This function uses a non-reentrant model
 14915 ;;
 14916                           
 14917     129B                     _TMR2_DefaultInterruptHandler:	
 14918                           ;psect for function _TMR2_DefaultInterruptHandler
 14919                           
 14920     129B                     i1l371:	
 14921                           ;incstack = 0
 14922                           ; Regs used in _TMR2_DefaultInterruptHandler: []
 14923                           
 14924     129B  0008               	return
 14925     129C                     __end_of_TMR2_DefaultInterruptHandler:
 14926                           
 14927                           	psect	text63
 14928     0507                     __ptext63:	
 14929 ;; *************** function _TMR2_Process *****************
 14930 ;; Defined at:
 14931 ;;		line 389 in file "main.c"
 14932 ;; Parameters:    Size  Location     Type
 14933 ;;		None
 14934 ;; Auto vars:     Size  Location     Type
 14935 ;;		None
 14936 ;; Return value:  Size  Location     Type
 14937 ;;                  1    wreg      void 
 14938 ;; Registers used:
 14939 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14940 ;; Tracked objects:
 14941 ;;		On entry : 0/0
 14942 ;;		On exit  : 0/0
 14943 ;;		Unchanged: 0/0
 14944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14948 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14949 ;;Total ram usage:        0 bytes
 14950 ;; Hardware stack levels used: 1
 14951 ;; Hardware stack levels required when called: 2
 14952 ;; This function calls:
 14953 ;;		_Alm_Adj
 14954 ;;		_Time_Adj
 14955 ;;		i1_Pen_swipe
 14956 ;;		i1_Pen_swipe2
 14957 ;; This function is called by:
 14958 ;;		_main
 14959 ;;		_TMR2_CallBack
 14960 ;; This function uses a non-reentrant model
 14961 ;;
 14962                           
 14963     0507                     _TMR2_Process:	
 14964                           ;psect for function _TMR2_Process
 14965                           
 14966     0507                     i1l4121:	
 14967                           ;incstack = 0
 14968                           ; Regs used in _TMR2_Process: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14969                           
 14970                           
 14971                           ;main.c: 391: count++;
 14972     0507  3001               	movlw	1
 14973     0508  0022               	movlb	2	; select bank2
 14974     0509  07EB               	addwf	_count^(0+256),f
 14975     050A  3000               	movlw	0
 14976     050B  3DEC               	addwfc	(_count+1)^(0+256),f
 14977     050C                     i1l4123:
 14978                           
 14979                           ;main.c: 396: if(adj_mode==0){
 14980     050C  0021               	movlb	1	; select bank1
 14981     050D  0842               	movf	_adj_mode^(0+128),w
 14982     050E  0443               	iorwf	(_adj_mode+1)^(0+128),w
 14983     050F  1D03               	btfss	3,2
 14984     0510  2D12               	goto	u249_21
 14985     0511  2D13               	goto	u249_20
 14986     0512                     u249_21:
 14987     0512  2DC1               	goto	i1l4187
 14988     0513                     u249_20:
 14989     0513                     i1l4125:
 14990                           
 14991                           ;main.c: 397: if(AA==1 & BB==0 & CC==0 & DD==0){
 14992     0513  0020               	movlb	0	; select bank0
 14993     0514  035D               	decf	_AA,w
 14994     0515  1D03               	btfss	3,2
 14995     0516  2D18               	goto	u250_21
 14996     0517  2D19               	goto	u250_20
 14997     0518                     u250_21:
 14998     0518  2D2F               	goto	i1l4135
 14999     0519                     u250_20:
 15000     0519                     i1l4127:
 15001     0519  085C               	movf	_BB,w
 15002     051A  1D03               	btfss	3,2
 15003     051B  2D1D               	goto	u251_21
 15004     051C  2D1E               	goto	u251_20
 15005     051D                     u251_21:
 15006     051D  2D2F               	goto	i1l4135
 15007     051E                     u251_20:
 15008     051E                     i1l4129:
 15009     051E  085B               	movf	_CC,w
 15010     051F  1D03               	btfss	3,2
 15011     0520  2D22               	goto	u252_21
 15012     0521  2D23               	goto	u252_20
 15013     0522                     u252_21:
 15014     0522  2D2F               	goto	i1l4135
 15015     0523                     u252_20:
 15016     0523                     i1l4131:
 15017     0523  085A               	movf	_DD,w
 15018     0524  1D03               	btfss	3,2
 15019     0525  2D27               	goto	u253_21
 15020     0526  2D28               	goto	u253_20
 15021     0527                     u253_21:
 15022     0527  2D2F               	goto	i1l4135
 15023     0528                     u253_20:
 15024     0528                     i1l4133:
 15025                           
 15026                           ;main.c: 398: Pen_swipe(2500);
 15027     0528  30C4               	movlw	196
 15028     0529  00F2               	movwf	i1Pen_swipe@set_duty
 15029     052A  3009               	movlw	9
 15030     052B  00F3               	movwf	i1Pen_swipe@set_duty+1
 15031     052C  3194  2458  3185   	fcall	i1_Pen_swipe
 15032     052F                     i1l4135:
 15033                           
 15034                           ;main.c: 399: };main.c: 400: if(AA==0 & BB==1 & CC==0 & DD==0){
 15035     052F  0020               	movlb	0	; select bank0
 15036     0530  085D               	movf	_AA,w
 15037     0531  1D03               	btfss	3,2
 15038     0532  2D34               	goto	u254_21
 15039     0533  2D35               	goto	u254_20
 15040     0534                     u254_21:
 15041     0534  2D4B               	goto	i1l4145
 15042     0535                     u254_20:
 15043     0535                     i1l4137:
 15044     0535  035C               	decf	_BB,w
 15045     0536  1D03               	btfss	3,2
 15046     0537  2D39               	goto	u255_21
 15047     0538  2D3A               	goto	u255_20
 15048     0539                     u255_21:
 15049     0539  2D4B               	goto	i1l4145
 15050     053A                     u255_20:
 15051     053A                     i1l4139:
 15052     053A  085B               	movf	_CC,w
 15053     053B  1D03               	btfss	3,2
 15054     053C  2D3E               	goto	u256_21
 15055     053D  2D3F               	goto	u256_20
 15056     053E                     u256_21:
 15057     053E  2D4B               	goto	i1l4145
 15058     053F                     u256_20:
 15059     053F                     i1l4141:
 15060     053F  085A               	movf	_DD,w
 15061     0540  1D03               	btfss	3,2
 15062     0541  2D43               	goto	u257_21
 15063     0542  2D44               	goto	u257_20
 15064     0543                     u257_21:
 15065     0543  2D4B               	goto	i1l4145
 15066     0544                     u257_20:
 15067     0544                     i1l4143:
 15068                           
 15069                           ;main.c: 401: Pen_swipe(1900);
 15070     0544  306C               	movlw	108
 15071     0545  00F2               	movwf	i1Pen_swipe@set_duty
 15072     0546  3007               	movlw	7
 15073     0547  00F3               	movwf	i1Pen_swipe@set_duty+1
 15074     0548  3194  2458  3185   	fcall	i1_Pen_swipe
 15075     054B                     i1l4145:
 15076                           
 15077                           ;main.c: 402: };main.c: 403: if(AA==0 & BB==0 & CC==1 & DD==0){
 15078     054B  0020               	movlb	0	; select bank0
 15079     054C  085D               	movf	_AA,w
 15080     054D  1D03               	btfss	3,2
 15081     054E  2D50               	goto	u258_21
 15082     054F  2D51               	goto	u258_20
 15083     0550                     u258_21:
 15084     0550  2D67               	goto	i1l4155
 15085     0551                     u258_20:
 15086     0551                     i1l4147:
 15087     0551  085C               	movf	_BB,w
 15088     0552  1D03               	btfss	3,2
 15089     0553  2D55               	goto	u259_21
 15090     0554  2D56               	goto	u259_20
 15091     0555                     u259_21:
 15092     0555  2D67               	goto	i1l4155
 15093     0556                     u259_20:
 15094     0556                     i1l4149:
 15095     0556  035B               	decf	_CC,w
 15096     0557  1D03               	btfss	3,2
 15097     0558  2D5A               	goto	u260_21
 15098     0559  2D5B               	goto	u260_20
 15099     055A                     u260_21:
 15100     055A  2D67               	goto	i1l4155
 15101     055B                     u260_20:
 15102     055B                     i1l4151:
 15103     055B  085A               	movf	_DD,w
 15104     055C  1D03               	btfss	3,2
 15105     055D  2D5F               	goto	u261_21
 15106     055E  2D60               	goto	u261_20
 15107     055F                     u261_21:
 15108     055F  2D67               	goto	i1l4155
 15109     0560                     u261_20:
 15110     0560                     i1l4153:
 15111                           
 15112                           ;main.c: 404: Pen_swipe2(2500);
 15113     0560  30C4               	movlw	196
 15114     0561  00F2               	movwf	i1Pen_swipe2@set_duty
 15115     0562  3009               	movlw	9
 15116     0563  00F3               	movwf	i1Pen_swipe2@set_duty+1
 15117     0564  3194  246B  3185   	fcall	i1_Pen_swipe2
 15118     0567                     i1l4155:
 15119                           
 15120                           ;main.c: 405: };main.c: 406: if(AA==0 & BB==0 & CC==0 & DD==1){
 15121     0567  0020               	movlb	0	; select bank0
 15122     0568  085D               	movf	_AA,w
 15123     0569  1D03               	btfss	3,2
 15124     056A  2D6C               	goto	u262_21
 15125     056B  2D6D               	goto	u262_20
 15126     056C                     u262_21:
 15127     056C  2D83               	goto	i1l4165
 15128     056D                     u262_20:
 15129     056D                     i1l4157:
 15130     056D  085C               	movf	_BB,w
 15131     056E  1D03               	btfss	3,2
 15132     056F  2D71               	goto	u263_21
 15133     0570  2D72               	goto	u263_20
 15134     0571                     u263_21:
 15135     0571  2D83               	goto	i1l4165
 15136     0572                     u263_20:
 15137     0572                     i1l4159:
 15138     0572  085B               	movf	_CC,w
 15139     0573  1D03               	btfss	3,2
 15140     0574  2D76               	goto	u264_21
 15141     0575  2D77               	goto	u264_20
 15142     0576                     u264_21:
 15143     0576  2D83               	goto	i1l4165
 15144     0577                     u264_20:
 15145     0577                     i1l4161:
 15146     0577  035A               	decf	_DD,w
 15147     0578  1D03               	btfss	3,2
 15148     0579  2D7B               	goto	u265_21
 15149     057A  2D7C               	goto	u265_20
 15150     057B                     u265_21:
 15151     057B  2D83               	goto	i1l4165
 15152     057C                     u265_20:
 15153     057C                     i1l4163:
 15154                           
 15155                           ;main.c: 407: Pen_swipe2(1900);
 15156     057C  306C               	movlw	108
 15157     057D  00F2               	movwf	i1Pen_swipe2@set_duty
 15158     057E  3007               	movlw	7
 15159     057F  00F3               	movwf	i1Pen_swipe2@set_duty+1
 15160     0580  3194  246B  3185   	fcall	i1_Pen_swipe2
 15161     0583                     i1l4165:
 15162                           
 15163                           ;main.c: 408: };main.c: 409: if(AA==1 & BB==0 & CC==0 & DD==1){
 15164     0583  0020               	movlb	0	; select bank0
 15165     0584  035D               	decf	_AA,w
 15166     0585  1D03               	btfss	3,2
 15167     0586  2D88               	goto	u266_21
 15168     0587  2D89               	goto	u266_20
 15169     0588                     u266_21:
 15170     0588  2DA1               	goto	i1l4175
 15171     0589                     u266_20:
 15172     0589                     i1l4167:
 15173     0589  085C               	movf	_BB,w
 15174     058A  1D03               	btfss	3,2
 15175     058B  2D8D               	goto	u267_21
 15176     058C  2D8E               	goto	u267_20
 15177     058D                     u267_21:
 15178     058D  2DA1               	goto	i1l4175
 15179     058E                     u267_20:
 15180     058E                     i1l4169:
 15181     058E  085B               	movf	_CC,w
 15182     058F  1D03               	btfss	3,2
 15183     0590  2D92               	goto	u268_21
 15184     0591  2D93               	goto	u268_20
 15185     0592                     u268_21:
 15186     0592  2DA1               	goto	i1l4175
 15187     0593                     u268_20:
 15188     0593                     i1l4171:
 15189     0593  035A               	decf	_DD,w
 15190     0594  1D03               	btfss	3,2
 15191     0595  2D97               	goto	u269_21
 15192     0596  2D98               	goto	u269_20
 15193     0597                     u269_21:
 15194     0597  2DA1               	goto	i1l4175
 15195     0598                     u269_20:
 15196     0598                     i1l4173:
 15197                           
 15198                           ;main.c: 410: kind=2;
 15199     0598  3002               	movlw	2
 15200     0599  00D8               	movwf	_kind
 15201     059A  3000               	movlw	0
 15202     059B  00D9               	movwf	_kind+1
 15203                           
 15204                           ;main.c: 411: adj_mode=1;
 15205     059C  3001               	movlw	1
 15206     059D  0021               	movlb	1	; select bank1
 15207     059E  00C2               	movwf	_adj_mode^(0+128)
 15208     059F  3000               	movlw	0
 15209     05A0  00C3               	movwf	(_adj_mode^(0+128)+1)
 15210     05A1                     i1l4175:
 15211                           
 15212                           ;main.c: 412: };main.c: 413: if(AA==1 & BB==0 & CC==1 & DD==0){
 15213     05A1  0020               	movlb	0	; select bank0
 15214     05A2  035D               	decf	_AA,w
 15215     05A3  1D03               	btfss	3,2
 15216     05A4  2DA6               	goto	u270_21
 15217     05A5  2DA7               	goto	u270_20
 15218     05A6                     u270_21:
 15219     05A6  2EE3               	goto	i1l1070
 15220     05A7                     u270_20:
 15221     05A7                     i1l4177:
 15222     05A7  085C               	movf	_BB,w
 15223     05A8  1D03               	btfss	3,2
 15224     05A9  2DAB               	goto	u271_21
 15225     05AA  2DAC               	goto	u271_20
 15226     05AB                     u271_21:
 15227     05AB  2EE3               	goto	i1l1070
 15228     05AC                     u271_20:
 15229     05AC                     i1l4179:
 15230     05AC  035B               	decf	_CC,w
 15231     05AD  1D03               	btfss	3,2
 15232     05AE  2DB0               	goto	u272_21
 15233     05AF  2DB1               	goto	u272_20
 15234     05B0                     u272_21:
 15235     05B0  2EE3               	goto	i1l1070
 15236     05B1                     u272_20:
 15237     05B1                     i1l4181:
 15238     05B1  085A               	movf	_DD,w
 15239     05B2  1D03               	btfss	3,2
 15240     05B3  2DB5               	goto	u273_21
 15241     05B4  2DB6               	goto	u273_20
 15242     05B5                     u273_21:
 15243     05B5  2EE3               	goto	i1l1070
 15244     05B6                     u273_20:
 15245     05B6                     i1l4183:
 15246                           
 15247                           ;main.c: 414: kind=2;
 15248     05B6  3002               	movlw	2
 15249     05B7  00D8               	movwf	_kind
 15250     05B8  3000               	movlw	0
 15251     05B9  00D9               	movwf	_kind+1
 15252                           
 15253                           ;main.c: 415: adj_mode=2;
 15254     05BA  3002               	movlw	2
 15255     05BB  0021               	movlb	1	; select bank1
 15256     05BC  00C2               	movwf	_adj_mode^(0+128)
 15257     05BD  3000               	movlw	0
 15258     05BE  00C3               	movwf	(_adj_mode^(0+128)+1)
 15259     05BF                     i1l4185:
 15260                           
 15261                           ;main.c: 416: alm_active=0;
 15262     05BF  01DA               	clrf	_alm_active^(0+128)
 15263     05C0  2EE3               	goto	i1l1070
 15264     05C1                     i1l4187:
 15265                           
 15266                           ;main.c: 421: else if(adj_mode==1){
 15267     05C1  0342               	decf	_adj_mode^(0+128),w
 15268     05C2  0443               	iorwf	(_adj_mode+1)^(0+128),w
 15269     05C3  1D03               	btfss	3,2
 15270     05C4  2DC6               	goto	u274_21
 15271     05C5  2DC7               	goto	u274_20
 15272     05C6                     u274_21:
 15273     05C6  2E52               	goto	i1l4241
 15274     05C7                     u274_20:
 15275     05C7                     i1l4189:
 15276                           
 15277                           ;main.c: 422: if(AA==1 & BB==0 & CC==0 & DD==0){
 15278     05C7  0020               	movlb	0	; select bank0
 15279     05C8  035D               	decf	_AA,w
 15280     05C9  1D03               	btfss	3,2
 15281     05CA  2DCC               	goto	u275_21
 15282     05CB  2DCD               	goto	u275_20
 15283     05CC                     u275_21:
 15284     05CC  2DE3               	goto	i1l4199
 15285     05CD                     u275_20:
 15286     05CD                     i1l4191:
 15287     05CD  085C               	movf	_BB,w
 15288     05CE  1D03               	btfss	3,2
 15289     05CF  2DD1               	goto	u276_21
 15290     05D0  2DD2               	goto	u276_20
 15291     05D1                     u276_21:
 15292     05D1  2DE3               	goto	i1l4199
 15293     05D2                     u276_20:
 15294     05D2                     i1l4193:
 15295     05D2  085B               	movf	_CC,w
 15296     05D3  1D03               	btfss	3,2
 15297     05D4  2DD6               	goto	u277_21
 15298     05D5  2DD7               	goto	u277_20
 15299     05D6                     u277_21:
 15300     05D6  2DE3               	goto	i1l4199
 15301     05D7                     u277_20:
 15302     05D7                     i1l4195:
 15303     05D7  085A               	movf	_DD,w
 15304     05D8  1D03               	btfss	3,2
 15305     05D9  2DDB               	goto	u278_21
 15306     05DA  2DDC               	goto	u278_20
 15307     05DB                     u278_21:
 15308     05DB  2DE3               	goto	i1l4199
 15309     05DC                     u278_20:
 15310     05DC                     i1l4197:
 15311                           
 15312                           ;main.c: 423: Time_Adj(1);
 15313     05DC  3001               	movlw	1
 15314     05DD  00F4               	movwf	Time_Adj@num
 15315     05DE  3000               	movlw	0
 15316     05DF  00F5               	movwf	Time_Adj@num+1
 15317     05E0  318D  259B  3185   	fcall	_Time_Adj
 15318     05E3                     i1l4199:
 15319                           
 15320                           ;main.c: 424: };main.c: 425: if(AA==0 & BB==1 & CC==0 & DD==0){
 15321     05E3  0020               	movlb	0	; select bank0
 15322     05E4  085D               	movf	_AA,w
 15323     05E5  1D03               	btfss	3,2
 15324     05E6  2DE8               	goto	u279_21
 15325     05E7  2DE9               	goto	u279_20
 15326     05E8                     u279_21:
 15327     05E8  2DFF               	goto	i1l4209
 15328     05E9                     u279_20:
 15329     05E9                     i1l4201:
 15330     05E9  035C               	decf	_BB,w
 15331     05EA  1D03               	btfss	3,2
 15332     05EB  2DED               	goto	u280_21
 15333     05EC  2DEE               	goto	u280_20
 15334     05ED                     u280_21:
 15335     05ED  2DFF               	goto	i1l4209
 15336     05EE                     u280_20:
 15337     05EE                     i1l4203:
 15338     05EE  085B               	movf	_CC,w
 15339     05EF  1D03               	btfss	3,2
 15340     05F0  2DF2               	goto	u281_21
 15341     05F1  2DF3               	goto	u281_20
 15342     05F2                     u281_21:
 15343     05F2  2DFF               	goto	i1l4209
 15344     05F3                     u281_20:
 15345     05F3                     i1l4205:
 15346     05F3  085A               	movf	_DD,w
 15347     05F4  1D03               	btfss	3,2
 15348     05F5  2DF7               	goto	u282_21
 15349     05F6  2DF8               	goto	u282_20
 15350     05F7                     u282_21:
 15351     05F7  2DFF               	goto	i1l4209
 15352     05F8                     u282_20:
 15353     05F8                     i1l4207:
 15354                           
 15355                           ;main.c: 426: Time_Adj(2);
 15356     05F8  3002               	movlw	2
 15357     05F9  00F4               	movwf	Time_Adj@num
 15358     05FA  3000               	movlw	0
 15359     05FB  00F5               	movwf	Time_Adj@num+1
 15360     05FC  318D  259B  3185   	fcall	_Time_Adj
 15361     05FF                     i1l4209:
 15362                           
 15363                           ;main.c: 427: };main.c: 428: if(AA==0 & BB==0 & CC==1 & DD==0){
 15364     05FF  0020               	movlb	0	; select bank0
 15365     0600  085D               	movf	_AA,w
 15366     0601  1D03               	btfss	3,2
 15367     0602  2E04               	goto	u283_21
 15368     0603  2E05               	goto	u283_20
 15369     0604                     u283_21:
 15370     0604  2E1B               	goto	i1l4219
 15371     0605                     u283_20:
 15372     0605                     i1l4211:
 15373     0605  085C               	movf	_BB,w
 15374     0606  1D03               	btfss	3,2
 15375     0607  2E09               	goto	u284_21
 15376     0608  2E0A               	goto	u284_20
 15377     0609                     u284_21:
 15378     0609  2E1B               	goto	i1l4219
 15379     060A                     u284_20:
 15380     060A                     i1l4213:
 15381     060A  035B               	decf	_CC,w
 15382     060B  1D03               	btfss	3,2
 15383     060C  2E0E               	goto	u285_21
 15384     060D  2E0F               	goto	u285_20
 15385     060E                     u285_21:
 15386     060E  2E1B               	goto	i1l4219
 15387     060F                     u285_20:
 15388     060F                     i1l4215:
 15389     060F  085A               	movf	_DD,w
 15390     0610  1D03               	btfss	3,2
 15391     0611  2E13               	goto	u286_21
 15392     0612  2E14               	goto	u286_20
 15393     0613                     u286_21:
 15394     0613  2E1B               	goto	i1l4219
 15395     0614                     u286_20:
 15396     0614                     i1l4217:
 15397                           
 15398                           ;main.c: 429: Time_Adj(3);
 15399     0614  3003               	movlw	3
 15400     0615  00F4               	movwf	Time_Adj@num
 15401     0616  3000               	movlw	0
 15402     0617  00F5               	movwf	Time_Adj@num+1
 15403     0618  318D  259B  3185   	fcall	_Time_Adj
 15404     061B                     i1l4219:
 15405                           
 15406                           ;main.c: 430: };main.c: 431: if(AA==0 & BB==0 & CC==0 & DD==1){
 15407     061B  0020               	movlb	0	; select bank0
 15408     061C  085D               	movf	_AA,w
 15409     061D  1D03               	btfss	3,2
 15410     061E  2E20               	goto	u287_21
 15411     061F  2E21               	goto	u287_20
 15412     0620                     u287_21:
 15413     0620  2E37               	goto	i1l4229
 15414     0621                     u287_20:
 15415     0621                     i1l4221:
 15416     0621  085C               	movf	_BB,w
 15417     0622  1D03               	btfss	3,2
 15418     0623  2E25               	goto	u288_21
 15419     0624  2E26               	goto	u288_20
 15420     0625                     u288_21:
 15421     0625  2E37               	goto	i1l4229
 15422     0626                     u288_20:
 15423     0626                     i1l4223:
 15424     0626  085B               	movf	_CC,w
 15425     0627  1D03               	btfss	3,2
 15426     0628  2E2A               	goto	u289_21
 15427     0629  2E2B               	goto	u289_20
 15428     062A                     u289_21:
 15429     062A  2E37               	goto	i1l4229
 15430     062B                     u289_20:
 15431     062B                     i1l4225:
 15432     062B  035A               	decf	_DD,w
 15433     062C  1D03               	btfss	3,2
 15434     062D  2E2F               	goto	u290_21
 15435     062E  2E30               	goto	u290_20
 15436     062F                     u290_21:
 15437     062F  2E37               	goto	i1l4229
 15438     0630                     u290_20:
 15439     0630                     i1l4227:
 15440                           
 15441                           ;main.c: 432: Time_Adj(4);
 15442     0630  3004               	movlw	4
 15443     0631  00F4               	movwf	Time_Adj@num
 15444     0632  3000               	movlw	0
 15445     0633  00F5               	movwf	Time_Adj@num+1
 15446     0634  318D  259B  3185   	fcall	_Time_Adj
 15447     0637                     i1l4229:
 15448                           
 15449                           ;main.c: 433: };main.c: 434: if(AA==1 & BB==1 & CC==0 & DD==0){
 15450     0637  0020               	movlb	0	; select bank0
 15451     0638  035D               	decf	_AA,w
 15452     0639  1D03               	btfss	3,2
 15453     063A  2E3C               	goto	u291_21
 15454     063B  2E3D               	goto	u291_20
 15455     063C                     u291_21:
 15456     063C  2EE3               	goto	i1l1070
 15457     063D                     u291_20:
 15458     063D                     i1l4231:
 15459     063D  035C               	decf	_BB,w
 15460     063E  1D03               	btfss	3,2
 15461     063F  2E41               	goto	u292_21
 15462     0640  2E42               	goto	u292_20
 15463     0641                     u292_21:
 15464     0641  2EE3               	goto	i1l1070
 15465     0642                     u292_20:
 15466     0642                     i1l4233:
 15467     0642  085B               	movf	_CC,w
 15468     0643  1D03               	btfss	3,2
 15469     0644  2E46               	goto	u293_21
 15470     0645  2E47               	goto	u293_20
 15471     0646                     u293_21:
 15472     0646  2EE3               	goto	i1l1070
 15473     0647                     u293_20:
 15474     0647                     i1l4235:
 15475     0647  085A               	movf	_DD,w
 15476     0648  1D03               	btfss	3,2
 15477     0649  2E4B               	goto	u294_21
 15478     064A  2E4C               	goto	u294_20
 15479     064B                     u294_21:
 15480     064B  2EE3               	goto	i1l1070
 15481     064C                     u294_20:
 15482     064C                     i1l4237:
 15483                           
 15484                           ;main.c: 435: adj_mode=0;
 15485     064C  0021               	movlb	1	; select bank1
 15486     064D  01C2               	clrf	_adj_mode^(0+128)
 15487     064E  01C3               	clrf	(_adj_mode+1)^(0+128)
 15488     064F                     i1l4239:
 15489                           
 15490                           ;main.c: 436: set_flg=1;
 15491     064F  01DC               	clrf	_set_flg^(0+128)
 15492     0650  0ADC               	incf	_set_flg^(0+128),f
 15493     0651  2EE3               	goto	i1l1070
 15494     0652                     i1l4241:
 15495                           
 15496                           ;main.c: 441: else if(adj_mode==2){
 15497     0652  3002               	movlw	2
 15498     0653  0642               	xorwf	_adj_mode^(0+128),w
 15499     0654  0443               	iorwf	(_adj_mode+1)^(0+128),w
 15500     0655  1D03               	btfss	3,2
 15501     0656  2E58               	goto	u295_21
 15502     0657  2E59               	goto	u295_20
 15503     0658                     u295_21:
 15504     0658  2EE3               	goto	i1l1070
 15505     0659                     u295_20:
 15506     0659                     i1l4243:
 15507                           
 15508                           ;main.c: 442: if(AA==1 & BB==0 & CC==0 & DD==0){
 15509     0659  0020               	movlb	0	; select bank0
 15510     065A  035D               	decf	_AA,w
 15511     065B  1D03               	btfss	3,2
 15512     065C  2E5E               	goto	u296_21
 15513     065D  2E5F               	goto	u296_20
 15514     065E                     u296_21:
 15515     065E  2E75               	goto	i1l4253
 15516     065F                     u296_20:
 15517     065F                     i1l4245:
 15518     065F  085C               	movf	_BB,w
 15519     0660  1D03               	btfss	3,2
 15520     0661  2E63               	goto	u297_21
 15521     0662  2E64               	goto	u297_20
 15522     0663                     u297_21:
 15523     0663  2E75               	goto	i1l4253
 15524     0664                     u297_20:
 15525     0664                     i1l4247:
 15526     0664  085B               	movf	_CC,w
 15527     0665  1D03               	btfss	3,2
 15528     0666  2E68               	goto	u298_21
 15529     0667  2E69               	goto	u298_20
 15530     0668                     u298_21:
 15531     0668  2E75               	goto	i1l4253
 15532     0669                     u298_20:
 15533     0669                     i1l4249:
 15534     0669  085A               	movf	_DD,w
 15535     066A  1D03               	btfss	3,2
 15536     066B  2E6D               	goto	u299_21
 15537     066C  2E6E               	goto	u299_20
 15538     066D                     u299_21:
 15539     066D  2E75               	goto	i1l4253
 15540     066E                     u299_20:
 15541     066E                     i1l4251:
 15542                           
 15543                           ;main.c: 443: Alm_Adj(1);
 15544     066E  3001               	movlw	1
 15545     066F  00F4               	movwf	Alm_Adj@num
 15546     0670  3000               	movlw	0
 15547     0671  00F5               	movwf	Alm_Adj@num+1
 15548     0672  318C  24E4  3185   	fcall	_Alm_Adj
 15549     0675                     i1l4253:
 15550                           
 15551                           ;main.c: 444: };main.c: 445: if(AA==0 & BB==1 & CC==0 & DD==0){
 15552     0675  0020               	movlb	0	; select bank0
 15553     0676  085D               	movf	_AA,w
 15554     0677  1D03               	btfss	3,2
 15555     0678  2E7A               	goto	u300_21
 15556     0679  2E7B               	goto	u300_20
 15557     067A                     u300_21:
 15558     067A  2E91               	goto	i1l4263
 15559     067B                     u300_20:
 15560     067B                     i1l4255:
 15561     067B  035C               	decf	_BB,w
 15562     067C  1D03               	btfss	3,2
 15563     067D  2E7F               	goto	u301_21
 15564     067E  2E80               	goto	u301_20
 15565     067F                     u301_21:
 15566     067F  2E91               	goto	i1l4263
 15567     0680                     u301_20:
 15568     0680                     i1l4257:
 15569     0680  085B               	movf	_CC,w
 15570     0681  1D03               	btfss	3,2
 15571     0682  2E84               	goto	u302_21
 15572     0683  2E85               	goto	u302_20
 15573     0684                     u302_21:
 15574     0684  2E91               	goto	i1l4263
 15575     0685                     u302_20:
 15576     0685                     i1l4259:
 15577     0685  085A               	movf	_DD,w
 15578     0686  1D03               	btfss	3,2
 15579     0687  2E89               	goto	u303_21
 15580     0688  2E8A               	goto	u303_20
 15581     0689                     u303_21:
 15582     0689  2E91               	goto	i1l4263
 15583     068A                     u303_20:
 15584     068A                     i1l4261:
 15585                           
 15586                           ;main.c: 446: Alm_Adj(2);
 15587     068A  3002               	movlw	2
 15588     068B  00F4               	movwf	Alm_Adj@num
 15589     068C  3000               	movlw	0
 15590     068D  00F5               	movwf	Alm_Adj@num+1
 15591     068E  318C  24E4  3185   	fcall	_Alm_Adj
 15592     0691                     i1l4263:
 15593                           
 15594                           ;main.c: 447: };main.c: 448: if(AA==0 & BB==0 & CC==1 & DD==0){
 15595     0691  0020               	movlb	0	; select bank0
 15596     0692  085D               	movf	_AA,w
 15597     0693  1D03               	btfss	3,2
 15598     0694  2E96               	goto	u304_21
 15599     0695  2E97               	goto	u304_20
 15600     0696                     u304_21:
 15601     0696  2EAD               	goto	i1l4273
 15602     0697                     u304_20:
 15603     0697                     i1l4265:
 15604     0697  085C               	movf	_BB,w
 15605     0698  1D03               	btfss	3,2
 15606     0699  2E9B               	goto	u305_21
 15607     069A  2E9C               	goto	u305_20
 15608     069B                     u305_21:
 15609     069B  2EAD               	goto	i1l4273
 15610     069C                     u305_20:
 15611     069C                     i1l4267:
 15612     069C  035B               	decf	_CC,w
 15613     069D  1D03               	btfss	3,2
 15614     069E  2EA0               	goto	u306_21
 15615     069F  2EA1               	goto	u306_20
 15616     06A0                     u306_21:
 15617     06A0  2EAD               	goto	i1l4273
 15618     06A1                     u306_20:
 15619     06A1                     i1l4269:
 15620     06A1  085A               	movf	_DD,w
 15621     06A2  1D03               	btfss	3,2
 15622     06A3  2EA5               	goto	u307_21
 15623     06A4  2EA6               	goto	u307_20
 15624     06A5                     u307_21:
 15625     06A5  2EAD               	goto	i1l4273
 15626     06A6                     u307_20:
 15627     06A6                     i1l4271:
 15628                           
 15629                           ;main.c: 449: Alm_Adj(3);
 15630     06A6  3003               	movlw	3
 15631     06A7  00F4               	movwf	Alm_Adj@num
 15632     06A8  3000               	movlw	0
 15633     06A9  00F5               	movwf	Alm_Adj@num+1
 15634     06AA  318C  24E4  3185   	fcall	_Alm_Adj
 15635     06AD                     i1l4273:
 15636                           
 15637                           ;main.c: 450: };main.c: 451: if(AA==0 & BB==0 & CC==0 & DD==1){
 15638     06AD  0020               	movlb	0	; select bank0
 15639     06AE  085D               	movf	_AA,w
 15640     06AF  1D03               	btfss	3,2
 15641     06B0  2EB2               	goto	u308_21
 15642     06B1  2EB3               	goto	u308_20
 15643     06B2                     u308_21:
 15644     06B2  2EC9               	goto	i1l4283
 15645     06B3                     u308_20:
 15646     06B3                     i1l4275:
 15647     06B3  085C               	movf	_BB,w
 15648     06B4  1D03               	btfss	3,2
 15649     06B5  2EB7               	goto	u309_21
 15650     06B6  2EB8               	goto	u309_20
 15651     06B7                     u309_21:
 15652     06B7  2EC9               	goto	i1l4283
 15653     06B8                     u309_20:
 15654     06B8                     i1l4277:
 15655     06B8  085B               	movf	_CC,w
 15656     06B9  1D03               	btfss	3,2
 15657     06BA  2EBC               	goto	u310_21
 15658     06BB  2EBD               	goto	u310_20
 15659     06BC                     u310_21:
 15660     06BC  2EC9               	goto	i1l4283
 15661     06BD                     u310_20:
 15662     06BD                     i1l4279:
 15663     06BD  035A               	decf	_DD,w
 15664     06BE  1D03               	btfss	3,2
 15665     06BF  2EC1               	goto	u311_21
 15666     06C0  2EC2               	goto	u311_20
 15667     06C1                     u311_21:
 15668     06C1  2EC9               	goto	i1l4283
 15669     06C2                     u311_20:
 15670     06C2                     i1l4281:
 15671                           
 15672                           ;main.c: 452: Alm_Adj(4);
 15673     06C2  3004               	movlw	4
 15674     06C3  00F4               	movwf	Alm_Adj@num
 15675     06C4  3000               	movlw	0
 15676     06C5  00F5               	movwf	Alm_Adj@num+1
 15677     06C6  318C  24E4  3185   	fcall	_Alm_Adj
 15678     06C9                     i1l4283:
 15679                           
 15680                           ;main.c: 453: };main.c: 454: if(AA==1 & BB==1 & CC==0 & DD==0){
 15681     06C9  0020               	movlb	0	; select bank0
 15682     06CA  035D               	decf	_AA,w
 15683     06CB  1D03               	btfss	3,2
 15684     06CC  2ECE               	goto	u312_21
 15685     06CD  2ECF               	goto	u312_20
 15686     06CE                     u312_21:
 15687     06CE  2EE3               	goto	i1l1070
 15688     06CF                     u312_20:
 15689     06CF                     i1l4285:
 15690     06CF  035C               	decf	_BB,w
 15691     06D0  1D03               	btfss	3,2
 15692     06D1  2ED3               	goto	u313_21
 15693     06D2  2ED4               	goto	u313_20
 15694     06D3                     u313_21:
 15695     06D3  2EE3               	goto	i1l1070
 15696     06D4                     u313_20:
 15697     06D4                     i1l4287:
 15698     06D4  085B               	movf	_CC,w
 15699     06D5  1D03               	btfss	3,2
 15700     06D6  2ED8               	goto	u314_21
 15701     06D7  2ED9               	goto	u314_20
 15702     06D8                     u314_21:
 15703     06D8  2EE3               	goto	i1l1070
 15704     06D9                     u314_20:
 15705     06D9                     i1l4289:
 15706     06D9  085A               	movf	_DD,w
 15707     06DA  1D03               	btfss	3,2
 15708     06DB  2EDD               	goto	u315_21
 15709     06DC  2EDE               	goto	u315_20
 15710     06DD                     u315_21:
 15711     06DD  2EE3               	goto	i1l1070
 15712     06DE                     u315_20:
 15713     06DE                     i1l4291:
 15714                           
 15715                           ;main.c: 455: adj_mode=0;
 15716     06DE  0021               	movlb	1	; select bank1
 15717     06DF  01C2               	clrf	_adj_mode^(0+128)
 15718     06E0  01C3               	clrf	(_adj_mode+1)^(0+128)
 15719     06E1                     i1l4293:
 15720                           
 15721                           ;main.c: 456: alm_set_flg=1;
 15722     06E1  01DB               	clrf	_alm_set_flg^(0+128)
 15723     06E2  0ADB               	incf	_alm_set_flg^(0+128),f
 15724     06E3                     i1l1070:
 15725     06E3  0008               	return
 15726     06E4                     __end_of_TMR2_Process:
 15727                           
 15728                           	psect	text64
 15729     146B                     __ptext64:	
 15730 ;; *************** function i1_Pen_swipe2 *****************
 15731 ;; Defined at:
 15732 ;;		line 154 in file "main.c"
 15733 ;; Parameters:    Size  Location     Type
 15734 ;;  set_duty        2    2[COMMON] int 
 15735 ;; Auto vars:     Size  Location     Type
 15736 ;;		None
 15737 ;; Return value:  Size  Location     Type
 15738 ;;                  1    wreg      void 
 15739 ;; Registers used:
 15740 ;;		wreg, status,2, status,0, pclath, cstack
 15741 ;; Tracked objects:
 15742 ;;		On entry : 0/0
 15743 ;;		On exit  : 0/0
 15744 ;;		Unchanged: 0/0
 15745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15746 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15748 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15749 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15750 ;;Total ram usage:        3 bytes
 15751 ;; Hardware stack levels used: 1
 15752 ;; Hardware stack levels required when called: 1
 15753 ;; This function calls:
 15754 ;;		i1_PWM6_DutyCycleSet
 15755 ;;		i1_PWM6_LoadBufferSet
 15756 ;; This function is called by:
 15757 ;;		_TMR2_Process
 15758 ;; This function uses a non-reentrant model
 15759 ;;
 15760                           
 15761     146B                     i1_Pen_swipe2:	
 15762                           ;psect for function i1_Pen_swipe2
 15763                           
 15764     146B                     i1l3943:	
 15765                           ;incstack = 0
 15766                           ; Regs used in i1_Pen_swipe2: [wreg+status,2+status,0+pclath+cstack]
 15767                           
 15768                           
 15769                           ;main.c: 155: PWM6_DutyCycleSet(set_duty);
 15770     146B  0873               	movf	i1Pen_swipe2@set_duty+1,w
 15771     146C  00F1               	movwf	i1PWM6_DutyCycleSet@dutyCycleCount+1
 15772     146D  0872               	movf	i1Pen_swipe2@set_duty,w
 15773     146E  00F0               	movwf	i1PWM6_DutyCycleSet@dutyCycleCount
 15774     146F  3193  231E  3194   	fcall	i1_PWM6_DutyCycleSet
 15775     1472                     i1l3945:
 15776                           
 15777                           ;main.c: 156: PWM6_LoadBufferSet();
 15778     1472  3192  22B3  3194   	fcall	i1_PWM6_LoadBufferSet
 15779                           
 15780                           ;main.c: 157: _delay((unsigned long)((15)*(16000000/4000.0)));
 15781     1475  304E               	movlw	78
 15782     1476  00F4               	movwf	??i1_Pen_swipe2
 15783     1477  30EB               	movlw	235
 15784     1478                     u430_27:
 15785     1478  0B89               	decfsz	9,f
 15786     1479  2C78               	goto	u430_27
 15787     147A  0BF4               	decfsz	??i1_Pen_swipe2,f
 15788     147B  2C78               	goto	u430_27
 15789     147C  0000               	nop
 15790     147D                     i1l966:
 15791     147D  0008               	return
 15792     147E                     __end_ofi1_Pen_swipe2:
 15793                           
 15794                           	psect	text65
 15795     12B3                     __ptext65:	
 15796 ;; *************** function i1_PWM6_LoadBufferSet *****************
 15797 ;; Defined at:
 15798 ;;		line 128 in file "mcc_generated_files/pwm6.c"
 15799 ;; Parameters:    Size  Location     Type
 15800 ;;		None
 15801 ;; Auto vars:     Size  Location     Type
 15802 ;;		None
 15803 ;; Return value:  Size  Location     Type
 15804 ;;                  1    wreg      void 
 15805 ;; Registers used:
 15806 ;;		None
 15807 ;; Tracked objects:
 15808 ;;		On entry : 0/0
 15809 ;;		On exit  : 0/0
 15810 ;;		Unchanged: 0/0
 15811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15815 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15816 ;;Total ram usage:        0 bytes
 15817 ;; Hardware stack levels used: 1
 15818 ;; This function calls:
 15819 ;;		Nothing
 15820 ;; This function is called by:
 15821 ;;		i1_Pen_swipe2
 15822 ;; This function uses a non-reentrant model
 15823 ;;
 15824                           
 15825     12B3                     i1_PWM6_LoadBufferSet:	
 15826                           ;psect for function i1_PWM6_LoadBufferSet
 15827                           
 15828     12B3                     i1l3689:	
 15829                           ;incstack = 0
 15830                           ; Regs used in i1_PWM6_LoadBufferSet: []
 15831                           
 15832                           
 15833                           ;pwm6.c: 130: PWM6LDCONbits.LDA = 1;
 15834     12B3  003B               	movlb	27	; select bank27
 15835     12B4  17AF               	bsf	47,7	;volatile
 15836     12B5                     i1l790:
 15837     12B5  0008               	return
 15838     12B6                     __end_ofi1_PWM6_LoadBufferSet:
 15839                           
 15840                           	psect	text66
 15841     131E                     __ptext66:	
 15842 ;; *************** function i1_PWM6_DutyCycleSet *****************
 15843 ;; Defined at:
 15844 ;;		line 139 in file "mcc_generated_files/pwm6.c"
 15845 ;; Parameters:    Size  Location     Type
 15846 ;;  dutyCycleCou    2    0[COMMON] unsigned int 
 15847 ;; Auto vars:     Size  Location     Type
 15848 ;;		None
 15849 ;; Return value:  Size  Location     Type
 15850 ;;                  1    wreg      void 
 15851 ;; Registers used:
 15852 ;;		wreg, status,2
 15853 ;; Tracked objects:
 15854 ;;		On entry : 0/0
 15855 ;;		On exit  : 0/0
 15856 ;;		Unchanged: 0/0
 15857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15858 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15861 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15862 ;;Total ram usage:        2 bytes
 15863 ;; Hardware stack levels used: 1
 15864 ;; This function calls:
 15865 ;;		Nothing
 15866 ;; This function is called by:
 15867 ;;		i1_Pen_swipe2
 15868 ;; This function uses a non-reentrant model
 15869 ;;
 15870                           
 15871     131E                     i1_PWM6_DutyCycleSet:	
 15872                           ;psect for function i1_PWM6_DutyCycleSet
 15873                           
 15874     131E                     i1l3691:	
 15875                           ;incstack = 0
 15876                           ; Regs used in i1_PWM6_DutyCycleSet: [wreg+status,2]
 15877                           
 15878                           
 15879                           ;pwm6.c: 141: PWM6DCH = (dutyCycleCount>>8);
 15880     131E  0871               	movf	i1PWM6_DutyCycleSet@dutyCycleCount+1,w
 15881     131F  003B               	movlb	27	; select bank27
 15882     1320  00A4               	movwf	36	;volatile
 15883     1321                     i1l3693:
 15884                           
 15885                           ;pwm6.c: 142: PWM6DCL = (dutyCycleCount);
 15886     1321  0870               	movf	i1PWM6_DutyCycleSet@dutyCycleCount,w
 15887     1322  00A3               	movwf	35	;volatile
 15888     1323                     i1l796:
 15889     1323  0008               	return
 15890     1324                     __end_ofi1_PWM6_DutyCycleSet:
 15891                           
 15892                           	psect	text67
 15893     1458                     __ptext67:	
 15894 ;; *************** function i1_Pen_swipe *****************
 15895 ;; Defined at:
 15896 ;;		line 149 in file "main.c"
 15897 ;; Parameters:    Size  Location     Type
 15898 ;;  set_duty        2    2[COMMON] int 
 15899 ;; Auto vars:     Size  Location     Type
 15900 ;;		None
 15901 ;; Return value:  Size  Location     Type
 15902 ;;                  1    wreg      void 
 15903 ;; Registers used:
 15904 ;;		wreg, status,2, status,0, pclath, cstack
 15905 ;; Tracked objects:
 15906 ;;		On entry : 0/0
 15907 ;;		On exit  : 0/0
 15908 ;;		Unchanged: 0/0
 15909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15910 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15912 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15913 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15914 ;;Total ram usage:        3 bytes
 15915 ;; Hardware stack levels used: 1
 15916 ;; Hardware stack levels required when called: 1
 15917 ;; This function calls:
 15918 ;;		i1_PWM11_DutyCycleSet
 15919 ;;		i1_PWM11_LoadBufferSet
 15920 ;; This function is called by:
 15921 ;;		_TMR2_Process
 15922 ;; This function uses a non-reentrant model
 15923 ;;
 15924                           
 15925     1458                     i1_Pen_swipe:	
 15926                           ;psect for function i1_Pen_swipe
 15927                           
 15928     1458                     i1l3939:	
 15929                           ;incstack = 0
 15930                           ; Regs used in i1_Pen_swipe: [wreg+status,2+status,0+pclath+cstack]
 15931                           
 15932                           
 15933                           ;main.c: 150: PWM11_DutyCycleSet(set_duty);
 15934     1458  0873               	movf	i1Pen_swipe@set_duty+1,w
 15935     1459  00F1               	movwf	i1PWM11_DutyCycleSet@dutyCycleCount+1
 15936     145A  0872               	movf	i1Pen_swipe@set_duty,w
 15937     145B  00F0               	movwf	i1PWM11_DutyCycleSet@dutyCycleCount
 15938     145C  3193  2318  3194   	fcall	i1_PWM11_DutyCycleSet
 15939     145F                     i1l3941:
 15940                           
 15941                           ;main.c: 151: PWM11_LoadBufferSet();
 15942     145F  3192  22B0  3194   	fcall	i1_PWM11_LoadBufferSet
 15943                           
 15944                           ;main.c: 152: _delay((unsigned long)((15)*(16000000/4000.0)));
 15945     1462  304E               	movlw	78
 15946     1463  00F4               	movwf	??i1_Pen_swipe
 15947     1464  30EB               	movlw	235
 15948     1465                     u431_27:
 15949     1465  0B89               	decfsz	9,f
 15950     1466  2C65               	goto	u431_27
 15951     1467  0BF4               	decfsz	??i1_Pen_swipe,f
 15952     1468  2C65               	goto	u431_27
 15953     1469  0000               	nop
 15954     146A                     i1l963:
 15955     146A  0008               	return
 15956     146B                     __end_ofi1_Pen_swipe:
 15957                           
 15958                           	psect	text68
 15959     12B0                     __ptext68:	
 15960 ;; *************** function i1_PWM11_LoadBufferSet *****************
 15961 ;; Defined at:
 15962 ;;		line 128 in file "mcc_generated_files/pwm11.c"
 15963 ;; Parameters:    Size  Location     Type
 15964 ;;		None
 15965 ;; Auto vars:     Size  Location     Type
 15966 ;;		None
 15967 ;; Return value:  Size  Location     Type
 15968 ;;                  1    wreg      void 
 15969 ;; Registers used:
 15970 ;;		None
 15971 ;; Tracked objects:
 15972 ;;		On entry : 0/0
 15973 ;;		On exit  : 0/0
 15974 ;;		Unchanged: 0/0
 15975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15979 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15980 ;;Total ram usage:        0 bytes
 15981 ;; Hardware stack levels used: 1
 15982 ;; This function calls:
 15983 ;;		Nothing
 15984 ;; This function is called by:
 15985 ;;		i1_Pen_swipe
 15986 ;; This function uses a non-reentrant model
 15987 ;;
 15988                           
 15989     12B0                     i1_PWM11_LoadBufferSet:	
 15990                           ;psect for function i1_PWM11_LoadBufferSet
 15991                           
 15992     12B0                     i1l3675:	
 15993                           ;incstack = 0
 15994                           ; Regs used in i1_PWM11_LoadBufferSet: []
 15995                           
 15996                           
 15997                           ;pwm11.c: 130: PWM11LDCONbits.LDA = 1;
 15998     12B0  003B               	movlb	27	; select bank27
 15999     12B1  17BF               	bsf	63,7	;volatile
 16000     12B2                     i1l157:
 16001     12B2  0008               	return
 16002     12B3                     __end_ofi1_PWM11_LoadBufferSet:
 16003                           
 16004                           	psect	text69
 16005     1318                     __ptext69:	
 16006 ;; *************** function i1_PWM11_DutyCycleSet *****************
 16007 ;; Defined at:
 16008 ;;		line 139 in file "mcc_generated_files/pwm11.c"
 16009 ;; Parameters:    Size  Location     Type
 16010 ;;  dutyCycleCou    2    0[COMMON] unsigned int 
 16011 ;; Auto vars:     Size  Location     Type
 16012 ;;		None
 16013 ;; Return value:  Size  Location     Type
 16014 ;;                  1    wreg      void 
 16015 ;; Registers used:
 16016 ;;		wreg, status,2
 16017 ;; Tracked objects:
 16018 ;;		On entry : 0/0
 16019 ;;		On exit  : 0/0
 16020 ;;		Unchanged: 0/0
 16021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16022 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16025 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16026 ;;Total ram usage:        2 bytes
 16027 ;; Hardware stack levels used: 1
 16028 ;; This function calls:
 16029 ;;		Nothing
 16030 ;; This function is called by:
 16031 ;;		i1_Pen_swipe
 16032 ;; This function uses a non-reentrant model
 16033 ;;
 16034                           
 16035     1318                     i1_PWM11_DutyCycleSet:	
 16036                           ;psect for function i1_PWM11_DutyCycleSet
 16037                           
 16038     1318                     i1l3677:	
 16039                           ;incstack = 0
 16040                           ; Regs used in i1_PWM11_DutyCycleSet: [wreg+status,2]
 16041                           
 16042                           
 16043                           ;pwm11.c: 141: PWM11DCH = (dutyCycleCount>>8);
 16044     1318  0871               	movf	i1PWM11_DutyCycleSet@dutyCycleCount+1,w
 16045     1319  003B               	movlb	27	; select bank27
 16046     131A  00B4               	movwf	52	;volatile
 16047     131B                     i1l3679:
 16048                           
 16049                           ;pwm11.c: 142: PWM11DCL = (dutyCycleCount);
 16050     131B  0870               	movf	i1PWM11_DutyCycleSet@dutyCycleCount,w
 16051     131C  00B3               	movwf	51	;volatile
 16052     131D                     i1l163:
 16053     131D  0008               	return
 16054     131E                     __end_ofi1_PWM11_DutyCycleSet:
 16055                           
 16056                           	psect	text70
 16057     0D9B                     __ptext70:	
 16058 ;; *************** function _Time_Adj *****************
 16059 ;; Defined at:
 16060 ;;		line 281 in file "main.c"
 16061 ;; Parameters:    Size  Location     Type
 16062 ;;  num             2    4[COMMON] int 
 16063 ;; Auto vars:     Size  Location     Type
 16064 ;;		None
 16065 ;; Return value:  Size  Location     Type
 16066 ;;                  1    wreg      void 
 16067 ;; Registers used:
 16068 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16069 ;; Tracked objects:
 16070 ;;		On entry : 0/0
 16071 ;;		On exit  : 0/0
 16072 ;;		Unchanged: 0/0
 16073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16074 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16076 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16077 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16078 ;;Total ram usage:        3 bytes
 16079 ;; Hardware stack levels used: 1
 16080 ;; Hardware stack levels required when called: 1
 16081 ;; This function calls:
 16082 ;;		i1___bmul
 16083 ;; This function is called by:
 16084 ;;		_TMR2_Process
 16085 ;; This function uses a non-reentrant model
 16086 ;;
 16087                           
 16088     0D9B                     _Time_Adj:	
 16089                           ;psect for function _Time_Adj
 16090                           
 16091     0D9B                     i1l3879:	
 16092                           ;incstack = 0
 16093                           ; Regs used in _Time_Adj: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16094                           
 16095                           
 16096                           ;main.c: 283: switch(num) {
 16097     0D9B  2E40               	goto	i1l3903
 16098     0D9C                     i1l3881:
 16099                           
 16100                           ;main.c: 286: if(kind<7){
 16101     0D9C  0020               	movlb	0	; select bank0
 16102     0D9D  0859               	movf	_kind+1,w
 16103     0D9E  3A80               	xorlw	128
 16104     0D9F  00F6               	movwf	??_Time_Adj
 16105     0DA0  3080               	movlw	128
 16106     0DA1  0276               	subwf	??_Time_Adj,w
 16107     0DA2  1D03               	skipz
 16108     0DA3  2DA6               	goto	u235_25
 16109     0DA4  3007               	movlw	7
 16110     0DA5  0258               	subwf	_kind,w
 16111     0DA6                     u235_25:
 16112     0DA6  1803               	skipnc
 16113     0DA7  2DA9               	goto	u235_21
 16114     0DA8  2DAA               	goto	u235_20
 16115     0DA9                     u235_21:
 16116     0DA9  2DB2               	goto	i1l3885
 16117     0DAA                     u235_20:
 16118     0DAA                     i1l3883:
 16119                           
 16120                           ;main.c: 287: kind=kind+1;
 16121     0DAA  0020               	movlb	0	; select bank0
 16122     0DAB  0858               	movf	_kind,w
 16123     0DAC  3E01               	addlw	1
 16124     0DAD  00D8               	movwf	_kind
 16125     0DAE  3000               	movlw	0
 16126     0DAF  3D59               	addwfc	_kind+1,w
 16127     0DB0  00D9               	movwf	_kind+1
 16128                           
 16129                           ;main.c: 288: }
 16130     0DB1  2E53               	goto	i1l1024
 16131     0DB2                     i1l3885:
 16132                           
 16133                           ;main.c: 289: else{;main.c: 290: kind=7;
 16134     0DB2  3007               	movlw	7
 16135     0DB3  0020               	movlb	0	; select bank0
 16136     0DB4  00D8               	movwf	_kind
 16137     0DB5  3000               	movlw	0
 16138     0DB6  00D9               	movwf	_kind+1
 16139     0DB7  2E53               	goto	i1l1024
 16140     0DB8                     i1l3887:
 16141                           
 16142                           ;main.c: 295: if(kind>2){
 16143     0DB8  0020               	movlb	0	; select bank0
 16144     0DB9  0859               	movf	_kind+1,w
 16145     0DBA  3A80               	xorlw	128
 16146     0DBB  00F6               	movwf	??_Time_Adj
 16147     0DBC  3080               	movlw	128
 16148     0DBD  0276               	subwf	??_Time_Adj,w
 16149     0DBE  1D03               	skipz
 16150     0DBF  2DC2               	goto	u236_25
 16151     0DC0  3003               	movlw	3
 16152     0DC1  0258               	subwf	_kind,w
 16153     0DC2                     u236_25:
 16154     0DC2  1C03               	skipc
 16155     0DC3  2DC5               	goto	u236_21
 16156     0DC4  2DC6               	goto	u236_20
 16157     0DC5                     u236_21:
 16158     0DC5  2DCE               	goto	i1l3891
 16159     0DC6                     u236_20:
 16160     0DC6                     i1l3889:
 16161                           
 16162                           ;main.c: 296: kind=kind-1;
 16163     0DC6  0020               	movlb	0	; select bank0
 16164     0DC7  0858               	movf	_kind,w
 16165     0DC8  3EFF               	addlw	255
 16166     0DC9  00D8               	movwf	_kind
 16167     0DCA  30FF               	movlw	255
 16168     0DCB  3D59               	addwfc	_kind+1,w
 16169     0DCC  00D9               	movwf	_kind+1
 16170                           
 16171                           ;main.c: 297: }
 16172     0DCD  2E53               	goto	i1l1024
 16173     0DCE                     i1l3891:
 16174                           
 16175                           ;main.c: 298: else{;main.c: 299: kind=2;
 16176     0DCE  3002               	movlw	2
 16177     0DCF  0020               	movlb	0	; select bank0
 16178     0DD0  00D8               	movwf	_kind
 16179     0DD1  3000               	movlw	0
 16180     0DD2  00D9               	movwf	_kind+1
 16181     0DD3  2E53               	goto	i1l1024
 16182     0DD4                     i1l3893:
 16183                           
 16184                           ;main.c: 303: if (settei[kind][0] < settei[kind][2]){
 16185     0DD4  3003               	movlw	3
 16186     0DD5  00F0               	movwf	i1___bmul@multiplicand
 16187     0DD6  0020               	movlb	0	; select bank0
 16188     0DD7  0858               	movf	_kind,w
 16189     0DD8  3194  24CD  318D   	fcall	i1___bmul
 16190     0DDB  3E20               	addlw	(low (_settei| (0+256)))& (0+255)
 16191     0DDC  0086               	movwf	6
 16192     0DDD  3001               	movlw	1	; select bank2/3
 16193     0DDE  0087               	movwf	7
 16194     0DDF  3003               	movlw	3
 16195     0DE0  00F0               	movwf	i1___bmul@multiplicand
 16196     0DE1  0020               	movlb	0	; select bank0
 16197     0DE2  0858               	movf	_kind,w
 16198     0DE3  3194  24CD  318D   	fcall	i1___bmul
 16199     0DE6  3E22               	addlw	(low ((_settei| (0+256)+2)))& (0+255)
 16200     0DE7  0084               	movwf	4
 16201     0DE8  3001               	movlw	1	; select bank2/3
 16202     0DE9  0085               	movwf	5
 16203     0DEA  0800               	movf	0,w
 16204     0DEB  0201               	subwf	1,w
 16205     0DEC  1803               	skipnc
 16206     0DED  2DEF               	goto	u237_21
 16207     0DEE  2DF0               	goto	u237_20
 16208     0DEF                     u237_21:
 16209     0DEF  2E53               	goto	i1l1024
 16210     0DF0                     u237_20:
 16211     0DF0                     i1l3895:
 16212                           
 16213                           ;main.c: 304: settei[kind][0]=settei[kind][0] +1;
 16214     0DF0  3003               	movlw	3
 16215     0DF1  00F0               	movwf	i1___bmul@multiplicand
 16216     0DF2  0020               	movlb	0	; select bank0
 16217     0DF3  0858               	movf	_kind,w
 16218     0DF4  3194  24CD  318D   	fcall	i1___bmul
 16219     0DF7  3E20               	addlw	(low (_settei| (0+256)))& (0+255)
 16220     0DF8  0086               	movwf	6
 16221     0DF9  3001               	movlw	1	; select bank2/3
 16222     0DFA  0087               	movwf	7
 16223     0DFB  3003               	movlw	3
 16224     0DFC  00F0               	movwf	i1___bmul@multiplicand
 16225     0DFD  0020               	movlb	0	; select bank0
 16226     0DFE  0858               	movf	_kind,w
 16227     0DFF  3194  24CD  318D   	fcall	i1___bmul
 16228     0E02  3E20               	addlw	(low (_settei| (0+256)))& (0+255)
 16229     0E03  0084               	movwf	4
 16230     0E04  3001               	movlw	1	; select bank2/3
 16231     0E05  0085               	movwf	5
 16232     0E06  0800               	movf	0,w
 16233     0E07  3E01               	addlw	1
 16234     0E08  0081               	movwf	1
 16235     0E09  2E53               	goto	i1l1024
 16236     0E0A                     i1l3897:
 16237                           
 16238                           ;main.c: 311: if (settei[kind][0] > settei[kind][1]){
 16239     0E0A  3003               	movlw	3
 16240     0E0B  00F0               	movwf	i1___bmul@multiplicand
 16241     0E0C  0020               	movlb	0	; select bank0
 16242     0E0D  0858               	movf	_kind,w
 16243     0E0E  3194  24CD  318D   	fcall	i1___bmul
 16244     0E11  3E21               	addlw	(low ((_settei| (0+256)+1)))& (0+255)
 16245     0E12  0086               	movwf	6
 16246     0E13  3001               	movlw	1	; select bank2/3
 16247     0E14  0087               	movwf	7
 16248     0E15  3003               	movlw	3
 16249     0E16  00F0               	movwf	i1___bmul@multiplicand
 16250     0E17  0020               	movlb	0	; select bank0
 16251     0E18  0858               	movf	_kind,w
 16252     0E19  3194  24CD  318D   	fcall	i1___bmul
 16253     0E1C  3E20               	addlw	(low (_settei| (0+256)))& (0+255)
 16254     0E1D  0084               	movwf	4
 16255     0E1E  3001               	movlw	1	; select bank2/3
 16256     0E1F  0085               	movwf	5
 16257     0E20  0800               	movf	0,w
 16258     0E21  0201               	subwf	1,w
 16259     0E22  1803               	skipnc
 16260     0E23  2E25               	goto	u238_21
 16261     0E24  2E26               	goto	u238_20
 16262     0E25                     u238_21:
 16263     0E25  2E53               	goto	i1l1024
 16264     0E26                     u238_20:
 16265     0E26                     i1l3899:
 16266                           
 16267                           ;main.c: 312: settei[kind][0]=settei[kind][0] -1;
 16268     0E26  3003               	movlw	3
 16269     0E27  00F0               	movwf	i1___bmul@multiplicand
 16270     0E28  0020               	movlb	0	; select bank0
 16271     0E29  0858               	movf	_kind,w
 16272     0E2A  3194  24CD  318D   	fcall	i1___bmul
 16273     0E2D  3E20               	addlw	(low (_settei| (0+256)))& (0+255)
 16274     0E2E  0086               	movwf	6
 16275     0E2F  3001               	movlw	1	; select bank2/3
 16276     0E30  0087               	movwf	7
 16277     0E31  3003               	movlw	3
 16278     0E32  00F0               	movwf	i1___bmul@multiplicand
 16279     0E33  0020               	movlb	0	; select bank0
 16280     0E34  0858               	movf	_kind,w
 16281     0E35  3194  24CD  318D   	fcall	i1___bmul
 16282     0E38  3E20               	addlw	(low (_settei| (0+256)))& (0+255)
 16283     0E39  0084               	movwf	4
 16284     0E3A  3001               	movlw	1	; select bank2/3
 16285     0E3B  0085               	movwf	5
 16286     0E3C  0800               	movf	0,w
 16287     0E3D  3EFF               	addlw	255
 16288     0E3E  0081               	movwf	1
 16289     0E3F  2E53               	goto	i1l1024
 16290     0E40                     i1l3903:
 16291                           
 16292                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 16293                           ; Switch size 1, requested type "simple"
 16294                           ; Number of cases is 1, Range of values is 0 to 0
 16295                           ; switch strategies available:
 16296                           ; Name         Instructions Cycles
 16297                           ; simple_byte            4     3 (average)
 16298                           ; direct_byte            8     6 (fixed)
 16299                           ; jumptable            260     6 (fixed)
 16300                           ;	Chosen strategy is simple_byte
 16301     0E40  0875               	movf	Time_Adj@num+1,w
 16302     0E41  3A00               	xorlw	0	; case 0
 16303     0E42  1903               	skipnz
 16304     0E43  2E45               	goto	i1l5169
 16305     0E44  2E53               	goto	i1l1024
 16306     0E45                     i1l5169:
 16307                           
 16308                           ; Switch size 1, requested type "simple"
 16309                           ; Number of cases is 4, Range of values is 1 to 4
 16310                           ; switch strategies available:
 16311                           ; Name         Instructions Cycles
 16312                           ; simple_byte           13     7 (average)
 16313                           ; direct_byte           17     9 (fixed)
 16314                           ; jumptable            263     9 (fixed)
 16315                           ;	Chosen strategy is simple_byte
 16316     0E45  0874               	movf	Time_Adj@num,w
 16317     0E46  3A01               	xorlw	1	; case 1
 16318     0E47  1903               	skipnz
 16319     0E48  2D9C               	goto	i1l3881
 16320     0E49  3A03               	xorlw	3	; case 2
 16321     0E4A  1903               	skipnz
 16322     0E4B  2DB8               	goto	i1l3887
 16323     0E4C  3A01               	xorlw	1	; case 3
 16324     0E4D  1903               	skipnz
 16325     0E4E  2DD4               	goto	i1l3893
 16326     0E4F  3A07               	xorlw	7	; case 4
 16327     0E50  1903               	skipnz
 16328     0E51  2E0A               	goto	i1l3897
 16329     0E52  2E53               	goto	i1l1024
 16330     0E53                     i1l1024:
 16331     0E53  0008               	return
 16332     0E54                     __end_of_Time_Adj:
 16333                           
 16334                           	psect	text71
 16335     0CE4                     __ptext71:	
 16336 ;; *************** function _Alm_Adj *****************
 16337 ;; Defined at:
 16338 ;;		line 321 in file "main.c"
 16339 ;; Parameters:    Size  Location     Type
 16340 ;;  num             2    4[COMMON] int 
 16341 ;; Auto vars:     Size  Location     Type
 16342 ;;		None
 16343 ;; Return value:  Size  Location     Type
 16344 ;;                  1    wreg      void 
 16345 ;; Registers used:
 16346 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16347 ;; Tracked objects:
 16348 ;;		On entry : 0/0
 16349 ;;		On exit  : 0/0
 16350 ;;		Unchanged: 0/0
 16351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16352 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16354 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16355 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16356 ;;Total ram usage:        3 bytes
 16357 ;; Hardware stack levels used: 1
 16358 ;; Hardware stack levels required when called: 1
 16359 ;; This function calls:
 16360 ;;		i1___bmul
 16361 ;; This function is called by:
 16362 ;;		_TMR2_Process
 16363 ;; This function uses a non-reentrant model
 16364 ;;
 16365                           
 16366     0CE4                     _Alm_Adj:	
 16367                           ;psect for function _Alm_Adj
 16368                           
 16369     0CE4                     i1l3909:	
 16370                           ;incstack = 0
 16371                           ; Regs used in _Alm_Adj: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16372                           
 16373                           
 16374                           ;main.c: 323: switch(num) {
 16375     0CE4  2D87               	goto	i1l3933
 16376     0CE5                     i1l3911:
 16377                           
 16378                           ;main.c: 326: if(kind<3){
 16379     0CE5  0020               	movlb	0	; select bank0
 16380     0CE6  0859               	movf	_kind+1,w
 16381     0CE7  3A80               	xorlw	128
 16382     0CE8  00F6               	movwf	??_Alm_Adj
 16383     0CE9  3080               	movlw	128
 16384     0CEA  0276               	subwf	??_Alm_Adj,w
 16385     0CEB  1D03               	skipz
 16386     0CEC  2CEF               	goto	u239_25
 16387     0CED  3003               	movlw	3
 16388     0CEE  0258               	subwf	_kind,w
 16389     0CEF                     u239_25:
 16390     0CEF  1803               	skipnc
 16391     0CF0  2CF2               	goto	u239_21
 16392     0CF1  2CF3               	goto	u239_20
 16393     0CF2                     u239_21:
 16394     0CF2  2CFB               	goto	i1l3915
 16395     0CF3                     u239_20:
 16396     0CF3                     i1l3913:
 16397                           
 16398                           ;main.c: 327: kind=kind+1;
 16399     0CF3  0020               	movlb	0	; select bank0
 16400     0CF4  0858               	movf	_kind,w
 16401     0CF5  3E01               	addlw	1
 16402     0CF6  00D8               	movwf	_kind
 16403     0CF7  3000               	movlw	0
 16404     0CF8  3D59               	addwfc	_kind+1,w
 16405     0CF9  00D9               	movwf	_kind+1
 16406                           
 16407                           ;main.c: 328: }
 16408     0CFA  2D9A               	goto	i1l1039
 16409     0CFB                     i1l3915:
 16410                           
 16411                           ;main.c: 329: else{;main.c: 330: kind=3;
 16412     0CFB  3003               	movlw	3
 16413     0CFC  0020               	movlb	0	; select bank0
 16414     0CFD  00D8               	movwf	_kind
 16415     0CFE  3000               	movlw	0
 16416     0CFF  00D9               	movwf	_kind+1
 16417     0D00  2D9A               	goto	i1l1039
 16418     0D01                     i1l3917:
 16419                           
 16420                           ;main.c: 336: if(kind>0){
 16421     0D01  0020               	movlb	0	; select bank0
 16422     0D02  0859               	movf	_kind+1,w
 16423     0D03  3A80               	xorlw	128
 16424     0D04  00F6               	movwf	??_Alm_Adj
 16425     0D05  3080               	movlw	128
 16426     0D06  0276               	subwf	??_Alm_Adj,w
 16427     0D07  1D03               	skipz
 16428     0D08  2D0B               	goto	u240_25
 16429     0D09  3001               	movlw	1
 16430     0D0A  0258               	subwf	_kind,w
 16431     0D0B                     u240_25:
 16432     0D0B  1C03               	skipc
 16433     0D0C  2D0E               	goto	u240_21
 16434     0D0D  2D0F               	goto	u240_20
 16435     0D0E                     u240_21:
 16436     0D0E  2D17               	goto	i1l3921
 16437     0D0F                     u240_20:
 16438     0D0F                     i1l3919:
 16439                           
 16440                           ;main.c: 337: kind=kind-1;
 16441     0D0F  0020               	movlb	0	; select bank0
 16442     0D10  0858               	movf	_kind,w
 16443     0D11  3EFF               	addlw	255
 16444     0D12  00D8               	movwf	_kind
 16445     0D13  30FF               	movlw	255
 16446     0D14  3D59               	addwfc	_kind+1,w
 16447     0D15  00D9               	movwf	_kind+1
 16448                           
 16449                           ;main.c: 338: }
 16450     0D16  2D9A               	goto	i1l1039
 16451     0D17                     i1l3921:
 16452                           
 16453                           ;main.c: 339: else{;main.c: 340: kind=0;
 16454     0D17  0020               	movlb	0	; select bank0
 16455     0D18  01D8               	clrf	_kind
 16456     0D19  01D9               	clrf	_kind+1
 16457     0D1A  2D9A               	goto	i1l1039
 16458     0D1B                     i1l3923:
 16459                           
 16460                           ;main.c: 345: if (alm_settei[kind][0] < alm_settei[kind][2]){
 16461     0D1B  3003               	movlw	3
 16462     0D1C  00F0               	movwf	i1___bmul@multiplicand
 16463     0D1D  0020               	movlb	0	; select bank0
 16464     0D1E  0858               	movf	_kind,w
 16465     0D1F  3194  24CD  318C   	fcall	i1___bmul
 16466     0D22  3E38               	addlw	(low (_alm_settei| (0+256)))& (0+255)
 16467     0D23  0086               	movwf	6
 16468     0D24  3001               	movlw	1	; select bank2/3
 16469     0D25  0087               	movwf	7
 16470     0D26  3003               	movlw	3
 16471     0D27  00F0               	movwf	i1___bmul@multiplicand
 16472     0D28  0020               	movlb	0	; select bank0
 16473     0D29  0858               	movf	_kind,w
 16474     0D2A  3194  24CD  318C   	fcall	i1___bmul
 16475     0D2D  3E3A               	addlw	(low ((_alm_settei| (0+256)+2)))& (0+255)
 16476     0D2E  0084               	movwf	4
 16477     0D2F  3001               	movlw	1	; select bank2/3
 16478     0D30  0085               	movwf	5
 16479     0D31  0800               	movf	0,w
 16480     0D32  0201               	subwf	1,w
 16481     0D33  1803               	skipnc
 16482     0D34  2D36               	goto	u241_21
 16483     0D35  2D37               	goto	u241_20
 16484     0D36                     u241_21:
 16485     0D36  2D9A               	goto	i1l1039
 16486     0D37                     u241_20:
 16487     0D37                     i1l3925:
 16488                           
 16489                           ;main.c: 346: alm_settei[kind][0] = alm_settei[kind][0] +1;
 16490     0D37  3003               	movlw	3
 16491     0D38  00F0               	movwf	i1___bmul@multiplicand
 16492     0D39  0020               	movlb	0	; select bank0
 16493     0D3A  0858               	movf	_kind,w
 16494     0D3B  3194  24CD  318C   	fcall	i1___bmul
 16495     0D3E  3E38               	addlw	(low (_alm_settei| (0+256)))& (0+255)
 16496     0D3F  0086               	movwf	6
 16497     0D40  3001               	movlw	1	; select bank2/3
 16498     0D41  0087               	movwf	7
 16499     0D42  3003               	movlw	3
 16500     0D43  00F0               	movwf	i1___bmul@multiplicand
 16501     0D44  0020               	movlb	0	; select bank0
 16502     0D45  0858               	movf	_kind,w
 16503     0D46  3194  24CD  318C   	fcall	i1___bmul
 16504     0D49  3E38               	addlw	(low (_alm_settei| (0+256)))& (0+255)
 16505     0D4A  0084               	movwf	4
 16506     0D4B  3001               	movlw	1	; select bank2/3
 16507     0D4C  0085               	movwf	5
 16508     0D4D  0800               	movf	0,w
 16509     0D4E  3E01               	addlw	1
 16510     0D4F  0081               	movwf	1
 16511     0D50  2D9A               	goto	i1l1039
 16512     0D51                     i1l3927:
 16513                           
 16514                           ;main.c: 351: if (alm_settei[kind][0] > alm_settei[kind][1]){
 16515     0D51  3003               	movlw	3
 16516     0D52  00F0               	movwf	i1___bmul@multiplicand
 16517     0D53  0020               	movlb	0	; select bank0
 16518     0D54  0858               	movf	_kind,w
 16519     0D55  3194  24CD  318C   	fcall	i1___bmul
 16520     0D58  3E39               	addlw	(low ((_alm_settei| (0+256)+1)))& (0+255)
 16521     0D59  0086               	movwf	6
 16522     0D5A  3001               	movlw	1	; select bank2/3
 16523     0D5B  0087               	movwf	7
 16524     0D5C  3003               	movlw	3
 16525     0D5D  00F0               	movwf	i1___bmul@multiplicand
 16526     0D5E  0020               	movlb	0	; select bank0
 16527     0D5F  0858               	movf	_kind,w
 16528     0D60  3194  24CD  318C   	fcall	i1___bmul
 16529     0D63  3E38               	addlw	(low (_alm_settei| (0+256)))& (0+255)
 16530     0D64  0084               	movwf	4
 16531     0D65  3001               	movlw	1	; select bank2/3
 16532     0D66  0085               	movwf	5
 16533     0D67  0800               	movf	0,w
 16534     0D68  0201               	subwf	1,w
 16535     0D69  1803               	skipnc
 16536     0D6A  2D6C               	goto	u242_21
 16537     0D6B  2D6D               	goto	u242_20
 16538     0D6C                     u242_21:
 16539     0D6C  2D9A               	goto	i1l1039
 16540     0D6D                     u242_20:
 16541     0D6D                     i1l3929:
 16542                           
 16543                           ;main.c: 352: alm_settei[kind][0] = alm_settei[kind][0] -1;
 16544     0D6D  3003               	movlw	3
 16545     0D6E  00F0               	movwf	i1___bmul@multiplicand
 16546     0D6F  0020               	movlb	0	; select bank0
 16547     0D70  0858               	movf	_kind,w
 16548     0D71  3194  24CD  318C   	fcall	i1___bmul
 16549     0D74  3E38               	addlw	(low (_alm_settei| (0+256)))& (0+255)
 16550     0D75  0086               	movwf	6
 16551     0D76  3001               	movlw	1	; select bank2/3
 16552     0D77  0087               	movwf	7
 16553     0D78  3003               	movlw	3
 16554     0D79  00F0               	movwf	i1___bmul@multiplicand
 16555     0D7A  0020               	movlb	0	; select bank0
 16556     0D7B  0858               	movf	_kind,w
 16557     0D7C  3194  24CD  318C   	fcall	i1___bmul
 16558     0D7F  3E38               	addlw	(low (_alm_settei| (0+256)))& (0+255)
 16559     0D80  0084               	movwf	4
 16560     0D81  3001               	movlw	1	; select bank2/3
 16561     0D82  0085               	movwf	5
 16562     0D83  0800               	movf	0,w
 16563     0D84  3EFF               	addlw	255
 16564     0D85  0081               	movwf	1
 16565     0D86  2D9A               	goto	i1l1039
 16566     0D87                     i1l3933:
 16567                           
 16568                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 16569                           ; Switch size 1, requested type "simple"
 16570                           ; Number of cases is 1, Range of values is 0 to 0
 16571                           ; switch strategies available:
 16572                           ; Name         Instructions Cycles
 16573                           ; simple_byte            4     3 (average)
 16574                           ; direct_byte            8     6 (fixed)
 16575                           ; jumptable            260     6 (fixed)
 16576                           ;	Chosen strategy is simple_byte
 16577     0D87  0875               	movf	Alm_Adj@num+1,w
 16578     0D88  3A00               	xorlw	0	; case 0
 16579     0D89  1903               	skipnz
 16580     0D8A  2D8C               	goto	i1l5171
 16581     0D8B  2D9A               	goto	i1l1039
 16582     0D8C                     i1l5171:
 16583                           
 16584                           ; Switch size 1, requested type "simple"
 16585                           ; Number of cases is 4, Range of values is 1 to 4
 16586                           ; switch strategies available:
 16587                           ; Name         Instructions Cycles
 16588                           ; simple_byte           13     7 (average)
 16589                           ; direct_byte           17     9 (fixed)
 16590                           ; jumptable            263     9 (fixed)
 16591                           ;	Chosen strategy is simple_byte
 16592     0D8C  0874               	movf	Alm_Adj@num,w
 16593     0D8D  3A01               	xorlw	1	; case 1
 16594     0D8E  1903               	skipnz
 16595     0D8F  2CE5               	goto	i1l3911
 16596     0D90  3A03               	xorlw	3	; case 2
 16597     0D91  1903               	skipnz
 16598     0D92  2D01               	goto	i1l3917
 16599     0D93  3A01               	xorlw	1	; case 3
 16600     0D94  1903               	skipnz
 16601     0D95  2D1B               	goto	i1l3923
 16602     0D96  3A07               	xorlw	7	; case 4
 16603     0D97  1903               	skipnz
 16604     0D98  2D51               	goto	i1l3927
 16605     0D99  2D9A               	goto	i1l1039
 16606     0D9A                     i1l1039:
 16607     0D9A  0008               	return
 16608     0D9B                     __end_of_Alm_Adj:
 16609                           
 16610                           	psect	text72
 16611     14CD                     __ptext72:	
 16612 ;; *************** function i1___bmul *****************
 16613 ;; Defined at:
 16614 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c90\common\Umul8.c"
 16615 ;; Parameters:    Size  Location     Type
 16616 ;;  multiplier      1    wreg     unsigned char 
 16617 ;;  multiplicand    1    0[COMMON] unsigned char 
 16618 ;; Auto vars:     Size  Location     Type
 16619 ;;  multiplier      1    3[COMMON] unsigned char 
 16620 ;;  product         1    2[COMMON] unsigned char 
 16621 ;; Return value:  Size  Location     Type
 16622 ;;                  1    wreg      unsigned char 
 16623 ;; Registers used:
 16624 ;;		wreg, status,2, status,0
 16625 ;; Tracked objects:
 16626 ;;		On entry : 0/0
 16627 ;;		On exit  : 0/0
 16628 ;;		Unchanged: 0/0
 16629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16630 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16631 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16632 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16633 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16634 ;;Total ram usage:        4 bytes
 16635 ;; Hardware stack levels used: 1
 16636 ;; This function calls:
 16637 ;;		Nothing
 16638 ;; This function is called by:
 16639 ;;		_Time_Adj
 16640 ;;		_Alm_Adj
 16641 ;; This function uses a non-reentrant model
 16642 ;;
 16643                           
 16644     14CD                     i1___bmul:	
 16645                           ;psect for function i1___bmul
 16646                           
 16647                           
 16648                           ;incstack = 0
 16649                           ; Regs used in i1___bmul: [wreg+status,2+status,0]
 16650                           ;i1___bmul@multiplier stored from wreg
 16651     14CD  00F3               	movwf	i1___bmul@multiplier
 16652     14CE                     i1l3695:
 16653     14CE  01F2               	clrf	i1___bmul@product
 16654     14CF                     i1l3697:
 16655     14CF  1C73               	btfss	i1___bmul@multiplier,0
 16656     14D0  2CD2               	goto	u229_21
 16657     14D1  2CD3               	goto	u229_20
 16658     14D2                     u229_21:
 16659     14D2  2CD7               	goto	i1l3701
 16660     14D3                     u229_20:
 16661     14D3                     i1l3699:
 16662     14D3  0870               	movf	i1___bmul@multiplicand,w
 16663     14D4  00F1               	movwf	??i1___bmul
 16664     14D5  0871               	movf	??i1___bmul,w
 16665     14D6  07F2               	addwf	i1___bmul@product,f
 16666     14D7                     i1l3701:
 16667     14D7  1003               	clrc
 16668     14D8  0DF0               	rlf	i1___bmul@multiplicand,f
 16669     14D9                     i1l3703:
 16670     14D9  1003               	clrc
 16671     14DA  0CF3               	rrf	i1___bmul@multiplier,f
 16672     14DB  0873               	movf	i1___bmul@multiplier,w
 16673     14DC  1D03               	btfss	3,2
 16674     14DD  2CDF               	goto	u230_21
 16675     14DE  2CE0               	goto	u230_20
 16676     14DF                     u230_21:
 16677     14DF  2CCF               	goto	i1l3697
 16678     14E0                     u230_20:
 16679     14E0                     i1l3705:
 16680     14E0  0872               	movf	i1___bmul@product,w
 16681     14E1                     i1l1267:
 16682     14E1  0008               	return
 16683     14E2                     __end_ofi1___bmul:
 16684                           
 16685                           	psect	text73
 16686     12D3                     __ptext73:	
 16687 ;; *************** function _I2C_MasterIsr *****************
 16688 ;; Defined at:
 16689 ;;		line 318 in file "mcc_generated_files/i2c_master.c"
 16690 ;; Parameters:    Size  Location     Type
 16691 ;;		None
 16692 ;; Auto vars:     Size  Location     Type
 16693 ;;		None
 16694 ;; Return value:  Size  Location     Type
 16695 ;;                  1    wreg      void 
 16696 ;; Registers used:
 16697 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16698 ;; Tracked objects:
 16699 ;;		On entry : 0/0
 16700 ;;		On exit  : 0/0
 16701 ;;		Unchanged: 0/0
 16702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16706 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16707 ;;Total ram usage:        0 bytes
 16708 ;; Hardware stack levels used: 1
 16709 ;; Hardware stack levels required when called: 5
 16710 ;; This function calls:
 16711 ;;		_I2C_MasterFsm
 16712 ;; This function is called by:
 16713 ;;		_I2C_Open
 16714 ;;		_INTERRUPT_InterruptManager
 16715 ;; This function uses a non-reentrant model
 16716 ;;
 16717                           
 16718     12D3                     _I2C_MasterIsr:	
 16719                           ;psect for function _I2C_MasterIsr
 16720                           
 16721     12D3                     i1l4783:	
 16722                           ;incstack = 0
 16723                           ; Regs used in _I2C_MasterIsr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16724                           
 16725                           
 16726                           ;i2c_master.c: 320: I2C_MasterFsm();
 16727     12D3  3196  26B5  3192   	fcall	_I2C_MasterFsm
 16728     12D6                     i1l533:
 16729     12D6  0008               	return
 16730     12D7                     __end_of_I2C_MasterIsr:
 16731                           
 16732                           	psect	text74
 16733     16B5                     __ptext74:	
 16734 ;; *************** function _I2C_MasterFsm *****************
 16735 ;; Defined at:
 16736 ;;		line 323 in file "mcc_generated_files/i2c_master.c"
 16737 ;; Parameters:    Size  Location     Type
 16738 ;;		None
 16739 ;; Auto vars:     Size  Location     Type
 16740 ;;		None
 16741 ;; Return value:  Size  Location     Type
 16742 ;;                  1    wreg      void 
 16743 ;; Registers used:
 16744 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16745 ;; Tracked objects:
 16746 ;;		On entry : 0/0
 16747 ;;		On exit  : 0/0
 16748 ;;		Unchanged: 0/0
 16749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16752 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16753 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16754 ;;Total ram usage:        2 bytes
 16755 ;; Hardware stack levels used: 1
 16756 ;; Hardware stack levels required when called: 4
 16757 ;; This function calls:
 16758 ;;		_I2C_DO_ADDRESS_NACK
 16759 ;;		_I2C_DO_IDLE
 16760 ;;		_I2C_DO_RCEN
 16761 ;;		_I2C_DO_RESET
 16762 ;;		_I2C_DO_RX
 16763 ;;		_I2C_DO_RX_ACK
 16764 ;;		_I2C_DO_RX_NACK_RESTART
 16765 ;;		_I2C_DO_RX_NACK_STOP
 16766 ;;		_I2C_DO_SEND_ADR_READ
 16767 ;;		_I2C_DO_SEND_ADR_WRITE
 16768 ;;		_I2C_DO_SEND_RESTART
 16769 ;;		_I2C_DO_SEND_RESTART_READ
 16770 ;;		_I2C_DO_SEND_RESTART_WRITE
 16771 ;;		_I2C_DO_SEND_STOP
 16772 ;;		_I2C_DO_TX
 16773 ;;		_I2C_DO_TX_EMPTY
 16774 ;;		_I2C_MasterIsNack
 16775 ;;		i1_I2C_MasterClearIrq
 16776 ;; This function is called by:
 16777 ;;		_I2C_MasterIsr
 16778 ;; This function uses a non-reentrant model
 16779 ;;
 16780                           
 16781     16B5                     _I2C_MasterFsm:	
 16782                           ;psect for function _I2C_MasterFsm
 16783                           
 16784     16B5                     i1l4567:	
 16785                           ;incstack = 0
 16786                           ; Regs used in _I2C_MasterFsm: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16787                           
 16788                           
 16789                           ;i2c_master.c: 325: I2C_MasterClearIrq();
 16790     16B5  3192  22AD  3196   	fcall	i1_I2C_MasterClearIrq
 16791     16B8                     i1l4569:
 16792                           
 16793                           ;i2c_master.c: 327: if(I2C_Status.addressNackCheck && I2C_MasterIsNack())
 16794     16B8  0021               	movlb	1	; select bank1
 16795     16B9  1C3D               	btfss	(_I2C_Status^(0+128)+29),0
 16796     16BA  2EBC               	goto	u353_21
 16797     16BB  2EBD               	goto	u353_20
 16798     16BC                     u353_21:
 16799     16BC  2EC8               	goto	i1l4575
 16800     16BD                     u353_20:
 16801     16BD                     i1l4571:
 16802     16BD  3193  2312  3196   	fcall	_I2C_MasterIsNack
 16803     16C0  3A00               	xorlw	0
 16804     16C1  1903               	skipnz
 16805     16C2  2EC4               	goto	u354_21
 16806     16C3  2EC5               	goto	u354_20
 16807     16C4                     u354_21:
 16808     16C4  2EC8               	goto	i1l4575
 16809     16C5                     u354_20:
 16810     16C5                     i1l4573:
 16811                           
 16812                           ;i2c_master.c: 328: {;i2c_master.c: 329: I2C_Status.state = I2C_ADDRESS_NACK;
 16813     16C5  300F               	movlw	15
 16814     16C6  0021               	movlb	1	; select bank1
 16815     16C7  00BB               	movwf	(_I2C_Status^(0+128)+27)
 16816     16C8                     i1l4575:
 16817                           
 16818                           ;i2c_master.c: 330: };i2c_master.c: 331: I2C_Status.state = i2c_fsmStateTable[I2C_Status
      +                          .state]();
 16819     16C8  0021               	movlb	1	; select bank1
 16820     16C9  083B               	movf	(_I2C_Status^(0+128)+27),w
 16821     16CA  00FC               	movwf	??_I2C_MasterFsm
 16822     16CB  01FD               	clrf	??_I2C_MasterFsm+1
 16823     16CC  35FC               	lslf	??_I2C_MasterFsm,f
 16824     16CD  0DFD               	rlf	??_I2C_MasterFsm+1,f
 16825     16CE  3021               	movlw	low _i2c_fsmStateTable
 16826     16CF  077C               	addwf	??_I2C_MasterFsm,w
 16827     16D0  0084               	movwf	4
 16828     16D1  3018               	movlw	high _i2c_fsmStateTable
 16829     16D2  3D7D               	addwfc	??_I2C_MasterFsm+1,w
 16830     16D3  3880               	iorlw	128
 16831     16D4  0085               	movwf	5
 16832     16D5  3F01               	moviw [1]fsr0
 16833     16D6  008A               	movwf	10
 16834     16D7  3F00               	moviw [0]fsr0
 16835     16D8  000A               	callw
 16836     16D9  3196               	pagesel	$
 16837     16DA  0021               	movlb	1	; select bank1
 16838     16DB  00BB               	movwf	(_I2C_Status^(0+128)+27)
 16839     16DC                     i1l537:
 16840     16DC  0008               	return
 16841     16DD                     __end_of_I2C_MasterFsm:
 16842                           
 16843                           	psect	text75
 16844     12AD                     __ptext75:	
 16845 ;; *************** function i1_I2C_MasterClearIrq *****************
 16846 ;; Defined at:
 16847 ;;		line 642 in file "mcc_generated_files/i2c_master.c"
 16848 ;; Parameters:    Size  Location     Type
 16849 ;;		None
 16850 ;; Auto vars:     Size  Location     Type
 16851 ;;		None
 16852 ;; Return value:  Size  Location     Type
 16853 ;;                  1    wreg      void 
 16854 ;; Registers used:
 16855 ;;		None
 16856 ;; Tracked objects:
 16857 ;;		On entry : 0/0
 16858 ;;		On exit  : 0/0
 16859 ;;		Unchanged: 0/0
 16860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16864 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16865 ;;Total ram usage:        0 bytes
 16866 ;; Hardware stack levels used: 1
 16867 ;; This function calls:
 16868 ;;		Nothing
 16869 ;; This function is called by:
 16870 ;;		_I2C_MasterFsm
 16871 ;; This function uses a non-reentrant model
 16872 ;;
 16873                           
 16874     12AD                     i1_I2C_MasterClearIrq:	
 16875                           ;psect for function i1_I2C_MasterClearIrq
 16876                           
 16877     12AD                     i1l4437:	
 16878                           ;incstack = 0
 16879                           ; Regs used in i1_I2C_MasterClearIrq: []
 16880                           
 16881                           
 16882                           ;i2c_master.c: 644: PIR1bits.SSP1IF = 0;
 16883     12AD  0020               	movlb	0	; select bank0
 16884     12AE  1191               	bcf	17,3	;volatile
 16885     12AF                     i1l700:
 16886     12AF  0008               	return
 16887     12B0                     __end_ofi1_I2C_MasterClearIrq:
 16888                           
 16889                           	psect	text76
 16890     15C1                     __ptext76:	
 16891 ;; *************** function _I2C_DO_ADDRESS_NACK *****************
 16892 ;; Defined at:
 16893 ;;		line 501 in file "mcc_generated_files/i2c_master.c"
 16894 ;; Parameters:    Size  Location     Type
 16895 ;;		None
 16896 ;; Auto vars:     Size  Location     Type
 16897 ;;		None
 16898 ;; Return value:  Size  Location     Type
 16899 ;;                  1    wreg      enum E11982
 16900 ;; Registers used:
 16901 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16902 ;; Tracked objects:
 16903 ;;		On entry : 0/0
 16904 ;;		On exit  : 0/0
 16905 ;;		Unchanged: 0/0
 16906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16910 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16911 ;;Total ram usage:        0 bytes
 16912 ;; Hardware stack levels used: 1
 16913 ;; Hardware stack levels required when called: 3
 16914 ;; This function calls:
 16915 ;;		NULL
 16916 ;;		_I2C_CallbackReturnReset
 16917 ;;		_I2C_CallbackReturnStop
 16918 ;;		_I2C_DO_SEND_RESTART
 16919 ;;		_I2C_DO_SEND_STOP
 16920 ;;		_rd1RegCompleteHandler
 16921 ;;		_rd2RegCompleteHandler
 16922 ;;		_rdBlkRegCompleteHandler
 16923 ;;		_wr1RegCompleteHandler
 16924 ;;		_wr2RegCompleteHandler
 16925 ;; This function is called by:
 16926 ;;		_I2C_MasterFsm
 16927 ;; This function uses a non-reentrant model
 16928 ;;
 16929                           
 16930     15C1                     _I2C_DO_ADDRESS_NACK:	
 16931                           ;psect for function _I2C_DO_ADDRESS_NACK
 16932                           
 16933     15C1                     i1l4093:	
 16934                           ;incstack = 0
 16935                           ; Regs used in _I2C_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16936                           
 16937                           
 16938                           ;i2c_master.c: 503: I2C_Status.addressNackCheck = 0;
 16939     15C1  0021               	movlb	1	; select bank1
 16940     15C2  103D               	bcf	(_I2C_Status^(0+128)+29),0
 16941     15C3                     i1l4095:
 16942                           
 16943                           ;i2c_master.c: 504: I2C_Status.error = I2C_FAIL;
 16944     15C3  3002               	movlw	2
 16945     15C4  00BC               	movwf	(_I2C_Status^(0+128)+28)
 16946                           
 16947                           ;i2c_master.c: 505: switch(I2C_Status.callbackTable[I2C_ADDR_NACK](I2C_Status.callbackPa
      +                          yload[I2C_ADDR_NACK]))
 16948     15C5  2DCE               	goto	i1l4107
 16949     15C6                     i1l4097:
 16950                           
 16951                           ;i2c_master.c: 508: case I2C_RESTART_WRITE:;i2c_master.c: 509: return I2C_DO_SEND_RESTAR
      +                          T();
 16952     15C6  3192  22EF  3195   	fcall	_I2C_DO_SEND_RESTART
 16953     15C9  2DE0               	goto	i1l628
 16954     15CA                     i1l4101:
 16955                           
 16956                           ;i2c_master.c: 511: return I2C_DO_SEND_STOP();
 16957     15CA  3192  22F4  3195   	fcall	_I2C_DO_SEND_STOP
 16958     15CD  2DE0               	goto	i1l628
 16959     15CE                     i1l4107:
 16960     15CE  082E               	movf	(low ((_I2C_Status| 0+14)))^(0+128),w
 16961     15CF  00F7               	movwf	I2C_CallbackReturnReset@funPtr
 16962     15D0  3004               	movlw	4
 16963     15D1  3EA0               	addlw	(low (_I2C_Status| 0))& (0+255)
 16964     15D2  0086               	movwf	6
 16965     15D3  0187               	clrf	7
 16966     15D4  3F41               	moviw [1]fsr1
 16967     15D5  008A               	movwf	10
 16968     15D6  3F40               	moviw [0]fsr1
 16969     15D7  000A               	callw
 16970     15D8  3195               	pagesel	$
 16971                           
 16972                           ; Switch size 1, requested type "simple"
 16973                           ; Number of cases is 2, Range of values is 2 to 3
 16974                           ; switch strategies available:
 16975                           ; Name         Instructions Cycles
 16976                           ; simple_byte            7     4 (average)
 16977                           ; direct_byte           13     9 (fixed)
 16978                           ; jumptable            263     9 (fixed)
 16979                           ;	Chosen strategy is simple_byte
 16980     15D9  3A02               	xorlw	2	; case 2
 16981     15DA  1903               	skipnz
 16982     15DB  2DC6               	goto	i1l4097
 16983     15DC  3A01               	xorlw	1	; case 3
 16984     15DD  1903               	skipnz
 16985     15DE  2DC6               	goto	i1l4097
 16986     15DF  2DCA               	goto	i1l4101
 16987     15E0                     i1l628:
 16988     15E0  0008               	return
 16989     15E1                     __end_of_I2C_DO_ADDRESS_NACK:
 16990                           
 16991                           	psect	text77
 16992     1308                     __ptext77:	
 16993 ;; *************** function _I2C_DO_RESET *****************
 16994 ;; Defined at:
 16995 ;;		line 495 in file "mcc_generated_files/i2c_master.c"
 16996 ;; Parameters:    Size  Location     Type
 16997 ;;		None
 16998 ;; Auto vars:     Size  Location     Type
 16999 ;;		None
 17000 ;; Return value:  Size  Location     Type
 17001 ;;                  1    wreg      enum E11982
 17002 ;; Registers used:
 17003 ;;		wreg, status,2
 17004 ;; Tracked objects:
 17005 ;;		On entry : 0/0
 17006 ;;		On exit  : 0/0
 17007 ;;		Unchanged: 0/0
 17008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17012 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17013 ;;Total ram usage:        0 bytes
 17014 ;; Hardware stack levels used: 1
 17015 ;; This function calls:
 17016 ;;		Nothing
 17017 ;; This function is called by:
 17018 ;;		_I2C_MasterFsm
 17019 ;; This function uses a non-reentrant model
 17020 ;;
 17021                           
 17022     1308                     _I2C_DO_RESET:	
 17023                           ;psect for function _I2C_DO_RESET
 17024                           
 17025     1308                     i1l4085:	
 17026                           ;incstack = 0
 17027                           ; Regs used in _I2C_DO_RESET: [wreg+status,2]
 17028                           
 17029                           
 17030                           ;i2c_master.c: 497: I2C_Status.busy = 0;
 17031     1308  0021               	movlb	1	; select bank1
 17032     1309  10BD               	bcf	(_I2C_Status^(0+128)+29),1
 17033     130A                     i1l4087:
 17034                           
 17035                           ;i2c_master.c: 498: I2C_Status.error = I2C_NOERR;
 17036     130A  01BC               	clrf	(_I2C_Status^(0+128)+28)
 17037     130B                     i1l4089:
 17038                           
 17039                           ;i2c_master.c: 499: return I2C_RESET;
 17040     130B  300E               	movlw	14
 17041     130C                     i1l622:
 17042     130C  0008               	return
 17043     130D                     __end_of_I2C_DO_RESET:
 17044                           
 17045                           	psect	text78
 17046     1303                     __ptext78:	
 17047 ;; *************** function _I2C_DO_RX_NACK_RESTART *****************
 17048 ;; Defined at:
 17049 ;;		line 489 in file "mcc_generated_files/i2c_master.c"
 17050 ;; Parameters:    Size  Location     Type
 17051 ;;		None
 17052 ;; Auto vars:     Size  Location     Type
 17053 ;;		None
 17054 ;; Return value:  Size  Location     Type
 17055 ;;                  1    wreg      enum E11982
 17056 ;; Registers used:
 17057 ;;		wreg, status,2, status,0, pclath, cstack
 17058 ;; Tracked objects:
 17059 ;;		On entry : 0/0
 17060 ;;		On exit  : 0/0
 17061 ;;		Unchanged: 0/0
 17062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17066 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17067 ;;Total ram usage:        0 bytes
 17068 ;; Hardware stack levels used: 1
 17069 ;; Hardware stack levels required when called: 1
 17070 ;; This function calls:
 17071 ;;		_I2C_MasterSendNack
 17072 ;; This function is called by:
 17073 ;;		_I2C_DO_RX
 17074 ;;		_I2C_MasterFsm
 17075 ;; This function uses a non-reentrant model
 17076 ;;
 17077                           
 17078     1303                     _I2C_DO_RX_NACK_RESTART:	
 17079                           ;psect for function _I2C_DO_RX_NACK_RESTART
 17080                           
 17081     1303                     i1l3779:	
 17082                           ;incstack = 0
 17083                           ; Regs used in _I2C_DO_RX_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
 17084                           
 17085                           
 17086                           ;i2c_master.c: 491: I2C_MasterSendNack();
 17087     1303  3192  22CB  3193   	fcall	_I2C_MasterSendNack
 17088     1306                     i1l3781:
 17089                           
 17090                           ;i2c_master.c: 492: return I2C_SEND_RESTART;
 17091     1306  3009               	movlw	9
 17092     1307                     i1l619:
 17093     1307  0008               	return
 17094     1308                     __end_of_I2C_DO_RX_NACK_RESTART:
 17095                           
 17096                           	psect	text79
 17097     12FE                     __ptext79:	
 17098 ;; *************** function _I2C_DO_RX_NACK_STOP *****************
 17099 ;; Defined at:
 17100 ;;		line 483 in file "mcc_generated_files/i2c_master.c"
 17101 ;; Parameters:    Size  Location     Type
 17102 ;;		None
 17103 ;; Auto vars:     Size  Location     Type
 17104 ;;		None
 17105 ;; Return value:  Size  Location     Type
 17106 ;;                  1    wreg      enum E11982
 17107 ;; Registers used:
 17108 ;;		wreg, status,2, status,0, pclath, cstack
 17109 ;; Tracked objects:
 17110 ;;		On entry : 0/0
 17111 ;;		On exit  : 0/0
 17112 ;;		Unchanged: 0/0
 17113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17117 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17118 ;;Total ram usage:        0 bytes
 17119 ;; Hardware stack levels used: 1
 17120 ;; Hardware stack levels required when called: 1
 17121 ;; This function calls:
 17122 ;;		_I2C_MasterSendNack
 17123 ;; This function is called by:
 17124 ;;		_I2C_DO_RX
 17125 ;;		_I2C_MasterFsm
 17126 ;; This function uses a non-reentrant model
 17127 ;;
 17128                           
 17129     12FE                     _I2C_DO_RX_NACK_STOP:	
 17130                           ;psect for function _I2C_DO_RX_NACK_STOP
 17131                           
 17132     12FE                     i1l3785:	
 17133                           ;incstack = 0
 17134                           ; Regs used in _I2C_DO_RX_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
 17135                           
 17136                           
 17137                           ;i2c_master.c: 485: I2C_MasterSendNack();
 17138     12FE  3192  22CB  3192   	fcall	_I2C_MasterSendNack
 17139     1301                     i1l3787:
 17140                           
 17141                           ;i2c_master.c: 486: return I2C_SEND_STOP;
 17142     1301  300A               	movlw	10
 17143     1302                     i1l616:
 17144     1302  0008               	return
 17145     1303                     __end_of_I2C_DO_RX_NACK_STOP:
 17146                           
 17147                           	psect	text80
 17148     12F9                     __ptext80:	
 17149 ;; *************** function _I2C_DO_RX_ACK *****************
 17150 ;; Defined at:
 17151 ;;		line 476 in file "mcc_generated_files/i2c_master.c"
 17152 ;; Parameters:    Size  Location     Type
 17153 ;;		None
 17154 ;; Auto vars:     Size  Location     Type
 17155 ;;		None
 17156 ;; Return value:  Size  Location     Type
 17157 ;;                  1    wreg      enum E11982
 17158 ;; Registers used:
 17159 ;;		wreg, status,2, status,0, pclath, cstack
 17160 ;; Tracked objects:
 17161 ;;		On entry : 0/0
 17162 ;;		On exit  : 0/0
 17163 ;;		Unchanged: 0/0
 17164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17168 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17169 ;;Total ram usage:        0 bytes
 17170 ;; Hardware stack levels used: 1
 17171 ;; Hardware stack levels required when called: 1
 17172 ;; This function calls:
 17173 ;;		_I2C_MasterSendAck
 17174 ;; This function is called by:
 17175 ;;		_I2C_MasterFsm
 17176 ;; This function uses a non-reentrant model
 17177 ;;
 17178                           
 17179     12F9                     _I2C_DO_RX_ACK:	
 17180                           ;psect for function _I2C_DO_RX_ACK
 17181                           
 17182     12F9                     i1l4079:	
 17183                           ;incstack = 0
 17184                           ; Regs used in _I2C_DO_RX_ACK: [wreg+status,2+status,0+pclath+cstack]
 17185                           
 17186                           
 17187                           ;i2c_master.c: 478: I2C_MasterSendAck();
 17188     12F9  3192  22CF  3192   	fcall	_I2C_MasterSendAck
 17189     12FC                     i1l4081:
 17190                           
 17191                           ;i2c_master.c: 479: return I2C_RCEN;
 17192     12FC  3005               	movlw	5
 17193     12FD                     i1l613:
 17194     12FD  0008               	return
 17195     12FE                     __end_of_I2C_DO_RX_ACK:
 17196                           
 17197                           	psect	text81
 17198     12F4                     __ptext81:	
 17199 ;; *************** function _I2C_DO_SEND_STOP *****************
 17200 ;; Defined at:
 17201 ;;		line 470 in file "mcc_generated_files/i2c_master.c"
 17202 ;; Parameters:    Size  Location     Type
 17203 ;;		None
 17204 ;; Auto vars:     Size  Location     Type
 17205 ;;		None
 17206 ;; Return value:  Size  Location     Type
 17207 ;;                  1    wreg      enum E11982
 17208 ;; Registers used:
 17209 ;;		wreg, status,2, status,0, pclath, cstack
 17210 ;; Tracked objects:
 17211 ;;		On entry : 0/0
 17212 ;;		On exit  : 0/0
 17213 ;;		Unchanged: 0/0
 17214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17218 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17219 ;;Total ram usage:        0 bytes
 17220 ;; Hardware stack levels used: 1
 17221 ;; Hardware stack levels required when called: 1
 17222 ;; This function calls:
 17223 ;;		_I2C_MasterStop
 17224 ;; This function is called by:
 17225 ;;		_I2C_DO_TX
 17226 ;;		_I2C_DO_TX_EMPTY
 17227 ;;		_I2C_DO_ADDRESS_NACK
 17228 ;;		_I2C_MasterFsm
 17229 ;; This function uses a non-reentrant model
 17230 ;;
 17231                           
 17232     12F4                     _I2C_DO_SEND_STOP:	
 17233                           ;psect for function _I2C_DO_SEND_STOP
 17234                           
 17235     12F4                     i1l3767:	
 17236                           ;incstack = 0
 17237                           ; Regs used in _I2C_DO_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
 17238                           
 17239                           
 17240                           ;i2c_master.c: 472: I2C_MasterStop();
 17241     12F4  3192  22A1  3192   	fcall	_I2C_MasterStop
 17242     12F7                     i1l3769:
 17243                           
 17244                           ;i2c_master.c: 473: return I2C_IDLE;
 17245     12F7  3000               	movlw	0
 17246     12F8                     i1l610:
 17247     12F8  0008               	return
 17248     12F9                     __end_of_I2C_DO_SEND_STOP:
 17249                           
 17250                           	psect	text82
 17251     12EF                     __ptext82:	
 17252 ;; *************** function _I2C_DO_SEND_RESTART *****************
 17253 ;; Defined at:
 17254 ;;		line 464 in file "mcc_generated_files/i2c_master.c"
 17255 ;; Parameters:    Size  Location     Type
 17256 ;;		None
 17257 ;; Auto vars:     Size  Location     Type
 17258 ;;		None
 17259 ;; Return value:  Size  Location     Type
 17260 ;;                  1    wreg      enum E11982
 17261 ;; Registers used:
 17262 ;;		wreg, status,2, status,0, pclath, cstack
 17263 ;; Tracked objects:
 17264 ;;		On entry : 0/0
 17265 ;;		On exit  : 0/0
 17266 ;;		Unchanged: 0/0
 17267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17271 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17272 ;;Total ram usage:        0 bytes
 17273 ;; Hardware stack levels used: 1
 17274 ;; Hardware stack levels required when called: 1
 17275 ;; This function calls:
 17276 ;;		_I2C_MasterEnableRestart
 17277 ;; This function is called by:
 17278 ;;		_I2C_DO_TX_EMPTY
 17279 ;;		_I2C_DO_ADDRESS_NACK
 17280 ;;		_I2C_MasterFsm
 17281 ;; This function uses a non-reentrant model
 17282 ;;
 17283                           
 17284     12EF                     _I2C_DO_SEND_RESTART:	
 17285                           ;psect for function _I2C_DO_SEND_RESTART
 17286                           
 17287     12EF                     i1l3793:	
 17288                           ;incstack = 0
 17289                           ; Regs used in _I2C_DO_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
 17290                           
 17291                           
 17292                           ;i2c_master.c: 466: I2C_MasterEnableRestart();
 17293     12EF  3192  229E  3192   	fcall	_I2C_MasterEnableRestart
 17294     12F2                     i1l3795:
 17295                           
 17296                           ;i2c_master.c: 467: return I2C_SEND_ADR_READ;
 17297     12F2  3001               	movlw	1
 17298     12F3                     i1l607:
 17299     12F3  0008               	return
 17300     12F4                     __end_of_I2C_DO_SEND_RESTART:
 17301                           
 17302                           	psect	text83
 17303     12EA                     __ptext83:	
 17304 ;; *************** function _I2C_DO_SEND_RESTART_WRITE *****************
 17305 ;; Defined at:
 17306 ;;		line 457 in file "mcc_generated_files/i2c_master.c"
 17307 ;; Parameters:    Size  Location     Type
 17308 ;;		None
 17309 ;; Auto vars:     Size  Location     Type
 17310 ;;		None
 17311 ;; Return value:  Size  Location     Type
 17312 ;;                  1    wreg      enum E11982
 17313 ;; Registers used:
 17314 ;;		wreg, status,2, status,0, pclath, cstack
 17315 ;; Tracked objects:
 17316 ;;		On entry : 0/0
 17317 ;;		On exit  : 0/0
 17318 ;;		Unchanged: 0/0
 17319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17323 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17324 ;;Total ram usage:        0 bytes
 17325 ;; Hardware stack levels used: 1
 17326 ;; Hardware stack levels required when called: 1
 17327 ;; This function calls:
 17328 ;;		_I2C_MasterEnableRestart
 17329 ;; This function is called by:
 17330 ;;		_I2C_DO_TX
 17331 ;;		_I2C_MasterFsm
 17332 ;; This function uses a non-reentrant model
 17333 ;;
 17334                           
 17335     12EA                     _I2C_DO_SEND_RESTART_WRITE:	
 17336                           ;psect for function _I2C_DO_SEND_RESTART_WRITE
 17337                           
 17338     12EA                     i1l3761:	
 17339                           ;incstack = 0
 17340                           ; Regs used in _I2C_DO_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
 17341                           
 17342                           
 17343                           ;i2c_master.c: 459: I2C_MasterEnableRestart();
 17344     12EA  3192  229E  3192   	fcall	_I2C_MasterEnableRestart
 17345     12ED                     i1l3763:
 17346                           
 17347                           ;i2c_master.c: 460: return I2C_SEND_ADR_WRITE;
 17348     12ED  3002               	movlw	2
 17349     12EE                     i1l604:
 17350     12EE  0008               	return
 17351     12EF                     __end_of_I2C_DO_SEND_RESTART_WRITE:
 17352                           
 17353                           	psect	text84
 17354     12E5                     __ptext84:	
 17355 ;; *************** function _I2C_DO_SEND_RESTART_READ *****************
 17356 ;; Defined at:
 17357 ;;		line 451 in file "mcc_generated_files/i2c_master.c"
 17358 ;; Parameters:    Size  Location     Type
 17359 ;;		None
 17360 ;; Auto vars:     Size  Location     Type
 17361 ;;		None
 17362 ;; Return value:  Size  Location     Type
 17363 ;;                  1    wreg      enum E11982
 17364 ;; Registers used:
 17365 ;;		wreg, status,2, status,0, pclath, cstack
 17366 ;; Tracked objects:
 17367 ;;		On entry : 0/0
 17368 ;;		On exit  : 0/0
 17369 ;;		Unchanged: 0/0
 17370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17374 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17375 ;;Total ram usage:        0 bytes
 17376 ;; Hardware stack levels used: 1
 17377 ;; Hardware stack levels required when called: 1
 17378 ;; This function calls:
 17379 ;;		_I2C_MasterEnableRestart
 17380 ;; This function is called by:
 17381 ;;		_I2C_DO_TX
 17382 ;;		_I2C_MasterFsm
 17383 ;; This function uses a non-reentrant model
 17384 ;;
 17385                           
 17386     12E5                     _I2C_DO_SEND_RESTART_READ:	
 17387                           ;psect for function _I2C_DO_SEND_RESTART_READ
 17388                           
 17389     12E5                     i1l3755:	
 17390                           ;incstack = 0
 17391                           ; Regs used in _I2C_DO_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
 17392                           
 17393                           
 17394                           ;i2c_master.c: 453: I2C_MasterEnableRestart();
 17395     12E5  3192  229E  3192   	fcall	_I2C_MasterEnableRestart
 17396     12E8                     i1l3757:
 17397                           
 17398                           ;i2c_master.c: 454: return I2C_SEND_ADR_READ;
 17399     12E8  3001               	movlw	1
 17400     12E9                     i1l601:
 17401     12E9  0008               	return
 17402     12EA                     __end_of_I2C_DO_SEND_RESTART_READ:
 17403                           
 17404                           	psect	text85
 17405     132A                     __ptext85:	
 17406 ;; *************** function _I2C_DO_RCEN *****************
 17407 ;; Defined at:
 17408 ;;		line 404 in file "mcc_generated_files/i2c_master.c"
 17409 ;; Parameters:    Size  Location     Type
 17410 ;;		None
 17411 ;; Auto vars:     Size  Location     Type
 17412 ;;		None
 17413 ;; Return value:  Size  Location     Type
 17414 ;;                  1    wreg      enum E11982
 17415 ;; Registers used:
 17416 ;;		wreg, status,2, status,0, pclath, cstack
 17417 ;; Tracked objects:
 17418 ;;		On entry : 0/0
 17419 ;;		On exit  : 0/0
 17420 ;;		Unchanged: 0/0
 17421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17425 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17426 ;;Total ram usage:        0 bytes
 17427 ;; Hardware stack levels used: 1
 17428 ;; Hardware stack levels required when called: 1
 17429 ;; This function calls:
 17430 ;;		_I2C_MasterStartRx
 17431 ;; This function is called by:
 17432 ;;		_I2C_MasterFsm
 17433 ;; This function uses a non-reentrant model
 17434 ;;
 17435                           
 17436     132A                     _I2C_DO_RCEN:	
 17437                           ;psect for function _I2C_DO_RCEN
 17438                           
 17439     132A                     i1l4051:	
 17440                           ;incstack = 0
 17441                           ; Regs used in _I2C_DO_RCEN: [wreg+status,2+status,0+pclath+cstack]
 17442                           
 17443                           
 17444                           ;i2c_master.c: 406: I2C_Status.addressNackCheck = 0;
 17445     132A  0021               	movlb	1	; select bank1
 17446     132B  103D               	bcf	(_I2C_Status^(0+128)+29),0
 17447     132C                     i1l4053:
 17448                           
 17449                           ;i2c_master.c: 407: I2C_MasterStartRx();
 17450     132C  3192  22A4  3193   	fcall	_I2C_MasterStartRx
 17451     132F                     i1l4055:
 17452                           
 17453                           ;i2c_master.c: 408: return I2C_RX;
 17454     132F  3004               	movlw	4
 17455     1330                     i1l577:
 17456     1330  0008               	return
 17457     1331                     __end_of_I2C_DO_RCEN:
 17458                           
 17459                           	psect	text86
 17460     08D4                     __ptext86:	
 17461 ;; *************** function _I2C_DO_RX *****************
 17462 ;; Defined at:
 17463 ;;		line 380 in file "mcc_generated_files/i2c_master.c"
 17464 ;; Parameters:    Size  Location     Type
 17465 ;;		None
 17466 ;; Auto vars:     Size  Location     Type
 17467 ;;		None
 17468 ;; Return value:  Size  Location     Type
 17469 ;;                  1    wreg      enum E11982
 17470 ;; Registers used:
 17471 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17472 ;; Tracked objects:
 17473 ;;		On entry : 0/0
 17474 ;;		On exit  : 0/0
 17475 ;;		Unchanged: 0/0
 17476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17479 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17480 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17481 ;;Total ram usage:        1 bytes
 17482 ;; Hardware stack levels used: 1
 17483 ;; Hardware stack levels required when called: 3
 17484 ;; This function calls:
 17485 ;;		NULL
 17486 ;;		_I2C_CallbackReturnReset
 17487 ;;		_I2C_CallbackReturnStop
 17488 ;;		_I2C_DO_RX_NACK_RESTART
 17489 ;;		_I2C_DO_RX_NACK_STOP
 17490 ;;		_I2C_MasterGetRxData
 17491 ;;		_I2C_MasterSendAck
 17492 ;;		_rd1RegCompleteHandler
 17493 ;;		_rd2RegCompleteHandler
 17494 ;;		_rdBlkRegCompleteHandler
 17495 ;;		_wr1RegCompleteHandler
 17496 ;;		_wr2RegCompleteHandler
 17497 ;; This function is called by:
 17498 ;;		_I2C_MasterFsm
 17499 ;; This function uses a non-reentrant model
 17500 ;;
 17501                           
 17502     08D4                     _I2C_DO_RX:	
 17503                           ;psect for function _I2C_DO_RX
 17504                           
 17505     08D4                     i1l4025:	
 17506                           ;incstack = 0
 17507                           ; Regs used in _I2C_DO_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17508                           
 17509                           
 17510                           ;i2c_master.c: 382: *I2C_Status.data_ptr++ = I2C_MasterGetRxData();
 17511     08D4  3192  22A7  3188   	fcall	_I2C_MasterGetRxData
 17512     08D7  00F8               	movwf	??_I2C_DO_RX
 17513     08D8  3017               	movlw	23
 17514     08D9  3EA0               	addlw	(low (_I2C_Status| 0))& (0+255)
 17515     08DA  0086               	movwf	6
 17516     08DB  0187               	clrf	7
 17517     08DC  3F40               	moviw [0]fsr1
 17518     08DD  0084               	movwf	4
 17519     08DE  3F41               	moviw [1]fsr1
 17520     08DF  0085               	movwf	5
 17521     08E0  0878               	movf	??_I2C_DO_RX,w
 17522     08E1  0080               	movwf	0
 17523     08E2                     i1l4027:
 17524     08E2  3001               	movlw	1
 17525     08E3  0021               	movlb	1	; select bank1
 17526     08E4  07B7               	addwf	(low ((_I2C_Status| 0+23)))^(0+128),f
 17527     08E5  3000               	movlw	0
 17528     08E6  3DB8               	addwfc	((low ((_I2C_Status| 0+23))+1))^(0+128),f
 17529     08E7                     i1l4029:
 17530                           
 17531                           ;i2c_master.c: 383: if(--I2C_Status.data_length)
 17532     08E7  3001               	movlw	1
 17533     08E8  02B9               	subwf	(_I2C_Status^(0+128)+25),f
 17534     08E9  3000               	movlw	0
 17535     08EA  3BBA               	subwfb	((_I2C_Status+1)^(0+128)+25),f
 17536     08EB  0839               	movf	(_I2C_Status^(0+128)+25),w
 17537     08EC  043A               	iorwf	((_I2C_Status+1)^(0+128)+25),w
 17538     08ED  1903               	btfsc	3,2
 17539     08EE  28F0               	goto	u247_21
 17540     08EF  28F1               	goto	u247_20
 17541     08F0                     u247_21:
 17542     08F0  28F6               	goto	i1l565
 17543     08F1                     u247_20:
 17544     08F1                     i1l4031:
 17545                           
 17546                           ;i2c_master.c: 384: {;i2c_master.c: 385: I2C_MasterSendAck();
 17547     08F1  3192  22CF  3188   	fcall	_I2C_MasterSendAck
 17548     08F4                     i1l4033:
 17549                           
 17550                           ;i2c_master.c: 386: return I2C_RCEN;
 17551     08F4  3005               	movlw	5
 17552     08F5  2914               	goto	i1l566
 17553     08F6                     i1l565:
 17554                           
 17555                           ;i2c_master.c: 388: else;i2c_master.c: 389: {;i2c_master.c: 390: I2C_Status.bufferFree =
      +                           1;
 17556     08F6  15BD               	bsf	(_I2C_Status^(0+128)+29),3
 17557                           
 17558                           ;i2c_master.c: 391: switch(I2C_Status.callbackTable[I2C_DATA_COMPLETE](I2C_Status.callba
      +                          ckPayload[I2C_DATA_COMPLETE]))
 17559     08F7  2900               	goto	i1l4049
 17560     08F8                     i1l4039:
 17561                           
 17562                           ;i2c_master.c: 394: case I2C_RESTART_READ:;i2c_master.c: 395: return I2C_DO_RX_NACK_REST
      +                          ART();
 17563     08F8  3193  2303  3188   	fcall	_I2C_DO_RX_NACK_RESTART
 17564     08FB  2914               	goto	i1l566
 17565     08FC                     i1l4043:
 17566                           
 17567                           ;i2c_master.c: 398: case I2C_STOP:;i2c_master.c: 399: return I2C_DO_RX_NACK_STOP();
 17568     08FC  3192  22FE  3188   	fcall	_I2C_DO_RX_NACK_STOP
 17569     08FF  2914               	goto	i1l566
 17570     0900                     i1l4049:
 17571     0900  082C               	movf	(low ((_I2C_Status| 0+12)))^(0+128),w
 17572     0901  00F7               	movwf	I2C_CallbackReturnReset@funPtr
 17573     0902  0821               	movf	(_I2C_Status+1)^(0+128),w
 17574     0903  008A               	movwf	10
 17575     0904  0820               	movf	_I2C_Status^(0+128),w
 17576     0905  000A               	callw
 17577     0906  3188               	pagesel	$
 17578                           
 17579                           ; Switch size 1, requested type "simple"
 17580                           ; Number of cases is 4, Range of values is 1 to 4
 17581                           ; switch strategies available:
 17582                           ; Name         Instructions Cycles
 17583                           ; simple_byte           13     7 (average)
 17584                           ; direct_byte           17     9 (fixed)
 17585                           ; jumptable            263     9 (fixed)
 17586                           ;	Chosen strategy is simple_byte
 17587     0907  3A01               	xorlw	1	; case 1
 17588     0908  1903               	skipnz
 17589     0909  28FC               	goto	i1l4043
 17590     090A  3A03               	xorlw	3	; case 2
 17591     090B  1903               	skipnz
 17592     090C  28F8               	goto	i1l4039
 17593     090D  3A01               	xorlw	1	; case 3
 17594     090E  1903               	skipnz
 17595     090F  28F8               	goto	i1l4039
 17596     0910  3A07               	xorlw	7	; case 4
 17597     0911  1903               	skipnz
 17598     0912  28FC               	goto	i1l4043
 17599     0913  28FC               	goto	i1l4043
 17600     0914                     i1l566:
 17601     0914  0008               	return
 17602     0915                     __end_of_I2C_DO_RX:
 17603                           
 17604                           	psect	text87
 17605     0A82                     __ptext87:	
 17606 ;; *************** function _I2C_DO_TX *****************
 17607 ;; Defined at:
 17608 ;;		line 356 in file "mcc_generated_files/i2c_master.c"
 17609 ;; Parameters:    Size  Location     Type
 17610 ;;		None
 17611 ;; Auto vars:     Size  Location     Type
 17612 ;;		None
 17613 ;; Return value:  Size  Location     Type
 17614 ;;                  1    wreg      enum E11982
 17615 ;; Registers used:
 17616 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17617 ;; Tracked objects:
 17618 ;;		On entry : 0/0
 17619 ;;		On exit  : 0/0
 17620 ;;		Unchanged: 0/0
 17621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17623 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17624 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17625 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17626 ;;Total ram usage:        4 bytes
 17627 ;; Hardware stack levels used: 1
 17628 ;; Hardware stack levels required when called: 3
 17629 ;; This function calls:
 17630 ;;		NULL
 17631 ;;		_I2C_CallbackReturnReset
 17632 ;;		_I2C_CallbackReturnStop
 17633 ;;		_I2C_DO_SEND_RESTART_READ
 17634 ;;		_I2C_DO_SEND_RESTART_WRITE
 17635 ;;		_I2C_DO_SEND_STOP
 17636 ;;		_I2C_MasterIsNack
 17637 ;;		_I2C_MasterSendTxData
 17638 ;;		_rd1RegCompleteHandler
 17639 ;;		_rd2RegCompleteHandler
 17640 ;;		_rdBlkRegCompleteHandler
 17641 ;;		_wr1RegCompleteHandler
 17642 ;;		_wr2RegCompleteHandler
 17643 ;; This function is called by:
 17644 ;;		_I2C_MasterFsm
 17645 ;; This function uses a non-reentrant model
 17646 ;;
 17647                           
 17648     0A82                     _I2C_DO_TX:	
 17649                           ;psect for function _I2C_DO_TX
 17650                           
 17651     0A82                     i1l3995:	
 17652                           ;incstack = 0
 17653                           ; Regs used in _I2C_DO_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17654                           
 17655                           
 17656                           ;i2c_master.c: 358: if(I2C_MasterIsNack())
 17657     0A82  3193  2312  318A   	fcall	_I2C_MasterIsNack
 17658     0A85  3A00               	xorlw	0
 17659     0A86  1903               	skipnz
 17660     0A87  2A89               	goto	u245_21
 17661     0A88  2A8A               	goto	u245_20
 17662     0A89                     u245_21:
 17663     0A89  2AB0               	goto	i1l549
 17664     0A8A                     u245_20:
 17665     0A8A  2A97               	goto	i1l4013
 17666     0A8B                     i1l3999:
 17667                           
 17668                           ;i2c_master.c: 363: return I2C_DO_SEND_RESTART_READ();
 17669     0A8B  3192  22E5  318A   	fcall	_I2C_DO_SEND_RESTART_READ
 17670     0A8E  2AD6               	goto	i1l552
 17671     0A8F                     i1l4003:
 17672                           
 17673                           ;i2c_master.c: 365: return I2C_DO_SEND_RESTART_WRITE();
 17674     0A8F  3192  22EA  318A   	fcall	_I2C_DO_SEND_RESTART_WRITE
 17675     0A92  2AD6               	goto	i1l552
 17676     0A93                     i1l4007:
 17677                           
 17678                           ;i2c_master.c: 368: case I2C_STOP:;i2c_master.c: 369: return I2C_DO_SEND_STOP();
 17679     0A93  3192  22F4  318A   	fcall	_I2C_DO_SEND_STOP
 17680     0A96  2AD6               	goto	i1l552
 17681     0A97                     i1l4013:
 17682     0A97  0021               	movlb	1	; select bank1
 17683     0A98  082F               	movf	(low ((_I2C_Status| 0+15)))^(0+128),w
 17684     0A99  00F7               	movwf	I2C_CallbackReturnReset@funPtr
 17685     0A9A  3006               	movlw	6
 17686     0A9B  3EA0               	addlw	(low (_I2C_Status| 0))& (0+255)
 17687     0A9C  0086               	movwf	6
 17688     0A9D  0187               	clrf	7
 17689     0A9E  3F41               	moviw [1]fsr1
 17690     0A9F  008A               	movwf	10
 17691     0AA0  3F40               	moviw [0]fsr1
 17692     0AA1  000A               	callw
 17693     0AA2  318A               	pagesel	$
 17694                           
 17695                           ; Switch size 1, requested type "simple"
 17696                           ; Number of cases is 4, Range of values is 1 to 4
 17697                           ; switch strategies available:
 17698                           ; Name         Instructions Cycles
 17699                           ; simple_byte           13     7 (average)
 17700                           ; direct_byte           17     9 (fixed)
 17701                           ; jumptable            263     9 (fixed)
 17702                           ;	Chosen strategy is simple_byte
 17703     0AA3  3A01               	xorlw	1	; case 1
 17704     0AA4  1903               	skipnz
 17705     0AA5  2A93               	goto	i1l4007
 17706     0AA6  3A03               	xorlw	3	; case 2
 17707     0AA7  1903               	skipnz
 17708     0AA8  2A8B               	goto	i1l3999
 17709     0AA9  3A01               	xorlw	1	; case 3
 17710     0AAA  1903               	skipnz
 17711     0AAB  2A8F               	goto	i1l4003
 17712     0AAC  3A07               	xorlw	7	; case 4
 17713     0AAD  1903               	skipnz
 17714     0AAE  2A93               	goto	i1l4007
 17715     0AAF  2A93               	goto	i1l4007
 17716     0AB0                     i1l549:
 17717                           
 17718                           ;i2c_master.c: 372: else;i2c_master.c: 373: {;i2c_master.c: 374: I2C_Status.addressNackC
      +                          heck = 0;
 17719     0AB0  0021               	movlb	1	; select bank1
 17720     0AB1  103D               	bcf	(_I2C_Status^(0+128)+29),0
 17721     0AB2                     i1l4015:
 17722                           
 17723                           ;i2c_master.c: 375: I2C_MasterSendTxData(*I2C_Status.data_ptr++);
 17724     0AB2  0838               	movf	((low ((_I2C_Status| 0+23))+1))^(0+128),w
 17725     0AB3  00F9               	movwf	??_I2C_DO_TX+1
 17726     0AB4  0837               	movf	(low ((_I2C_Status| 0+23)))^(0+128),w
 17727     0AB5  00F8               	movwf	??_I2C_DO_TX
 17728     0AB6  0AB7               	incf	(low ((_I2C_Status| 0+23)))^(0+128),f
 17729     0AB7  1903               	skipnz
 17730     0AB8  0AB8               	incf	((low ((_I2C_Status| 0+23))+1))^(0+128),f
 17731     0AB9  0878               	movf	??_I2C_DO_TX,w
 17732     0ABA  0086               	movwf	6
 17733     0ABB  0879               	movf	??_I2C_DO_TX+1,w
 17734     0ABC  0087               	movwf	7
 17735     0ABD  0801               	movf	1,w
 17736     0ABE  3192  22DB  318A   	fcall	_I2C_MasterSendTxData
 17737     0AC1                     i1l4017:
 17738                           
 17739                           ;i2c_master.c: 376: return (--I2C_Status.data_length)?I2C_TX:I2C_TX_EMPTY;
 17740     0AC1  3001               	movlw	1
 17741     0AC2  0021               	movlb	1	; select bank1
 17742     0AC3  02B9               	subwf	(_I2C_Status^(0+128)+25),f
 17743     0AC4  3000               	movlw	0
 17744     0AC5  3BBA               	subwfb	((_I2C_Status+1)^(0+128)+25),f
 17745     0AC6  0839               	movf	(_I2C_Status^(0+128)+25),w
 17746     0AC7  043A               	iorwf	((_I2C_Status+1)^(0+128)+25),w
 17747     0AC8  1D03               	btfss	3,2
 17748     0AC9  2ACB               	goto	u246_21
 17749     0ACA  2ACC               	goto	u246_20
 17750     0ACB                     u246_21:
 17751     0ACB  2AD1               	goto	i1l4021
 17752     0ACC                     u246_20:
 17753     0ACC                     i1l4019:
 17754     0ACC  3006               	movlw	6
 17755     0ACD  00FA               	movwf	_I2C_DO_TX$1209
 17756     0ACE  3000               	movlw	0
 17757     0ACF  00FB               	movwf	_I2C_DO_TX$1209+1
 17758     0AD0  2AD5               	goto	i1l562
 17759     0AD1                     i1l4021:
 17760     0AD1  3003               	movlw	3
 17761     0AD2  00FA               	movwf	_I2C_DO_TX$1209
 17762     0AD3  3000               	movlw	0
 17763     0AD4  00FB               	movwf	_I2C_DO_TX$1209+1
 17764     0AD5                     i1l562:
 17765     0AD5  087A               	movf	_I2C_DO_TX$1209,w
 17766     0AD6                     i1l552:
 17767     0AD6  0008               	return
 17768     0AD7                     __end_of_I2C_DO_TX:
 17769                           
 17770                           	psect	text88
 17771     1331                     __ptext88:	
 17772 ;; *************** function _I2C_DO_SEND_ADR_WRITE *****************
 17773 ;; Defined at:
 17774 ;;		line 349 in file "mcc_generated_files/i2c_master.c"
 17775 ;; Parameters:    Size  Location     Type
 17776 ;;		None
 17777 ;; Auto vars:     Size  Location     Type
 17778 ;;		None
 17779 ;; Return value:  Size  Location     Type
 17780 ;;                  1    wreg      enum E11982
 17781 ;; Registers used:
 17782 ;;		wreg, status,2, status,0, pclath, cstack
 17783 ;; Tracked objects:
 17784 ;;		On entry : 0/0
 17785 ;;		On exit  : 0/0
 17786 ;;		Unchanged: 0/0
 17787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17791 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17792 ;;Total ram usage:        0 bytes
 17793 ;; Hardware stack levels used: 1
 17794 ;; Hardware stack levels required when called: 1
 17795 ;; This function calls:
 17796 ;;		_I2C_MasterSendTxData
 17797 ;; This function is called by:
 17798 ;;		_I2C_MasterFsm
 17799 ;; This function uses a non-reentrant model
 17800 ;;
 17801                           
 17802     1331                     _I2C_DO_SEND_ADR_WRITE:	
 17803                           ;psect for function _I2C_DO_SEND_ADR_WRITE
 17804                           
 17805     1331                     i1l3987:	
 17806                           ;incstack = 0
 17807                           ; Regs used in _I2C_DO_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
 17808                           
 17809                           
 17810                           ;i2c_master.c: 351: I2C_Status.addressNackCheck = 1;
 17811     1331  0021               	movlb	1	; select bank1
 17812     1332  143D               	bsf	(_I2C_Status^(0+128)+29),0
 17813     1333                     i1l3989:
 17814                           
 17815                           ;i2c_master.c: 352: I2C_MasterSendTxData((uint8_t) (I2C_Status.address << 1));
 17816     1333  3536               	lslf	(_I2C_Status^(0+128)+22),w
 17817     1334  3192  22DB  3193   	fcall	_I2C_MasterSendTxData
 17818     1337                     i1l3991:
 17819                           
 17820                           ;i2c_master.c: 353: return I2C_TX;
 17821     1337  3003               	movlw	3
 17822     1338                     i1l546:
 17823     1338  0008               	return
 17824     1339                     __end_of_I2C_DO_SEND_ADR_WRITE:
 17825                           
 17826                           	psect	text89
 17827     1341                     __ptext89:	
 17828 ;; *************** function _I2C_DO_SEND_ADR_READ *****************
 17829 ;; Defined at:
 17830 ;;		line 342 in file "mcc_generated_files/i2c_master.c"
 17831 ;; Parameters:    Size  Location     Type
 17832 ;;		None
 17833 ;; Auto vars:     Size  Location     Type
 17834 ;;		None
 17835 ;; Return value:  Size  Location     Type
 17836 ;;                  1    wreg      enum E11982
 17837 ;; Registers used:
 17838 ;;		wreg, status,2, status,0, pclath, cstack
 17839 ;; Tracked objects:
 17840 ;;		On entry : 0/0
 17841 ;;		On exit  : 0/0
 17842 ;;		Unchanged: 0/0
 17843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17847 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17848 ;;Total ram usage:        0 bytes
 17849 ;; Hardware stack levels used: 1
 17850 ;; Hardware stack levels required when called: 1
 17851 ;; This function calls:
 17852 ;;		_I2C_MasterSendTxData
 17853 ;; This function is called by:
 17854 ;;		_I2C_MasterFsm
 17855 ;; This function uses a non-reentrant model
 17856 ;;
 17857                           
 17858     1341                     _I2C_DO_SEND_ADR_READ:	
 17859                           ;psect for function _I2C_DO_SEND_ADR_READ
 17860                           
 17861     1341                     i1l3979:	
 17862                           ;incstack = 0
 17863                           ; Regs used in _I2C_DO_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
 17864                           
 17865                           
 17866                           ;i2c_master.c: 344: I2C_Status.addressNackCheck = 1;
 17867     1341  0021               	movlb	1	; select bank1
 17868     1342  143D               	bsf	(_I2C_Status^(0+128)+29),0
 17869     1343                     i1l3981:
 17870                           
 17871                           ;i2c_master.c: 345: I2C_MasterSendTxData((uint8_t) (I2C_Status.address << 1 | 1));
 17872     1343  1403               	setc
 17873     1344  0D36               	rlf	(_I2C_Status^(0+128)+22),w
 17874     1345  3192  22DB  3193   	fcall	_I2C_MasterSendTxData
 17875     1348                     i1l3983:
 17876                           
 17877                           ;i2c_master.c: 346: return I2C_RCEN;
 17878     1348  3005               	movlw	5
 17879     1349                     i1l543:
 17880     1349  0008               	return
 17881     134A                     __end_of_I2C_DO_SEND_ADR_READ:
 17882                           
 17883                           	psect	text90
 17884     12E0                     __ptext90:	
 17885 ;; *************** function _I2C_DO_IDLE *****************
 17886 ;; Defined at:
 17887 ;;		line 335 in file "mcc_generated_files/i2c_master.c"
 17888 ;; Parameters:    Size  Location     Type
 17889 ;;		None
 17890 ;; Auto vars:     Size  Location     Type
 17891 ;;		None
 17892 ;; Return value:  Size  Location     Type
 17893 ;;                  1    wreg      enum E11982
 17894 ;; Registers used:
 17895 ;;		wreg, status,2
 17896 ;; Tracked objects:
 17897 ;;		On entry : 0/0
 17898 ;;		On exit  : 0/0
 17899 ;;		Unchanged: 0/0
 17900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17904 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17905 ;;Total ram usage:        0 bytes
 17906 ;; Hardware stack levels used: 1
 17907 ;; This function calls:
 17908 ;;		Nothing
 17909 ;; This function is called by:
 17910 ;;		_I2C_MasterFsm
 17911 ;; This function uses a non-reentrant model
 17912 ;;
 17913                           
 17914     12E0                     _I2C_DO_IDLE:	
 17915                           ;psect for function _I2C_DO_IDLE
 17916                           
 17917     12E0                     i1l3971:	
 17918                           ;incstack = 0
 17919                           ; Regs used in _I2C_DO_IDLE: [wreg+status,2]
 17920                           
 17921                           
 17922                           ;i2c_master.c: 337: I2C_Status.busy = 0;
 17923     12E0  0021               	movlb	1	; select bank1
 17924     12E1  10BD               	bcf	(_I2C_Status^(0+128)+29),1
 17925     12E2                     i1l3973:
 17926                           
 17927                           ;i2c_master.c: 338: I2C_Status.error = I2C_NOERR;
 17928     12E2  01BC               	clrf	(_I2C_Status^(0+128)+28)
 17929     12E3                     i1l3975:
 17930                           
 17931                           ;i2c_master.c: 339: return I2C_RESET;
 17932     12E3  300E               	movlw	14
 17933     12E4                     i1l540:
 17934     12E4  0008               	return
 17935     12E5                     __end_of_I2C_DO_IDLE:
 17936                           
 17937                           	psect	text91
 17938     166B                     __ptext91:	
 17939 ;; *************** function _I2C_DO_TX_EMPTY *****************
 17940 ;; Defined at:
 17941 ;;		line 411 in file "mcc_generated_files/i2c_master.c"
 17942 ;; Parameters:    Size  Location     Type
 17943 ;;		None
 17944 ;; Auto vars:     Size  Location     Type
 17945 ;;		None
 17946 ;; Return value:  Size  Location     Type
 17947 ;;                  1    wreg      enum E11982
 17948 ;; Registers used:
 17949 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17950 ;; Tracked objects:
 17951 ;;		On entry : 0/0
 17952 ;;		On exit  : 0/0
 17953 ;;		Unchanged: 0/0
 17954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17958 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17959 ;;Total ram usage:        0 bytes
 17960 ;; Hardware stack levels used: 1
 17961 ;; Hardware stack levels required when called: 3
 17962 ;; This function calls:
 17963 ;;		NULL
 17964 ;;		_I2C_CallbackReturnReset
 17965 ;;		_I2C_CallbackReturnStop
 17966 ;;		_I2C_DO_SEND_RESTART
 17967 ;;		_I2C_DO_SEND_STOP
 17968 ;;		_I2C_MasterSetIrq
 17969 ;;		_rd1RegCompleteHandler
 17970 ;;		_rd2RegCompleteHandler
 17971 ;;		_rdBlkRegCompleteHandler
 17972 ;;		_wr1RegCompleteHandler
 17973 ;;		_wr2RegCompleteHandler
 17974 ;; This function is called by:
 17975 ;;		_I2C_MasterFsm
 17976 ;; This function uses a non-reentrant model
 17977 ;;
 17978                           
 17979     166B                     _I2C_DO_TX_EMPTY:	
 17980                           ;psect for function _I2C_DO_TX_EMPTY
 17981                           
 17982     166B                     i1l4059:	
 17983                           ;incstack = 0
 17984                           ; Regs used in _I2C_DO_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17985                           
 17986                           
 17987                           ;i2c_master.c: 413: I2C_Status.bufferFree = 1;
 17988     166B  0021               	movlb	1	; select bank1
 17989     166C  15BD               	bsf	(_I2C_Status^(0+128)+29),3
 17990                           
 17991                           ;i2c_master.c: 414: switch(I2C_Status.callbackTable[I2C_DATA_COMPLETE](I2C_Status.callba
      +                          ckPayload[I2C_DATA_COMPLETE]))
 17992     166D  2E7B               	goto	i1l4077
 17993     166E                     i1l4061:
 17994                           
 17995                           ;i2c_master.c: 417: case I2C_RESTART_WRITE:;i2c_master.c: 418: return I2C_DO_SEND_RESTAR
      +                          T();
 17996     166E  3192  22EF  3196   	fcall	_I2C_DO_SEND_RESTART
 17997     1671  2E8F               	goto	i1l583
 17998     1672                     i1l4065:
 17999                           
 18000                           ;i2c_master.c: 420: I2C_MasterSetIrq();
 18001     1672  3192  22AA  3196   	fcall	_I2C_MasterSetIrq
 18002     1675                     i1l4067:
 18003                           
 18004                           ;i2c_master.c: 421: return I2C_TX;
 18005     1675  3003               	movlw	3
 18006     1676  2E8F               	goto	i1l583
 18007     1677                     i1l4071:
 18008                           
 18009                           ;i2c_master.c: 424: return I2C_DO_SEND_STOP();
 18010     1677  3192  22F4  3196   	fcall	_I2C_DO_SEND_STOP
 18011     167A  2E8F               	goto	i1l583
 18012     167B                     i1l4077:
 18013     167B  082C               	movf	(low ((_I2C_Status| 0+12)))^(0+128),w
 18014     167C  00F7               	movwf	I2C_CallbackReturnReset@funPtr
 18015     167D  0821               	movf	(_I2C_Status+1)^(0+128),w
 18016     167E  008A               	movwf	10
 18017     167F  0820               	movf	_I2C_Status^(0+128),w
 18018     1680  000A               	callw
 18019     1681  3196               	pagesel	$
 18020                           
 18021                           ; Switch size 1, requested type "simple"
 18022                           ; Number of cases is 4, Range of values is 1 to 4
 18023                           ; switch strategies available:
 18024                           ; Name         Instructions Cycles
 18025                           ; simple_byte           13     7 (average)
 18026                           ; direct_byte           17     9 (fixed)
 18027                           ; jumptable            263     9 (fixed)
 18028                           ;	Chosen strategy is simple_byte
 18029     1682  3A01               	xorlw	1	; case 1
 18030     1683  1903               	skipnz
 18031     1684  2E77               	goto	i1l4071
 18032     1685  3A03               	xorlw	3	; case 2
 18033     1686  1903               	skipnz
 18034     1687  2E6E               	goto	i1l4061
 18035     1688  3A01               	xorlw	1	; case 3
 18036     1689  1903               	skipnz
 18037     168A  2E6E               	goto	i1l4061
 18038     168B  3A07               	xorlw	7	; case 4
 18039     168C  1903               	skipnz
 18040     168D  2E72               	goto	i1l4065
 18041     168E  2E77               	goto	i1l4071
 18042     168F                     i1l583:
 18043     168F  0008               	return
 18044     1690                     __end_of_I2C_DO_TX_EMPTY:
 18045                           
 18046                           	psect	text92
 18047     12AA                     __ptext92:	
 18048 ;; *************** function _I2C_MasterSetIrq *****************
 18049 ;; Defined at:
 18050 ;;		line 647 in file "mcc_generated_files/i2c_master.c"
 18051 ;; Parameters:    Size  Location     Type
 18052 ;;		None
 18053 ;; Auto vars:     Size  Location     Type
 18054 ;;		None
 18055 ;; Return value:  Size  Location     Type
 18056 ;;                  1    wreg      void 
 18057 ;; Registers used:
 18058 ;;		None
 18059 ;; Tracked objects:
 18060 ;;		On entry : 0/0
 18061 ;;		On exit  : 0/0
 18062 ;;		Unchanged: 0/0
 18063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18065 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18067 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18068 ;;Total ram usage:        0 bytes
 18069 ;; Hardware stack levels used: 1
 18070 ;; This function calls:
 18071 ;;		Nothing
 18072 ;; This function is called by:
 18073 ;;		_I2C_DO_TX_EMPTY
 18074 ;; This function uses a non-reentrant model
 18075 ;;
 18076                           
 18077     12AA                     _I2C_MasterSetIrq:	
 18078                           ;psect for function _I2C_MasterSetIrq
 18079                           
 18080     12AA                     i1l3799:	
 18081                           ;incstack = 0
 18082                           ; Regs used in _I2C_MasterSetIrq: []
 18083                           
 18084                           
 18085                           ;i2c_master.c: 649: PIR1bits.SSP1IF = 1;
 18086     12AA  0020               	movlb	0	; select bank0
 18087     12AB  1591               	bsf	17,3	;volatile
 18088     12AC                     i1l703:
 18089     12AC  0008               	return
 18090     12AD                     __end_of_I2C_MasterSetIrq:
 18091                           
 18092                           	psect	text93
 18093     1312                     __ptext93:	
 18094 ;; *************** function _I2C_MasterIsNack *****************
 18095 ;; Defined at:
 18096 ;;		line 599 in file "mcc_generated_files/i2c_master.c"
 18097 ;; Parameters:    Size  Location     Type
 18098 ;;		None
 18099 ;; Auto vars:     Size  Location     Type
 18100 ;;		None
 18101 ;; Return value:  Size  Location     Type
 18102 ;;                  1    wreg      unsigned char 
 18103 ;; Registers used:
 18104 ;;		wreg, status,2, status,0
 18105 ;; Tracked objects:
 18106 ;;		On entry : 0/0
 18107 ;;		On exit  : 0/0
 18108 ;;		Unchanged: 0/0
 18109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18113 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18114 ;;Total ram usage:        0 bytes
 18115 ;; Hardware stack levels used: 1
 18116 ;; This function calls:
 18117 ;;		Nothing
 18118 ;; This function is called by:
 18119 ;;		_I2C_MasterFsm
 18120 ;;		_I2C_DO_TX
 18121 ;; This function uses a non-reentrant model
 18122 ;;
 18123                           
 18124     1312                     _I2C_MasterIsNack:	
 18125                           ;psect for function _I2C_MasterIsNack
 18126                           
 18127     1312                     i1l3749:	
 18128                           ;incstack = 0
 18129                           ; Regs used in _I2C_MasterIsNack: [wreg+status,2+status,0]
 18130                           
 18131                           
 18132                           ;i2c_master.c: 601: return SSP1CON2bits.ACKSTAT;
 18133     1312  0024               	movlb	4	; select bank4
 18134     1313  0E16               	swapf	22,w	;volatile
 18135     1314  0C89               	rrf	9,f
 18136     1315  0C89               	rrf	9,f
 18137     1316  3901               	andlw	1
 18138     1317                     i1l676:
 18139     1317  0008               	return
 18140     1318                     __end_of_I2C_MasterIsNack:
 18141                           
 18142                           	psect	text94
 18143     12DB                     __ptext94:	
 18144 ;; *************** function _I2C_MasterSendTxData *****************
 18145 ;; Defined at:
 18146 ;;		line 569 in file "mcc_generated_files/i2c_master.c"
 18147 ;; Parameters:    Size  Location     Type
 18148 ;;  data            1    wreg     unsigned char 
 18149 ;; Auto vars:     Size  Location     Type
 18150 ;;  data            1    0[COMMON] unsigned char 
 18151 ;; Return value:  Size  Location     Type
 18152 ;;                  1    wreg      void 
 18153 ;; Registers used:
 18154 ;;		wreg
 18155 ;; Tracked objects:
 18156 ;;		On entry : 0/0
 18157 ;;		On exit  : 0/0
 18158 ;;		Unchanged: 0/0
 18159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18161 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18163 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18164 ;;Total ram usage:        1 bytes
 18165 ;; Hardware stack levels used: 1
 18166 ;; This function calls:
 18167 ;;		Nothing
 18168 ;; This function is called by:
 18169 ;;		_I2C_DO_SEND_ADR_READ
 18170 ;;		_I2C_DO_SEND_ADR_WRITE
 18171 ;;		_I2C_DO_TX
 18172 ;; This function uses a non-reentrant model
 18173 ;;
 18174                           
 18175     12DB                     _I2C_MasterSendTxData:	
 18176                           ;psect for function _I2C_MasterSendTxData
 18177                           
 18178                           
 18179                           ;incstack = 0
 18180                           ; Regs used in _I2C_MasterSendTxData: [wreg]
 18181                           ;I2C_MasterSendTxData@data stored from wreg
 18182     12DB  00F0               	movwf	I2C_MasterSendTxData@data
 18183     12DC                     i1l3753:
 18184                           
 18185                           ;i2c_master.c: 571: SSP1BUF = data;
 18186     12DC  0870               	movf	I2C_MasterSendTxData@data,w
 18187     12DD  0024               	movlb	4	; select bank4
 18188     12DE  0091               	movwf	17	;volatile
 18189     12DF                     i1l658:
 18190     12DF  0008               	return
 18191     12E0                     __end_of_I2C_MasterSendTxData:
 18192                           
 18193                           	psect	text95
 18194     12CF                     __ptext95:	
 18195 ;; *************** function _I2C_MasterSendAck *****************
 18196 ;; Defined at:
 18197 ;;		line 604 in file "mcc_generated_files/i2c_master.c"
 18198 ;; Parameters:    Size  Location     Type
 18199 ;;		None
 18200 ;; Auto vars:     Size  Location     Type
 18201 ;;		None
 18202 ;; Return value:  Size  Location     Type
 18203 ;;                  1    wreg      void 
 18204 ;; Registers used:
 18205 ;;		None
 18206 ;; Tracked objects:
 18207 ;;		On entry : 0/0
 18208 ;;		On exit  : 0/0
 18209 ;;		Unchanged: 0/0
 18210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18214 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18215 ;;Total ram usage:        0 bytes
 18216 ;; Hardware stack levels used: 1
 18217 ;; This function calls:
 18218 ;;		Nothing
 18219 ;; This function is called by:
 18220 ;;		_I2C_DO_RX
 18221 ;;		_I2C_DO_RX_ACK
 18222 ;; This function uses a non-reentrant model
 18223 ;;
 18224                           
 18225     12CF                     _I2C_MasterSendAck:	
 18226                           ;psect for function _I2C_MasterSendAck
 18227                           
 18228     12CF                     i1l3777:	
 18229                           ;incstack = 0
 18230                           ; Regs used in _I2C_MasterSendAck: []
 18231                           
 18232                           
 18233                           ;i2c_master.c: 606: SSP1CON2bits.ACKDT = 0;
 18234     12CF  0024               	movlb	4	; select bank4
 18235     12D0  1296               	bcf	22,5	;volatile
 18236                           
 18237                           ;i2c_master.c: 607: SSP1CON2bits.ACKEN = 1;
 18238     12D1  1616               	bsf	22,4	;volatile
 18239     12D2                     i1l679:
 18240     12D2  0008               	return
 18241     12D3                     __end_of_I2C_MasterSendAck:
 18242                           
 18243                           	psect	text96
 18244     12A7                     __ptext96:	
 18245 ;; *************** function _I2C_MasterGetRxData *****************
 18246 ;; Defined at:
 18247 ;;		line 564 in file "mcc_generated_files/i2c_master.c"
 18248 ;; Parameters:    Size  Location     Type
 18249 ;;		None
 18250 ;; Auto vars:     Size  Location     Type
 18251 ;;		None
 18252 ;; Return value:  Size  Location     Type
 18253 ;;                  1    wreg      unsigned char 
 18254 ;; Registers used:
 18255 ;;		wreg
 18256 ;; Tracked objects:
 18257 ;;		On entry : 0/0
 18258 ;;		On exit  : 0/0
 18259 ;;		Unchanged: 0/0
 18260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18264 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18265 ;;Total ram usage:        0 bytes
 18266 ;; Hardware stack levels used: 1
 18267 ;; This function calls:
 18268 ;;		Nothing
 18269 ;; This function is called by:
 18270 ;;		_I2C_DO_RX
 18271 ;; This function uses a non-reentrant model
 18272 ;;
 18273                           
 18274     12A7                     _I2C_MasterGetRxData:	
 18275                           ;psect for function _I2C_MasterGetRxData
 18276                           
 18277     12A7                     i1l3773:	
 18278                           ;incstack = 0
 18279                           ; Regs used in _I2C_MasterGetRxData: [wreg]
 18280                           
 18281                           
 18282                           ;i2c_master.c: 566: return SSP1BUF;
 18283     12A7  0024               	movlb	4	; select bank4
 18284     12A8  0811               	movf	17,w	;volatile
 18285     12A9                     i1l655:
 18286     12A9  0008               	return
 18287     12AA                     __end_of_I2C_MasterGetRxData:
 18288                           
 18289                           	psect	text97
 18290     12CB                     __ptext97:	
 18291 ;; *************** function _I2C_MasterSendNack *****************
 18292 ;; Defined at:
 18293 ;;		line 610 in file "mcc_generated_files/i2c_master.c"
 18294 ;; Parameters:    Size  Location     Type
 18295 ;;		None
 18296 ;; Auto vars:     Size  Location     Type
 18297 ;;		None
 18298 ;; Return value:  Size  Location     Type
 18299 ;;                  1    wreg      void 
 18300 ;; Registers used:
 18301 ;;		None
 18302 ;; Tracked objects:
 18303 ;;		On entry : 0/0
 18304 ;;		On exit  : 0/0
 18305 ;;		Unchanged: 0/0
 18306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18310 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18311 ;;Total ram usage:        0 bytes
 18312 ;; Hardware stack levels used: 1
 18313 ;; This function calls:
 18314 ;;		Nothing
 18315 ;; This function is called by:
 18316 ;;		_I2C_DO_RX_NACK_STOP
 18317 ;;		_I2C_DO_RX_NACK_RESTART
 18318 ;; This function uses a non-reentrant model
 18319 ;;
 18320                           
 18321     12CB                     _I2C_MasterSendNack:	
 18322                           ;psect for function _I2C_MasterSendNack
 18323                           
 18324     12CB                     i1l3659:	
 18325                           ;incstack = 0
 18326                           ; Regs used in _I2C_MasterSendNack: []
 18327                           
 18328                           
 18329                           ;i2c_master.c: 612: SSP1CON2bits.ACKDT = 1;
 18330     12CB  0024               	movlb	4	; select bank4
 18331     12CC  1696               	bsf	22,5	;volatile
 18332                           
 18333                           ;i2c_master.c: 613: SSP1CON2bits.ACKEN = 1;
 18334     12CD  1616               	bsf	22,4	;volatile
 18335     12CE                     i1l682:
 18336     12CE  0008               	return
 18337     12CF                     __end_of_I2C_MasterSendNack:
 18338                           
 18339                           	psect	text98
 18340     12A4                     __ptext98:	
 18341 ;; *************** function _I2C_MasterStartRx *****************
 18342 ;; Defined at:
 18343 ;;		line 584 in file "mcc_generated_files/i2c_master.c"
 18344 ;; Parameters:    Size  Location     Type
 18345 ;;		None
 18346 ;; Auto vars:     Size  Location     Type
 18347 ;;		None
 18348 ;; Return value:  Size  Location     Type
 18349 ;;                  1    wreg      void 
 18350 ;; Registers used:
 18351 ;;		None
 18352 ;; Tracked objects:
 18353 ;;		On entry : 0/0
 18354 ;;		On exit  : 0/0
 18355 ;;		Unchanged: 0/0
 18356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18360 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18361 ;;Total ram usage:        0 bytes
 18362 ;; Hardware stack levels used: 1
 18363 ;; This function calls:
 18364 ;;		Nothing
 18365 ;; This function is called by:
 18366 ;;		_I2C_DO_RCEN
 18367 ;; This function uses a non-reentrant model
 18368 ;;
 18369                           
 18370     12A4                     _I2C_MasterStartRx:	
 18371                           ;psect for function _I2C_MasterStartRx
 18372                           
 18373     12A4                     i1l3791:	
 18374                           ;incstack = 0
 18375                           ; Regs used in _I2C_MasterStartRx: []
 18376                           
 18377                           
 18378                           ;i2c_master.c: 586: SSP1CON2bits.RCEN = 1;
 18379     12A4  0024               	movlb	4	; select bank4
 18380     12A5  1596               	bsf	22,3	;volatile
 18381     12A6                     i1l667:
 18382     12A6  0008               	return
 18383     12A7                     __end_of_I2C_MasterStartRx:
 18384                           
 18385                           	psect	text99
 18386     0002                     __ptext99:	
 18387 ;; *************** function _I2C_CallbackReturnReset *****************
 18388 ;; Defined at:
 18389 ;;		line 526 in file "mcc_generated_files/i2c_master.c"
 18390 ;; Parameters:    Size  Location     Type
 18391 ;;  funPtr          1    7[COMMON] PTR void 
 18392 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 18393 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 18394 ;; Auto vars:     Size  Location     Type
 18395 ;;		None
 18396 ;; Return value:  Size  Location     Type
 18397 ;;                  1    wreg      enum E97
 18398 ;; Registers used:
 18399 ;;		wreg
 18400 ;; Tracked objects:
 18401 ;;		On entry : 0/0
 18402 ;;		On exit  : 0/0
 18403 ;;		Unchanged: 0/0
 18404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18405 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18408 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18409 ;;Total ram usage:        1 bytes
 18410 ;; Hardware stack levels used: 1
 18411 ;; This function calls:
 18412 ;;		Nothing
 18413 ;; This function is called by:
 18414 ;;		_I2C_Open
 18415 ;;		_I2C_DO_TX
 18416 ;;		_I2C_DO_RX
 18417 ;;		_I2C_DO_TX_EMPTY
 18418 ;;		_I2C_DO_ADDRESS_NACK
 18419 ;;		_I2C_DO_RX_EMPTY
 18420 ;; This function uses a non-reentrant model
 18421 ;;
 18422                           
 18423     0002                     _I2C_CallbackReturnReset:	
 18424                           ;psect for function _I2C_CallbackReturnReset
 18425                           
 18426     0002                     i1l3805:	
 18427                           ;incstack = 0
 18428                           ; Regs used in _I2C_CallbackReturnReset: [wreg]
 18429                           
 18430                           
 18431                           ;i2c_master.c: 528: return I2C_RESET_LINK;
 18432     0002  3005               	movlw	5
 18433     0003                     i1l639:
 18434     0003  0008               	return
 18435     0004                     __end_of_I2C_CallbackReturnReset:
 18436                           
 18437                           	psect	text100
 18438     129C                     __ptext100:	
 18439 ;; *************** function _I2C_CallbackReturnStop *****************
 18440 ;; Defined at:
 18441 ;;		line 521 in file "mcc_generated_files/i2c_master.c"
 18442 ;; Parameters:    Size  Location     Type
 18443 ;;  funPtr          1    7[COMMON] PTR void 
 18444 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 18445 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 18446 ;; Auto vars:     Size  Location     Type
 18447 ;;		None
 18448 ;; Return value:  Size  Location     Type
 18449 ;;                  1    wreg      enum E97
 18450 ;; Registers used:
 18451 ;;		wreg
 18452 ;; Tracked objects:
 18453 ;;		On entry : 0/0
 18454 ;;		On exit  : 0/0
 18455 ;;		Unchanged: 0/0
 18456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18457 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18460 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18461 ;;Total ram usage:        1 bytes
 18462 ;; Hardware stack levels used: 1
 18463 ;; This function calls:
 18464 ;;		Nothing
 18465 ;; This function is called by:
 18466 ;;		_I2C_Open
 18467 ;;		_I2C_SetCallback
 18468 ;;		i1_I2C_SetCallback
 18469 ;;		_I2C_DO_TX
 18470 ;;		_I2C_DO_RX
 18471 ;;		_I2C_DO_TX_EMPTY
 18472 ;;		_I2C_DO_ADDRESS_NACK
 18473 ;;		_I2C_DO_RX_EMPTY
 18474 ;; This function uses a non-reentrant model
 18475 ;;
 18476                           
 18477     129C                     _I2C_CallbackReturnStop:	
 18478                           ;psect for function _I2C_CallbackReturnStop
 18479                           
 18480     129C                     i1l3801:	
 18481                           ;incstack = 0
 18482                           ; Regs used in _I2C_CallbackReturnStop: [wreg]
 18483                           
 18484                           
 18485                           ;i2c_master.c: 523: return I2C_STOP;
 18486     129C  3001               	movlw	1
 18487     129D                     i1l636:
 18488     129D  0008               	return
 18489     129E                     __end_of_I2C_CallbackReturnStop:
 18490                           
 18491                           	psect	text101
 18492     156E                     __ptext101:	
 18493 ;; *************** function _rdBlkRegCompleteHandler *****************
 18494 ;; Defined at:
 18495 ;;		line 170 in file "mcc_generated_files/examples/i2c_master_example.c"
 18496 ;; Parameters:    Size  Location     Type
 18497 ;;  ptr             1    7[COMMON] PTR void 
 18498 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 18499 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 18500 ;; Auto vars:     Size  Location     Type
 18501 ;;		None
 18502 ;; Return value:  Size  Location     Type
 18503 ;;                  1    wreg      enum E97
 18504 ;; Registers used:
 18505 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18506 ;; Tracked objects:
 18507 ;;		On entry : 0/0
 18508 ;;		On exit  : 0/0
 18509 ;;		Unchanged: 0/0
 18510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18511 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18514 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18515 ;;Total ram usage:        1 bytes
 18516 ;; Hardware stack levels used: 1
 18517 ;; Hardware stack levels required when called: 2
 18518 ;; This function calls:
 18519 ;;		i1_I2C_SetBuffer
 18520 ;;		i1_I2C_SetDataCompleteCallback
 18521 ;; This function is called by:
 18522 ;;		_I2C_ReadDataBlock
 18523 ;;		_I2C_DO_TX
 18524 ;;		_I2C_DO_RX
 18525 ;;		_I2C_DO_TX_EMPTY
 18526 ;;		_I2C_DO_ADDRESS_NACK
 18527 ;;		_I2C_DO_RX_EMPTY
 18528 ;; This function uses a non-reentrant model
 18529 ;;
 18530                           
 18531     156E                     _rdBlkRegCompleteHandler:	
 18532                           ;psect for function _rdBlkRegCompleteHandler
 18533                           
 18534     156E                     i1l3743:	
 18535                           ;incstack = 0
 18536                           ; Regs used in _rdBlkRegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 18537                           
 18538                           
 18539                           ;i2c_master_example.c: 172: I2C_SetBuffer(((i2c_buffer_t *)ptr)->data,((i2c_buffer_t*)pt
      +                          r)->len);
 18540     156E  0877               	movf	rdBlkRegCompleteHandler@ptr,w
 18541     156F  3E02               	addlw	2
 18542     1570  0086               	movwf	6
 18543     1571  0187               	clrf	7
 18544     1572  0801               	movf	1,w
 18545     1573  00F0               	movwf	i1I2C_SetBuffer@buffer
 18546     1574  01F1               	clrf	i1I2C_SetBuffer@buffer+1
 18547     1575  0877               	movf	rdBlkRegCompleteHandler@ptr,w
 18548     1576  0086               	movwf	6
 18549     1577  0187               	clrf	7
 18550     1578  3F40               	moviw [0]fsr1
 18551     1579  00F2               	movwf	i1I2C_SetBuffer@bufferSize
 18552     157A  3F41               	moviw [1]fsr1
 18553     157B  00F3               	movwf	i1I2C_SetBuffer@bufferSize+1
 18554     157C  3193  23FD  3195   	fcall	i1_I2C_SetBuffer
 18555                           
 18556                           ;i2c_master_example.c: 173: I2C_SetDataCompleteCallback((0),(0));
 18557     157F  3000               	movlw	0
 18558     1580  00F4               	movwf	i1I2C_SetDataCompleteCallback@cb
 18559     1581  00F5               	movwf	i1I2C_SetDataCompleteCallback@cb+1
 18560     1582  01F6               	clrf	i1I2C_SetDataCompleteCallback@ptr
 18561     1583  3193  2377  3195   	fcall	i1_I2C_SetDataCompleteCallback
 18562     1586                     i1l3745:
 18563                           
 18564                           ;i2c_master_example.c: 174: return I2C_RESTART_READ;
 18565     1586  3002               	movlw	2
 18566     1587                     i1l104:
 18567     1587  0008               	return
 18568     1588                     __end_of_rdBlkRegCompleteHandler:
 18569                           
 18570                           	psect	text102
 18571     1445                     __ptext102:	
 18572 ;; *************** function _wr1RegCompleteHandler *****************
 18573 ;; Defined at:
 18574 ;;		line 156 in file "mcc_generated_files/examples/i2c_master_example.c"
 18575 ;; Parameters:    Size  Location     Type
 18576 ;;  ptr             1    7[COMMON] PTR void 
 18577 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 18578 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 18579 ;; Auto vars:     Size  Location     Type
 18580 ;;		None
 18581 ;; Return value:  Size  Location     Type
 18582 ;;                  1    wreg      enum E97
 18583 ;; Registers used:
 18584 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18585 ;; Tracked objects:
 18586 ;;		On entry : 0/0
 18587 ;;		On exit  : 0/0
 18588 ;;		Unchanged: 0/0
 18589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18590 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18593 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18594 ;;Total ram usage:        1 bytes
 18595 ;; Hardware stack levels used: 1
 18596 ;; Hardware stack levels required when called: 2
 18597 ;; This function calls:
 18598 ;;		i1_I2C_SetBuffer
 18599 ;;		i1_I2C_SetDataCompleteCallback
 18600 ;; This function is called by:
 18601 ;;		_I2C_Write1ByteRegister
 18602 ;;		_I2C_DO_TX
 18603 ;;		_I2C_DO_RX
 18604 ;;		_I2C_DO_TX_EMPTY
 18605 ;;		_I2C_DO_ADDRESS_NACK
 18606 ;;		_I2C_DO_RX_EMPTY
 18607 ;; This function uses a non-reentrant model
 18608 ;;
 18609                           
 18610     1445                     _wr1RegCompleteHandler:	
 18611                           ;psect for function _wr1RegCompleteHandler
 18612                           
 18613     1445                     i1l3727:	
 18614                           ;incstack = 0
 18615                           ; Regs used in _wr1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 18616                           
 18617                           
 18618                           ;i2c_master_example.c: 158: I2C_SetBuffer(ptr,1);
 18619     1445  0877               	movf	wr1RegCompleteHandler@ptr,w
 18620     1446  00F0               	movwf	i1I2C_SetBuffer@buffer
 18621     1447  01F1               	clrf	i1I2C_SetBuffer@buffer+1
 18622     1448  3001               	movlw	1
 18623     1449  00F2               	movwf	i1I2C_SetBuffer@bufferSize
 18624     144A  3000               	movlw	0
 18625     144B  00F3               	movwf	i1I2C_SetBuffer@bufferSize+1
 18626     144C  3193  23FD  3194   	fcall	i1_I2C_SetBuffer
 18627     144F                     i1l3729:
 18628                           
 18629                           ;i2c_master_example.c: 159: I2C_SetDataCompleteCallback((0),(0));
 18630     144F  3000               	movlw	0
 18631     1450  00F4               	movwf	i1I2C_SetDataCompleteCallback@cb
 18632     1451  00F5               	movwf	i1I2C_SetDataCompleteCallback@cb+1
 18633     1452  01F6               	clrf	i1I2C_SetDataCompleteCallback@ptr
 18634     1453  3193  2377  3194   	fcall	i1_I2C_SetDataCompleteCallback
 18635     1456                     i1l3731:
 18636                           
 18637                           ;i2c_master_example.c: 160: return I2C_CONTINUE;
 18638     1456  3004               	movlw	4
 18639     1457                     i1l98:
 18640     1457  0008               	return
 18641     1458                     __end_of_wr1RegCompleteHandler:
 18642                           
 18643                           	psect	text103
 18644     1432                     __ptext103:	
 18645 ;; *************** function _rd2RegCompleteHandler *****************
 18646 ;; Defined at:
 18647 ;;		line 149 in file "mcc_generated_files/examples/i2c_master_example.c"
 18648 ;; Parameters:    Size  Location     Type
 18649 ;;  ptr             1    7[COMMON] PTR void 
 18650 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 18651 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 18652 ;; Auto vars:     Size  Location     Type
 18653 ;;		None
 18654 ;; Return value:  Size  Location     Type
 18655 ;;                  1    wreg      enum E97
 18656 ;; Registers used:
 18657 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18658 ;; Tracked objects:
 18659 ;;		On entry : 0/0
 18660 ;;		On exit  : 0/0
 18661 ;;		Unchanged: 0/0
 18662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18663 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18666 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18667 ;;Total ram usage:        1 bytes
 18668 ;; Hardware stack levels used: 1
 18669 ;; Hardware stack levels required when called: 2
 18670 ;; This function calls:
 18671 ;;		i1_I2C_SetBuffer
 18672 ;;		i1_I2C_SetDataCompleteCallback
 18673 ;; This function is called by:
 18674 ;;		_I2C_Read2ByteRegister
 18675 ;;		_I2C_DO_TX
 18676 ;;		_I2C_DO_RX
 18677 ;;		_I2C_DO_TX_EMPTY
 18678 ;;		_I2C_DO_ADDRESS_NACK
 18679 ;;		_I2C_DO_RX_EMPTY
 18680 ;; This function uses a non-reentrant model
 18681 ;;
 18682                           
 18683     1432                     _rd2RegCompleteHandler:	
 18684                           ;psect for function _rd2RegCompleteHandler
 18685                           
 18686     1432                     i1l3719:	
 18687                           ;incstack = 0
 18688                           ; Regs used in _rd2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 18689                           
 18690                           
 18691                           ;i2c_master_example.c: 151: I2C_SetBuffer(ptr,2);
 18692     1432  0877               	movf	rd2RegCompleteHandler@ptr,w
 18693     1433  00F0               	movwf	i1I2C_SetBuffer@buffer
 18694     1434  01F1               	clrf	i1I2C_SetBuffer@buffer+1
 18695     1435  3002               	movlw	2
 18696     1436  00F2               	movwf	i1I2C_SetBuffer@bufferSize
 18697     1437  3000               	movlw	0
 18698     1438  00F3               	movwf	i1I2C_SetBuffer@bufferSize+1
 18699     1439  3193  23FD  3194   	fcall	i1_I2C_SetBuffer
 18700     143C                     i1l3721:
 18701                           
 18702                           ;i2c_master_example.c: 152: I2C_SetDataCompleteCallback((0),(0));
 18703     143C  3000               	movlw	0
 18704     143D  00F4               	movwf	i1I2C_SetDataCompleteCallback@cb
 18705     143E  00F5               	movwf	i1I2C_SetDataCompleteCallback@cb+1
 18706     143F  01F6               	clrf	i1I2C_SetDataCompleteCallback@ptr
 18707     1440  3193  2377  3194   	fcall	i1_I2C_SetDataCompleteCallback
 18708     1443                     i1l3723:
 18709                           
 18710                           ;i2c_master_example.c: 153: return I2C_RESTART_READ;
 18711     1443  3002               	movlw	2
 18712     1444                     i1l95:
 18713     1444  0008               	return
 18714     1445                     __end_of_rd2RegCompleteHandler:
 18715                           
 18716                           	psect	text104
 18717     141F                     __ptext104:	
 18718 ;; *************** function _rd1RegCompleteHandler *****************
 18719 ;; Defined at:
 18720 ;;		line 142 in file "mcc_generated_files/examples/i2c_master_example.c"
 18721 ;; Parameters:    Size  Location     Type
 18722 ;;  ptr             1    7[COMMON] PTR void 
 18723 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 18724 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 18725 ;; Auto vars:     Size  Location     Type
 18726 ;;		None
 18727 ;; Return value:  Size  Location     Type
 18728 ;;                  1    wreg      enum E97
 18729 ;; Registers used:
 18730 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18731 ;; Tracked objects:
 18732 ;;		On entry : 0/0
 18733 ;;		On exit  : 0/0
 18734 ;;		Unchanged: 0/0
 18735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18736 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18739 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18740 ;;Total ram usage:        1 bytes
 18741 ;; Hardware stack levels used: 1
 18742 ;; Hardware stack levels required when called: 2
 18743 ;; This function calls:
 18744 ;;		i1_I2C_SetBuffer
 18745 ;;		i1_I2C_SetDataCompleteCallback
 18746 ;; This function is called by:
 18747 ;;		_I2C_Read1ByteRegister
 18748 ;;		_I2C_DO_TX
 18749 ;;		_I2C_DO_RX
 18750 ;;		_I2C_DO_TX_EMPTY
 18751 ;;		_I2C_DO_ADDRESS_NACK
 18752 ;;		_I2C_DO_RX_EMPTY
 18753 ;; This function uses a non-reentrant model
 18754 ;;
 18755                           
 18756     141F                     _rd1RegCompleteHandler:	
 18757                           ;psect for function _rd1RegCompleteHandler
 18758                           
 18759     141F                     i1l3711:	
 18760                           ;incstack = 0
 18761                           ; Regs used in _rd1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 18762                           
 18763                           
 18764                           ;i2c_master_example.c: 144: I2C_SetBuffer(ptr,1);
 18765     141F  0877               	movf	rd1RegCompleteHandler@ptr,w
 18766     1420  00F0               	movwf	i1I2C_SetBuffer@buffer
 18767     1421  01F1               	clrf	i1I2C_SetBuffer@buffer+1
 18768     1422  3001               	movlw	1
 18769     1423  00F2               	movwf	i1I2C_SetBuffer@bufferSize
 18770     1424  3000               	movlw	0
 18771     1425  00F3               	movwf	i1I2C_SetBuffer@bufferSize+1
 18772     1426  3193  23FD  3194   	fcall	i1_I2C_SetBuffer
 18773     1429                     i1l3713:
 18774                           
 18775                           ;i2c_master_example.c: 145: I2C_SetDataCompleteCallback((0),(0));
 18776     1429  3000               	movlw	0
 18777     142A  00F4               	movwf	i1I2C_SetDataCompleteCallback@cb
 18778     142B  00F5               	movwf	i1I2C_SetDataCompleteCallback@cb+1
 18779     142C  01F6               	clrf	i1I2C_SetDataCompleteCallback@ptr
 18780     142D  3193  2377  3194   	fcall	i1_I2C_SetDataCompleteCallback
 18781     1430                     i1l3715:
 18782                           
 18783                           ;i2c_master_example.c: 146: return I2C_RESTART_READ;
 18784     1430  3002               	movlw	2
 18785     1431                     i1l92:
 18786     1431  0008               	return
 18787     1432                     __end_of_rd1RegCompleteHandler:
 18788                           
 18789                           	psect	text105
 18790     140C                     __ptext105:	
 18791 ;; *************** function _wr2RegCompleteHandler *****************
 18792 ;; Defined at:
 18793 ;;		line 163 in file "mcc_generated_files/examples/i2c_master_example.c"
 18794 ;; Parameters:    Size  Location     Type
 18795 ;;  ptr             1    7[COMMON] PTR void 
 18796 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 18797 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 18798 ;; Auto vars:     Size  Location     Type
 18799 ;;		None
 18800 ;; Return value:  Size  Location     Type
 18801 ;;                  1    wreg      enum E97
 18802 ;; Registers used:
 18803 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18804 ;; Tracked objects:
 18805 ;;		On entry : 0/0
 18806 ;;		On exit  : 0/0
 18807 ;;		Unchanged: 0/0
 18808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18809 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18810 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18812 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18813 ;;Total ram usage:        1 bytes
 18814 ;; Hardware stack levels used: 1
 18815 ;; Hardware stack levels required when called: 2
 18816 ;; This function calls:
 18817 ;;		i1_I2C_SetBuffer
 18818 ;;		i1_I2C_SetDataCompleteCallback
 18819 ;; This function is called by:
 18820 ;;		_I2C_Write2ByteRegister
 18821 ;;		_I2C_DO_TX
 18822 ;;		_I2C_DO_RX
 18823 ;;		_I2C_DO_TX_EMPTY
 18824 ;;		_I2C_DO_ADDRESS_NACK
 18825 ;;		_I2C_DO_RX_EMPTY
 18826 ;; This function uses a non-reentrant model
 18827 ;;
 18828                           
 18829     140C                     _wr2RegCompleteHandler:	
 18830                           ;psect for function _wr2RegCompleteHandler
 18831                           
 18832     140C                     i1l3735:	
 18833                           ;incstack = 0
 18834                           ; Regs used in _wr2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 18835                           
 18836                           
 18837                           ;i2c_master_example.c: 165: I2C_SetBuffer(ptr,2);
 18838     140C  0877               	movf	wr2RegCompleteHandler@ptr,w
 18839     140D  00F0               	movwf	i1I2C_SetBuffer@buffer
 18840     140E  01F1               	clrf	i1I2C_SetBuffer@buffer+1
 18841     140F  3002               	movlw	2
 18842     1410  00F2               	movwf	i1I2C_SetBuffer@bufferSize
 18843     1411  3000               	movlw	0
 18844     1412  00F3               	movwf	i1I2C_SetBuffer@bufferSize+1
 18845     1413  3193  23FD  3194   	fcall	i1_I2C_SetBuffer
 18846     1416                     i1l3737:
 18847                           
 18848                           ;i2c_master_example.c: 166: I2C_SetDataCompleteCallback((0),(0));
 18849     1416  3000               	movlw	0
 18850     1417  00F4               	movwf	i1I2C_SetDataCompleteCallback@cb
 18851     1418  00F5               	movwf	i1I2C_SetDataCompleteCallback@cb+1
 18852     1419  01F6               	clrf	i1I2C_SetDataCompleteCallback@ptr
 18853     141A  3193  2377  3194   	fcall	i1_I2C_SetDataCompleteCallback
 18854     141D                     i1l3739:
 18855                           
 18856                           ;i2c_master_example.c: 167: return I2C_CONTINUE;
 18857     141D  3004               	movlw	4
 18858     141E                     i1l101:
 18859     141E  0008               	return
 18860     141F                     __end_of_wr2RegCompleteHandler:
 18861                           
 18862                           	psect	text106
 18863     1377                     __ptext106:	
 18864 ;; *************** function i1_I2C_SetDataCompleteCallback *****************
 18865 ;; Defined at:
 18866 ;;		line 274 in file "mcc_generated_files/i2c_master.c"
 18867 ;; Parameters:    Size  Location     Type
 18868 ;;  cb              2    4[COMMON] PTR FTN(PTR void ,)enum 
 18869 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), rd2RegCompleteHandler(1), 
 18870 ;;		 -> NULL(1), rd1RegCompleteHandler(1), 
 18871 ;;  ptr             1    6[COMMON] PTR void 
 18872 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 18873 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 18874 ;; Auto vars:     Size  Location     Type
 18875 ;;		None
 18876 ;; Return value:  Size  Location     Type
 18877 ;;                  1    wreg      void 
 18878 ;; Registers used:
 18879 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18880 ;; Tracked objects:
 18881 ;;		On entry : 0/0
 18882 ;;		On exit  : 0/0
 18883 ;;		Unchanged: 0/0
 18884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18885 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18888 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18889 ;;Total ram usage:        3 bytes
 18890 ;; Hardware stack levels used: 1
 18891 ;; Hardware stack levels required when called: 1
 18892 ;; This function calls:
 18893 ;;		i1_I2C_SetCallback
 18894 ;; This function is called by:
 18895 ;;		_rd1RegCompleteHandler
 18896 ;;		_rd2RegCompleteHandler
 18897 ;;		_wr1RegCompleteHandler
 18898 ;;		_wr2RegCompleteHandler
 18899 ;;		_rdBlkRegCompleteHandler
 18900 ;; This function uses a non-reentrant model
 18901 ;;
 18902                           
 18903     1377                     i1_I2C_SetDataCompleteCallback:	
 18904                           ;psect for function i1_I2C_SetDataCompleteCallback
 18905                           
 18906     1377                     i1l3687:	
 18907                           ;incstack = 0
 18908                           ; Regs used in i1_I2C_SetDataCompleteCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclat
      +                          h+cstack]
 18909                           
 18910                           
 18911                           ;i2c_master.c: 276: I2C_SetCallback(I2C_DATA_COMPLETE, cb, ptr);
 18912     1377  0875               	movf	i1I2C_SetDataCompleteCallback@cb+1,w
 18913     1378  00F1               	movwf	i1I2C_SetCallback@cb+1
 18914     1379  0874               	movf	i1I2C_SetDataCompleteCallback@cb,w
 18915     137A  00F0               	movwf	i1I2C_SetCallback@cb
 18916     137B  0876               	movf	i1I2C_SetDataCompleteCallback@ptr,w
 18917     137C  00F2               	movwf	i1I2C_SetCallback@ptr
 18918     137D  3000               	movlw	0
 18919     137E  3196  2647  3193   	fcall	i1_I2C_SetCallback
 18920     1381                     i1l510:
 18921     1381  0008               	return
 18922     1382                     __end_ofi1_I2C_SetDataCompleteCallback:
 18923                           
 18924                           	psect	text107
 18925     1647                     __ptext107:	
 18926 ;; *************** function i1_I2C_SetCallback *****************
 18927 ;; Defined at:
 18928 ;;		line 304 in file "mcc_generated_files/i2c_master.c"
 18929 ;; Parameters:    Size  Location     Type
 18930 ;;  idx             1    wreg     enum E12000
 18931 ;;  cb              2    0[COMMON] PTR FTN(PTR void ,)enum 
 18932 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), rd2RegCompleteHandler(1), 
 18933 ;;		 -> NULL(1), rd1RegCompleteHandler(1), 
 18934 ;;  ptr             1    2[COMMON] PTR void 
 18935 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 18936 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 18937 ;; Auto vars:     Size  Location     Type
 18938 ;;  idx             1    3[COMMON] enum E12000
 18939 ;; Return value:  Size  Location     Type
 18940 ;;                  1    wreg      void 
 18941 ;; Registers used:
 18942 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 18943 ;; Tracked objects:
 18944 ;;		On entry : 0/0
 18945 ;;		On exit  : 0/0
 18946 ;;		Unchanged: 0/0
 18947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18948 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18949 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18951 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18952 ;;Total ram usage:        4 bytes
 18953 ;; Hardware stack levels used: 1
 18954 ;; This function calls:
 18955 ;;		Nothing
 18956 ;; This function is called by:
 18957 ;;		i1_I2C_SetDataCompleteCallback
 18958 ;; This function uses a non-reentrant model
 18959 ;;
 18960                           
 18961     1647                     i1_I2C_SetCallback:	
 18962                           ;psect for function i1_I2C_SetCallback
 18963                           
 18964                           
 18965                           ;incstack = 0
 18966                           ; Regs used in i1_I2C_SetCallback: [wreg+fsr1l+fsr1h+status,2+status,0]
 18967                           ;i1I2C_SetCallback@idx stored from wreg
 18968     1647  00F3               	movwf	i1I2C_SetCallback@idx
 18969     1648                     i1l3637:
 18970                           
 18971                           ;i2c_master.c: 306: if(cb)
 18972     1648  0870               	movf	i1I2C_SetCallback@cb,w
 18973     1649  0471               	iorwf	i1I2C_SetCallback@cb+1,w
 18974     164A  1903               	btfsc	3,2
 18975     164B  2E4D               	goto	u221_21
 18976     164C  2E4E               	goto	u221_20
 18977     164D                     u221_21:
 18978     164D  2E5D               	goto	i1l3641
 18979     164E                     u221_20:
 18980     164E                     i1l3639:
 18981                           
 18982                           ;i2c_master.c: 307: {;i2c_master.c: 308: I2C_Status.callbackTable[idx] = cb;
 18983     164E  3573               	lslf	i1I2C_SetCallback@idx,w
 18984     164F  3EA0               	addlw	(low (_I2C_Status| 0))& (0+255)
 18985     1650  0086               	movwf	6
 18986     1651  0187               	clrf	7
 18987     1652  0870               	movf	i1I2C_SetCallback@cb,w
 18988     1653  3FC0               	movwi [0]fsr1
 18989     1654  0871               	movf	i1I2C_SetCallback@cb+1,w
 18990     1655  3FC1               	movwi [1]fsr1
 18991                           
 18992                           ;i2c_master.c: 309: I2C_Status.callbackPayload[idx] = ptr;
 18993     1656  0873               	movf	i1I2C_SetCallback@idx,w
 18994     1657  3EAC               	addlw	(low ((_I2C_Status| 0+12)))& (0+255)
 18995     1658  0086               	movwf	6
 18996     1659  0187               	clrf	7
 18997     165A  0872               	movf	i1I2C_SetCallback@ptr,w
 18998     165B  0081               	movwf	1
 18999                           
 19000                           ;i2c_master.c: 310: }
 19001     165C  2E6A               	goto	i1l530
 19002     165D                     i1l3641:
 19003                           
 19004                           ;i2c_master.c: 311: else;i2c_master.c: 312: {;i2c_master.c: 313: I2C_Status.callbackTabl
      +                          e[idx] = I2C_CallbackReturnStop;
 19005     165D  3573               	lslf	i1I2C_SetCallback@idx,w
 19006     165E  3EA0               	addlw	(low (_I2C_Status| 0))& (0+255)
 19007     165F  0086               	movwf	6
 19008     1660  0187               	clrf	7
 19009     1661  309C               	movlw	low _I2C_CallbackReturnStop
 19010     1662  3FC0               	movwi [0]fsr1
 19011     1663  3012               	movlw	high _I2C_CallbackReturnStop
 19012     1664  3FC1               	movwi [1]fsr1
 19013                           
 19014                           ;i2c_master.c: 314: I2C_Status.callbackPayload[idx] = (0);
 19015     1665  0873               	movf	i1I2C_SetCallback@idx,w
 19016     1666  3EAC               	addlw	(low ((_I2C_Status| 0+12)))& (0+255)
 19017     1667  0086               	movwf	6
 19018     1668  0187               	clrf	7
 19019     1669  0181               	clrf	1
 19020     166A                     i1l530:
 19021     166A  0008               	return
 19022     166B                     __end_ofi1_I2C_SetCallback:
 19023                           
 19024                           	psect	text108
 19025     13FD                     __ptext108:	
 19026 ;; *************** function i1_I2C_SetBuffer *****************
 19027 ;; Defined at:
 19028 ;;		line 264 in file "mcc_generated_files/i2c_master.c"
 19029 ;; Parameters:    Size  Location     Type
 19030 ;;  buffer          2    0[COMMON] PTR void 
 19031 ;;		 -> I2C_Read1ByteRegister@returnValue$data(2), I2C_Read2ByteRegister@returnValue$data(2), I2C_Write1ByteRegister@dat
      +a$data(2), I2C_Write2ByteRegister@data$data(2), 
 19032 ;;		 -> Font12_data(13), Font6_data(7), Posi_cmd(6), CLR_cmd(9), 
 19033 ;;		 -> REG(8), I2C_ReadDataBlock@reg(1), I2C_ReadDataBlock@bufferBlock(4), bufferBlock$data(2), 
 19034 ;;		 -> I2C_Write2ByteRegister@reg(1), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@reg(1), I2C_Write1ByteRegi
      +ster@data(1), 
 19035 ;;		 -> I2C_Read2ByteRegister@reg(1), I2C_Read2ByteRegister@returnValue(2), NULL(0), I2C_Read1ByteRegister@reg(1), 
 19036 ;;		 -> I2C_Read1ByteRegister@returnValue(1), 
 19037 ;;  bufferSize      2    2[COMMON] unsigned int 
 19038 ;; Auto vars:     Size  Location     Type
 19039 ;;		None
 19040 ;; Return value:  Size  Location     Type
 19041 ;;                  1    wreg      void 
 19042 ;; Registers used:
 19043 ;;		wreg
 19044 ;; Tracked objects:
 19045 ;;		On entry : 0/0
 19046 ;;		On exit  : 0/0
 19047 ;;		Unchanged: 0/0
 19048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19049 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19052 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19053 ;;Total ram usage:        4 bytes
 19054 ;; Hardware stack levels used: 1
 19055 ;; This function calls:
 19056 ;;		Nothing
 19057 ;; This function is called by:
 19058 ;;		_rd1RegCompleteHandler
 19059 ;;		_rd2RegCompleteHandler
 19060 ;;		_wr1RegCompleteHandler
 19061 ;;		_wr2RegCompleteHandler
 19062 ;;		_rdBlkRegCompleteHandler
 19063 ;; This function uses a non-reentrant model
 19064 ;;
 19065                           
 19066     13FD                     i1_I2C_SetBuffer:	
 19067                           ;psect for function i1_I2C_SetBuffer
 19068                           
 19069     13FD                     i1l3681:	
 19070                           ;incstack = 0
 19071                           ; Regs used in i1_I2C_SetBuffer: [wreg]
 19072                           
 19073                           
 19074                           ;i2c_master.c: 266: if(I2C_Status.bufferFree)
 19075     13FD  0021               	movlb	1	; select bank1
 19076     13FE  1DBD               	btfss	(_I2C_Status^(0+128)+29),3
 19077     13FF  2C01               	goto	u228_21
 19078     1400  2C02               	goto	u228_20
 19079     1401                     u228_21:
 19080     1401  2C0B               	goto	i1l507
 19081     1402                     u228_20:
 19082     1402                     i1l3683:
 19083                           
 19084                           ;i2c_master.c: 267: {;i2c_master.c: 268: I2C_Status.data_ptr = buffer;
 19085     1402  0871               	movf	i1I2C_SetBuffer@buffer+1,w
 19086     1403  00B8               	movwf	((low ((_I2C_Status| 0+23))+1))^(0+128)
 19087     1404  0870               	movf	i1I2C_SetBuffer@buffer,w
 19088     1405  00B7               	movwf	(low ((_I2C_Status| 0+23)))^(0+128)
 19089                           
 19090                           ;i2c_master.c: 269: I2C_Status.data_length = bufferSize;
 19091     1406  0873               	movf	i1I2C_SetBuffer@bufferSize+1,w
 19092     1407  00BA               	movwf	((_I2C_Status+1)^(0+128)+25)
 19093     1408  0872               	movf	i1I2C_SetBuffer@bufferSize,w
 19094     1409  00B9               	movwf	(_I2C_Status^(0+128)+25)
 19095     140A                     i1l3685:
 19096                           
 19097                           ;i2c_master.c: 270: I2C_Status.bufferFree = 0;
 19098     140A  11BD               	bcf	(_I2C_Status^(0+128)+29),3
 19099     140B                     i1l507:
 19100     140B  0008               	return
 19101     140C                     __end_ofi1_I2C_SetBuffer:
 19102                           
 19103                           	psect	text109
 19104     12A1                     __ptext109:	
 19105 ;; *************** function _I2C_MasterStop *****************
 19106 ;; Defined at:
 19107 ;;		line 594 in file "mcc_generated_files/i2c_master.c"
 19108 ;; Parameters:    Size  Location     Type
 19109 ;;		None
 19110 ;; Auto vars:     Size  Location     Type
 19111 ;;		None
 19112 ;; Return value:  Size  Location     Type
 19113 ;;                  1    wreg      void 
 19114 ;; Registers used:
 19115 ;;		None
 19116 ;; Tracked objects:
 19117 ;;		On entry : 0/0
 19118 ;;		On exit  : 0/0
 19119 ;;		Unchanged: 0/0
 19120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19124 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19125 ;;Total ram usage:        0 bytes
 19126 ;; Hardware stack levels used: 1
 19127 ;; This function calls:
 19128 ;;		Nothing
 19129 ;; This function is called by:
 19130 ;;		_I2C_DO_SEND_STOP
 19131 ;; This function uses a non-reentrant model
 19132 ;;
 19133                           
 19134     12A1                     _I2C_MasterStop:	
 19135                           ;psect for function _I2C_MasterStop
 19136                           
 19137     12A1                     i1l3657:	
 19138                           ;incstack = 0
 19139                           ; Regs used in _I2C_MasterStop: []
 19140                           
 19141                           
 19142                           ;i2c_master.c: 596: SSP1CON2bits.PEN = 1;
 19143     12A1  0024               	movlb	4	; select bank4
 19144     12A2  1516               	bsf	22,2	;volatile
 19145     12A3                     i1l673:
 19146     12A3  0008               	return
 19147     12A4                     __end_of_I2C_MasterStop:
 19148                           
 19149                           	psect	text110
 19150     129E                     __ptext110:	
 19151 ;; *************** function _I2C_MasterEnableRestart *****************
 19152 ;; Defined at:
 19153 ;;		line 574 in file "mcc_generated_files/i2c_master.c"
 19154 ;; Parameters:    Size  Location     Type
 19155 ;;		None
 19156 ;; Auto vars:     Size  Location     Type
 19157 ;;		None
 19158 ;; Return value:  Size  Location     Type
 19159 ;;                  1    wreg      void 
 19160 ;; Registers used:
 19161 ;;		None
 19162 ;; Tracked objects:
 19163 ;;		On entry : 0/0
 19164 ;;		On exit  : 0/0
 19165 ;;		Unchanged: 0/0
 19166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19170 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19171 ;;Total ram usage:        0 bytes
 19172 ;; Hardware stack levels used: 1
 19173 ;; This function calls:
 19174 ;;		Nothing
 19175 ;; This function is called by:
 19176 ;;		_I2C_DO_SEND_RESTART_READ
 19177 ;;		_I2C_DO_SEND_RESTART_WRITE
 19178 ;;		_I2C_DO_SEND_RESTART
 19179 ;;		_I2C_DO_RX_EMPTY
 19180 ;; This function uses a non-reentrant model
 19181 ;;
 19182                           
 19183     129E                     _I2C_MasterEnableRestart:	
 19184                           ;psect for function _I2C_MasterEnableRestart
 19185                           
 19186     129E                     i1l3655:	
 19187                           ;incstack = 0
 19188                           ; Regs used in _I2C_MasterEnableRestart: []
 19189                           
 19190                           
 19191                           ;i2c_master.c: 576: SSP1CON2bits.RSEN = 1;
 19192     129E  0024               	movlb	4	; select bank4
 19193     129F  1496               	bsf	22,1	;volatile
 19194     12A0                     i1l661:
 19195     12A0  0008               	return
 19196     12A1                     __end_of_I2C_MasterEnableRestart:
 19197     007E                     btemp	set	126	;btemp
 19198     007E                     int$flags	set	126
 19199     007E                     wtemp0	set	126
 19200     25F0                     
 19201                           	psect	idloc
 19202                           
 19203                           ;Config register IDLOC0 @ 0x8000
 19204                           ;	unspecified, using default values
 19205     8000                     	org	32768
 19206     8000  3FFF               	dw	16383
 19207                           
 19208                           ;Config register IDLOC1 @ 0x8001
 19209                           ;	unspecified, using default values
 19210     8001                     	org	32769
 19211     8001  3FFF               	dw	16383
 19212                           
 19213                           ;Config register IDLOC2 @ 0x8002
 19214                           ;	unspecified, using default values
 19215     8002                     	org	32770
 19216     8002  3FFF               	dw	16383
 19217                           
 19218                           ;Config register IDLOC3 @ 0x8003
 19219                           ;	unspecified, using default values
 19220     8003                     	org	32771
 19221     8003  3FFF               	dw	16383
 19222                           
 19223                           	psect	config
 19224                           
 19225                           ;Config register CONFIG1 @ 0x8007
 19226                           ;	Oscillator Selection Bits
 19227                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
 19228                           ;	Watchdog Timer Enable
 19229                           ;	WDTE = OFF, WDT disabled
 19230                           ;	Power-up Timer Enable
 19231                           ;	PWRTE = OFF, PWRT disabled
 19232                           ;	MCLR Pin Function Select
 19233                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
 19234                           ;	Flash Program Memory Code Protection
 19235                           ;	CP = OFF, Program memory code protection is disabled
 19236                           ;	Brown-out Reset Enable
 19237                           ;	BOREN = ON, Brown-out Reset enabled
 19238                           ;	Clock Out Enable
 19239                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
 19240                           ;	Internal/External Switchover Mode
 19241                           ;	IESO = ON, Internal/External Switchover Mode is enabled
 19242                           ;	Fail-Safe Clock Monitor Enable
 19243                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 19244     8007                     	org	32775
 19245     8007  3FE4               	dw	16356
 19246                           
 19247                           ;Config register CONFIG2 @ 0x8008
 19248                           ;	Flash Memory Self-Write Protection
 19249                           ;	WRT = OFF, Write protection off
 19250                           ;	Peripheral Pin Select one-way control
 19251                           ;	PPS1WAY = ON, The PPSLOCK bit cannot be cleared once it is set by software
 19252                           ;	Zero-cross detect disable
 19253                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR
 19254                           ;	Phase Lock Loop enable
 19255                           ;	PLLEN = OFF, 4x PLL is enabled when software sets the SPLLEN bit
 19256                           ;	Stack Overflow/Underflow Reset Enable
 19257                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 19258                           ;	Brown-out Reset Voltage Selection
 19259                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
 19260                           ;	Low-Power Brown Out Reset
 19261                           ;	LPBOR = OFF, Low-Power BOR is disabled
 19262                           ;	Low-Voltage Programming Enable
 19263                           ;	LVP = ON, Low-voltage programming enabled
 19264     8008                     	org	32776
 19265     8008  3EFF               	dw	16127

Data Sizes:
    Strings     268
    Constant    980
    Data        221
    BSS         76
    Persistent  34
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     56      63
    BANK1            80      0      79
    BANK2            80      0      79
    BANK3            80      0      70
    BANK4            80      0      64
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19            0      0       0
    BANK20            0      0       0
    BANK21            0      0       0
    BANK22            0      0       0
    BANK23            0      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    bufferBlock$data	PTR unsigned char  size(2) Largest target is 0

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write1ByteRegister@data(BANK0[1]), 
		 -> I2C_Write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write1ByteRegister@data(BANK0[1]), 
		 -> I2C_Write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    DIR	PTR unsigned char [2] size(2) Largest target is 2
		 -> STR_10(CODE[2]), STR_11(CODE[2]), 

    I2C_CallbackReturnReset@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write1ByteRegister@data(BANK0[1]), 
		 -> I2C_Write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    I2C_CallbackReturnStop@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write1ByteRegister@data(BANK0[1]), 
		 -> I2C_Write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    I2C_DO_TX$2560	PTR FTN(PTR void ,)enum E97 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), rd1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rdBlkRegCompleteHandler(), wr1RegCompleteHandler(), wr2RegCompleteHandler(), NULL(), 

    I2C_DO_TX$2560$0	PTR void  size(1) Largest target is 4
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write1ByteRegister@data(BANK0[1]), 
		 -> I2C_Write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    I2C_DO_TX$2565	PTR void  size(1) Largest target is 4
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write1ByteRegister@data(BANK0[1]), 
		 -> I2C_Write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    i2c_fsmStateTable	const PTR FTN()enum E11982[16] size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_IDLE(), I2C_DO_RCEN(), I2C_DO_RESET(), 
		 -> I2C_DO_RX(), I2C_DO_RX_ACK(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_SEND_ADR_READ(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_READ(), 
		 -> I2C_DO_SEND_RESTART_WRITE(), I2C_DO_SEND_STOP(), I2C_DO_TX(), I2C_DO_TX_EMPTY(), 

    I2C_MasterFsm$2559	const PTR FTN()enum E11982 size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_IDLE(), I2C_DO_RCEN(), I2C_DO_RESET(), 
		 -> I2C_DO_RX(), I2C_DO_RX_ACK(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_SEND_ADR_READ(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_READ(), 
		 -> I2C_DO_SEND_RESTART_WRITE(), I2C_DO_SEND_STOP(), I2C_DO_TX(), I2C_DO_TX_EMPTY(), 

    I2C_Read1ByteRegister@returnValue$data	PTR unsigned char  size(2) Largest target is 0

    I2C_Read2ByteRegister@returnValue$data	PTR unsigned char  size(2) Largest target is 0

    I2C_ReadNBytes@data	PTR unsigned char  size(1) Largest target is 8
		 -> REG(BANK1[8]), 

    I2C_SetAddressNackCallback@cb	PTR FTN(PTR void ,)enum E97 size(2) Largest target is 1
		 -> NULL(), 

    I2C_SetAddressNackCallback@ptr	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C_SetBuffer@buffer	PTR void  size(2) Largest target is 13
		 -> CLR_cmd(BANK2[9]), Font12_data(BANK2[13]), Font6_data(BANK2[7]), I2C_Read1ByteRegister@reg(COMMON[1]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), I2C_Read2ByteRegister@reg(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), I2C_ReadDataBlock@bufferBlock(COMMON[4]), 
		 -> I2C_ReadDataBlock@reg(COMMON[1]), I2C_Write1ByteRegister@data(BANK0[1]), I2C_Write1ByteRegister@reg(BANK0[1]), I2C_Write2ByteRegister@data(COMMON[2]), 
		 -> I2C_Write2ByteRegister@reg(COMMON[1]), Posi_cmd(BANK1[6]), REG(BANK1[8]), NULL(NULL[0]), 

    I2C_SetCallback@cb	PTR FTN(PTR void ,)enum E97 size(2) Largest target is 1
		 -> rd1RegCompleteHandler(), rd2RegCompleteHandler(), rdBlkRegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), NULL(), 

    I2C_SetCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write1ByteRegister@data(BANK0[1]), 
		 -> I2C_Write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    I2C_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E97 size(2) Largest target is 1
		 -> rd1RegCompleteHandler(), rd2RegCompleteHandler(), rdBlkRegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), NULL(), 

    I2C_SetDataCompleteCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write1ByteRegister@data(BANK0[1]), 
		 -> I2C_Write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    I2C_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_MasterIsr(), 

    I2C_Status$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write1ByteRegister@data(BANK0[1]), 
		 -> I2C_Write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    I2C_Status$callbackTable	PTR FTN(PTR void ,)enum E97[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), rd1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rdBlkRegCompleteHandler(), wr1RegCompleteHandler(), wr2RegCompleteHandler(), NULL(), 

    I2C_Status$data_ptr	PTR unsigned char  size(2) Largest target is 13
		 -> bufferBlock$data(COMMON[2]), CLR_cmd(BANK2[9]), Font12_data(BANK2[13]), Font6_data(BANK2[7]), 
		 -> I2C_Read1ByteRegister@reg(COMMON[1]), I2C_Read1ByteRegister@returnValue(COMMON[1]), I2C_Read1ByteRegister@returnValue$data(COMMON[2]), I2C_Read2ByteRegister@reg(COMMON[1]), 
		 -> I2C_Read2ByteRegister@returnValue(COMMON[2]), I2C_Read2ByteRegister@returnValue$data(COMMON[2]), I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_ReadDataBlock@reg(COMMON[1]), 
		 -> I2C_Write1ByteRegister@data(BANK0[1]), I2C_Write1ByteRegister@data$data(COMMON[2]), I2C_Write1ByteRegister@reg(BANK0[1]), I2C_Write2ByteRegister@data(COMMON[2]), 
		 -> I2C_Write2ByteRegister@data$data(COMMON[2]), I2C_Write2ByteRegister@reg(COMMON[1]), Posi_cmd(BANK1[6]), REG(BANK1[8]), 
		 -> NULL(NULL[0]), 

    I2C_Write1ByteRegister@data$data	PTR unsigned char  size(2) Largest target is 0

    I2C_Write2ByteRegister@data$data	PTR unsigned char  size(2) Largest target is 0

    I2C_WriteNBytes@data	PTR unsigned char  size(2) Largest target is 13
		 -> CLR_cmd(BANK2[9]), Font12_data(BANK2[13]), Font6_data(BANK2[7]), Posi_cmd(BANK1[6]), 
		 -> NULL(NULL[0]), 

    main$2558	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_10(CODE[2]), STR_11(CODE[2]), 

    MSSP_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_MasterIsr(), NULL(), 

    NULL$0	PTR void  size(1) Largest target is 4
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write1ByteRegister@data(BANK0[1]), 
		 -> I2C_Write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    printf@cp	PTR const unsigned char  size(2) Largest target is 64
		 -> ?_printf(BANK0[2]), STR_1(CODE[4]), STR_10(CODE[2]), STR_11(CODE[2]), 
		 -> STR_2(CODE[4]), STR_3(CODE[4]), STR_36(CODE[7]), STR_4(CODE[4]), 
		 -> STR_5(CODE[4]), STR_6(CODE[4]), STR_7(CODE[4]), STR_8(CODE[4]), 
		 -> STR_9(CODE[4]), unit(BANK4[64]), unit2(BANK3[16]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 62
		 -> STR_12(CODE[6]), STR_13(CODE[6]), STR_14(CODE[5]), STR_15(CODE[3]), 
		 -> STR_16(CODE[4]), STR_17(CODE[4]), STR_18(CODE[4]), STR_19(CODE[5]), 
		 -> STR_20(CODE[6]), STR_21(CODE[6]), STR_22(CODE[5]), STR_23(CODE[12]), 
		 -> STR_24(CODE[62]), STR_25(CODE[3]), STR_26(CODE[3]), STR_27(CODE[3]), 
		 -> STR_28(CODE[3]), STR_29(CODE[16]), STR_30(CODE[26]), STR_31(CODE[16]), 
		 -> STR_32(CODE[26]), STR_33(CODE[17]), STR_34(CODE[17]), STR_35(CODE[33]), 

    rd1RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write1ByteRegister@data(BANK0[1]), 
		 -> I2C_Write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    rd2RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write1ByteRegister@data(BANK0[1]), 
		 -> I2C_Write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    rdBlkRegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write1ByteRegister@data(BANK0[1]), 
		 -> I2C_Write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    rdBlkRegCompleteHandler@ptr$data	PTR unsigned char  size(2) Largest target is 0

    RTC_disp$2556	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_1(CODE[4]), STR_2(CODE[4]), STR_3(CODE[4]), STR_4(CODE[4]), 
		 -> STR_5(CODE[4]), STR_6(CODE[4]), STR_7(CODE[4]), 

    S845$0$0	PTR void  size(1) Largest target is 4
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write1ByteRegister@data(BANK0[1]), 
		 -> I2C_Write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    S845$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write1ByteRegister@data(BANK0[1]), 
		 -> I2C_Write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    S845$callbackTable	PTR FTN(PTR void ,)enum E97[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), rd1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rdBlkRegCompleteHandler(), wr1RegCompleteHandler(), wr2RegCompleteHandler(), NULL(), 

    S845$data_ptr	PTR unsigned char  size(2) Largest target is 13
		 -> CLR_cmd(BANK2[9]), Font12_data(BANK2[13]), Font6_data(BANK2[7]), I2C_Read1ByteRegister@reg(COMMON[1]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), I2C_Read2ByteRegister@reg(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), I2C_ReadDataBlock@bufferBlock(COMMON[4]), 
		 -> I2C_ReadDataBlock@reg(COMMON[1]), I2C_Write1ByteRegister@data(BANK0[1]), I2C_Write1ByteRegister@reg(BANK0[1]), I2C_Write2ByteRegister@data(COMMON[2]), 
		 -> I2C_Write2ByteRegister@reg(COMMON[1]), Posi_cmd(BANK1[6]), REG(BANK1[8]), NULL(NULL[0]), 

    S89$data	PTR unsigned char  size(2) Largest target is 0

    SRV	PTR unsigned char [2] size(2) Largest target is 4
		 -> STR_8(CODE[4]), STR_9(CODE[4]), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), TMR2_Process(), NULL(), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), TMR2_Process(), 

    week	PTR unsigned char [7] size(2) Largest target is 4
		 -> STR_1(CODE[4]), STR_2(CODE[4]), STR_3(CODE[4]), STR_4(CODE[4]), 
		 -> STR_5(CODE[4]), STR_6(CODE[4]), STR_7(CODE[4]), 

    wr1RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write1ByteRegister@data(BANK0[1]), 
		 -> I2C_Write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    wr2RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write1ByteRegister@data(BANK0[1]), 
		 -> I2C_Write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR2_Process->_Alm_Adj
    _TMR2_Process->_Time_Adj
    i1_Pen_swipe2->i1_PWM6_DutyCycleSet
    i1_Pen_swipe->i1_PWM11_DutyCycleSet
    _Time_Adj->i1___bmul
    _Alm_Adj->i1___bmul
    _I2C_MasterIsr->_I2C_MasterFsm
    _I2C_MasterFsm->_I2C_DO_TX
    _I2C_DO_TX_EMPTY->_I2C_CallbackReturnReset
    _I2C_DO_TX_EMPTY->_I2C_CallbackReturnStop
    _I2C_DO_TX_EMPTY->_rd1RegCompleteHandler
    _I2C_DO_TX_EMPTY->_rd2RegCompleteHandler
    _I2C_DO_TX_EMPTY->_rdBlkRegCompleteHandler
    _I2C_DO_TX_EMPTY->_wr1RegCompleteHandler
    _I2C_DO_TX_EMPTY->_wr2RegCompleteHandler
    _I2C_DO_TX->_I2C_CallbackReturnReset
    _I2C_DO_TX->_I2C_CallbackReturnStop
    _I2C_DO_TX->_rd1RegCompleteHandler
    _I2C_DO_TX->_rd2RegCompleteHandler
    _I2C_DO_TX->_rdBlkRegCompleteHandler
    _I2C_DO_TX->_wr1RegCompleteHandler
    _I2C_DO_TX->_wr2RegCompleteHandler
    _I2C_DO_SEND_ADR_WRITE->_I2C_MasterSendTxData
    _I2C_DO_RX->_I2C_CallbackReturnReset
    _I2C_DO_RX->_I2C_CallbackReturnStop
    _I2C_DO_RX->_rd1RegCompleteHandler
    _I2C_DO_RX->_rd2RegCompleteHandler
    _I2C_DO_RX->_rdBlkRegCompleteHandler
    _I2C_DO_RX->_wr1RegCompleteHandler
    _I2C_DO_RX->_wr2RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_I2C_CallbackReturnReset
    _I2C_DO_ADDRESS_NACK->_I2C_CallbackReturnStop
    _I2C_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _wr2RegCompleteHandler->i1_I2C_SetDataCompleteCallback
    _wr1RegCompleteHandler->i1_I2C_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->i1_I2C_SetDataCompleteCallback
    _rd2RegCompleteHandler->i1_I2C_SetDataCompleteCallback
    _rd1RegCompleteHandler->i1_I2C_SetDataCompleteCallback
    i1_I2C_SetDataCompleteCallback->i1_I2C_SetCallback

Critical Paths under _main in BANK0

    _main->_RTC_disp
    _Time_data_read->_I2C_WriteNBytes
    _I2C_ReadNBytes->_I2C_Open
    _I2C_ReadNBytes->_I2C_SetBuffer
    _I2C_MasterRead->_I2C_MasterOperation
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _RTC_disp->_printf
    _OLED_init->_OLED_cmd
    _OLED_cmd->_I2C_Write1ByteRegister
    _OLED_clr->_I2C_WriteNBytes
    _OLED_data->_I2C_Write1ByteRegister
    _MoveServo->_printf
    _printf->_putch
    _putch->_chr12
    _chr6->_I2C_WriteNBytes
    _chr12->_I2C_WriteNBytes
    ___lwmod->___lwdiv
    _font6_posi->_I2C_WriteNBytes
    _I2C_WriteNBytes->_I2C_SetAddressNackCallback
    _Pen_swipe2->_PWM6_DutyCycleSet
    _Pen_swipe->_PWM11_DutyCycleSet
    _Clock_set->_div
    _Time_data_write->_I2C_Write1ByteRegister
    _Alarm_set->_div
    _div->___awdiv
    _ALM_set->_I2C_Write1ByteRegister
    _I2C_Write1ByteRegister->_I2C_SetAddressNackCallback
    _I2C_SetDataCompleteCallback->_I2C_SetCallback
    _I2C_SetAddressNackCallback->_I2C_SetCallback
    _I2C_Open->_I2C_SetInterruptHandler
    _I2C_MasterWrite->_I2C_MasterOperation

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0  164268
                                             52 BANK0      4     4      0
                          _Alarm_set
                          _Clock_set
                          _MoveServo
                           _OLED_clr
                          _OLED_init
                           _RTC_disp
                  _SYSTEM_Initialize
           _TMR2_SetInterruptHandler
                     _Time_data_read
                    _Time_data_write
                             ___bmul
                         _font6_posi
                             _printf
 ---------------------------------------------------------------------------------
 (1) _Time_data_read                                       0     0      0    7166
                     _I2C_ReadNBytes
                    _I2C_WriteNBytes
 ---------------------------------------------------------------------------------
 (2) _I2C_ReadNBytes                                       4     1      3    2040
                                              4 BANK0      4     1      3
                          _I2C_Close
                     _I2C_MasterRead
                           _I2C_Open
                      _I2C_SetBuffer
 ---------------------------------------------------------------------------------
 (3) _I2C_MasterRead                                       0     0      0      46
                _I2C_MasterOperation
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     174
                     _I2C_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                   _PWM11_Initialize
                    _PWM6_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     174
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR2_SetInterruptHandler                             2     0      2     174
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM11_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RTC_disp                                             2     2      0   32470
                                             50 BANK0      2     2      0
                         _font6_posi
                             _printf
 ---------------------------------------------------------------------------------
 (1) _OLED_init                                            0     0      0    8286
                           _OLED_cmd
 ---------------------------------------------------------------------------------
 (2) _OLED_cmd                                             1     1      0    8286
                                             11 BANK0      1     1      0
             _I2C_Write1ByteRegister
 ---------------------------------------------------------------------------------
 (1) _OLED_clr                                             2     2      0   13458
                                             13 BANK0      2     2      0
                    _I2C_WriteNBytes
                          _OLED_data
 ---------------------------------------------------------------------------------
 (2) _OLED_data                                            1     1      0    8286
                                             11 BANK0      1     1      0
             _I2C_Write1ByteRegister
 ---------------------------------------------------------------------------------
 (1) _MoveServo                                            0     0      0   41522
             _I2C_Write1ByteRegister
                          _Pen_swipe
                         _Pen_swipe2
                         _font6_posi
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              31    21     10   25995
                                             23 BANK0     27    17     10
                             ___bmul (ARG)
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0   18301
                                             22 BANK0      1     1      0
                              _chr12
                               _chr6
 ---------------------------------------------------------------------------------
 (3) _chr6                                                 8     8      0    9061
                                             13 BANK0      8     8      0
                    _I2C_WriteNBytes
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _chr12                                                9     9      0    9196
                                             13 BANK0      9     9      0
                    _I2C_WriteNBytes
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    3800
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     466
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _font6_posi                                           3     2      1    6475
                                             13 BANK0      3     2      1
                    _I2C_WriteNBytes
 ---------------------------------------------------------------------------------
 (4) _I2C_WriteNBytes                                      5     1      4    5126
                                              8 BANK0      5     1      4
                          _I2C_Close
                    _I2C_MasterWrite
                           _I2C_Open
         _I2C_SetAddressNackCallback
                      _I2C_SetBuffer
 ---------------------------------------------------------------------------------
 (2) _Pen_swipe2                                           3     1      2     394
                                              2 BANK0      3     1      2
                  _PWM6_DutyCycleSet
                 _PWM6_LoadBufferSet
 ---------------------------------------------------------------------------------
 (3) _PWM6_LoadBufferSet                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _PWM6_DutyCycleSet                                    2     0      2     120
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _Pen_swipe                                            3     1      2     394
                                              2 BANK0      3     1      2
                 _PWM11_DutyCycleSet
                _PWM11_LoadBufferSet
 ---------------------------------------------------------------------------------
 (3) _PWM11_LoadBufferSet                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _PWM11_DutyCycleSet                                   2     0      2     120
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _Clock_set                                            4     4      0   10127
                                             17 BANK0      4     4      0
                    _Time_data_write
                             ___bmul
                                _div
 ---------------------------------------------------------------------------------
 (1) ___bmul                                               4     3      1     282
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _Time_data_write                                      0     0      0    8264
             _I2C_Write1ByteRegister
 ---------------------------------------------------------------------------------
 (1) _Alarm_set                                            2     2      0    9875
                                             17 BANK0      2     2      0
                            _ALM_set
                                _div
 ---------------------------------------------------------------------------------
 (2) _div                                                  8     4      4    1491
                                              9 BANK0      8     4      4
                            ___awdiv
                            ___awmod
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     448
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     452
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (2) _ALM_set                                              2     1      1    8384
                                             11 BANK0      2     1      1
             _I2C_Write1ByteRegister
 ---------------------------------------------------------------------------------
 (2) _I2C_Write1ByteRegister                               3     1      2    8264
                                              8 BANK0      3     1      2
                          _I2C_Close
                    _I2C_MasterWrite
                           _I2C_Open
         _I2C_SetAddressNackCallback
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (3) _I2C_SetDataCompleteCallback                          3     0      3    2218
                                              4 BANK0      3     0      3
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (5) _I2C_SetBuffer                                        4     0      4    1608
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (5) _I2C_SetAddressNackCallback                           4     0      4    1870
                                              4 BANK0      4     0      4
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (6) _I2C_SetCallback                                      4     1      3     914
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (5) _I2C_Open                                             2     2      0     144
                                              2 BANK0      2     2      0
                 _I2C_MasterClearIrq
                _I2C_MasterEnableIrq
                     _I2C_MasterOpen
            _I2C_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (6) _I2C_SetInterruptHandler                              2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterOpen                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterEnableIrq                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterWrite                                      0     0      0      46
                _I2C_MasterOperation
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterOperation                                  2     2      0      46
                                              0 BANK0      2     2      0
                    _I2C_MasterStart
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterStart                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_Close                                            1     1      0      24
                                              0 BANK0      1     1      0
                 _I2C_MasterClearIrq
                    _I2C_MasterClose
               _I2C_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterDisableIrq                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterClose                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterClearIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _INTERRUPT_InterruptManager                           0     0      0   19642
                                NULL *
                      _I2C_MasterIsr *
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (10) _TMR2_ISR                                            0     0      0    1684
                      _TMR2_CallBack
 ---------------------------------------------------------------------------------
 (11) _TMR2_CallBack                                       0     0      0    1684
                                NULL *
       _TMR2_DefaultInterruptHandler *
                       _TMR2_Process *
 ---------------------------------------------------------------------------------
 (12) _TMR2_Process                                        0     0      0    1684
                            _Alm_Adj
                           _Time_Adj
                        i1_Pen_swipe
                       i1_Pen_swipe2
 ---------------------------------------------------------------------------------
 (13) i1_Pen_swipe2                                        3     1      2     144
                                              2 COMMON     3     1      2
                i1_PWM6_DutyCycleSet
               i1_PWM6_LoadBufferSet
 ---------------------------------------------------------------------------------
 (14) i1_PWM6_LoadBufferSet                                0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i1_PWM6_DutyCycleSet                                 2     0      2      70
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (13) i1_Pen_swipe                                         3     1      2     144
                                              2 COMMON     3     1      2
               i1_PWM11_DutyCycleSet
              i1_PWM11_LoadBufferSet
 ---------------------------------------------------------------------------------
 (14) i1_PWM11_LoadBufferSet                               0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i1_PWM11_DutyCycleSet                                2     0      2      70
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (13) _Time_Adj                                            3     1      2     698
                                              4 COMMON     3     1      2
                           i1___bmul
 ---------------------------------------------------------------------------------
 (13) _Alm_Adj                                             3     1      2     698
                                              4 COMMON     3     1      2
                           i1___bmul
 ---------------------------------------------------------------------------------
 (14) i1___bmul                                            4     3      1     372
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (12) _TMR2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C_MasterIsr                                       0     0      0   17958
                      _I2C_MasterFsm
 ---------------------------------------------------------------------------------
 (11) _I2C_MasterFsm                                       2     2      0   17958
                                             12 COMMON     2     2      0
                _I2C_DO_ADDRESS_NACK *
                        _I2C_DO_IDLE *
                        _I2C_DO_RCEN *
                       _I2C_DO_RESET *
                          _I2C_DO_RX *
                      _I2C_DO_RX_ACK *
             _I2C_DO_RX_NACK_RESTART *
                _I2C_DO_RX_NACK_STOP *
               _I2C_DO_SEND_ADR_READ *
              _I2C_DO_SEND_ADR_WRITE *
                _I2C_DO_SEND_RESTART *
           _I2C_DO_SEND_RESTART_READ *
          _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_DO_SEND_STOP *
                          _I2C_DO_TX *
                    _I2C_DO_TX_EMPTY *
                   _I2C_MasterIsNack
               i1_I2C_MasterClearIrq
 ---------------------------------------------------------------------------------
 (12) i1_I2C_MasterClearIrq                                0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _I2C_DO_TX_EMPTY                                     0     0      0    4467
                                NULL *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
                   _I2C_MasterSetIrq
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (13) _I2C_MasterSetIrq                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _I2C_DO_TX                                           4     4      0    4513
                                              8 COMMON     4     4      0
                                NULL *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
           _I2C_DO_SEND_RESTART_READ
          _I2C_DO_SEND_RESTART_WRITE
                   _I2C_DO_SEND_STOP
                   _I2C_MasterIsNack
               _I2C_MasterSendTxData
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (12) _I2C_MasterIsNack                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _I2C_DO_SEND_RESTART_WRITE                           0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (13) _I2C_DO_SEND_RESTART_READ                            0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (12) _I2C_DO_SEND_ADR_WRITE                               0     0      0      22
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (12) _I2C_DO_SEND_ADR_READ                                0     0      0      22
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (13) _I2C_MasterSendTxData                                1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (12) _I2C_DO_RX_ACK                                       0     0      0       0
                  _I2C_MasterSendAck
 ---------------------------------------------------------------------------------
 (12) _I2C_DO_RX                                           1     1      0    4467
                                              8 COMMON     1     1      0
                                NULL *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
             _I2C_DO_RX_NACK_RESTART
                _I2C_DO_RX_NACK_STOP
                _I2C_MasterGetRxData
                  _I2C_MasterSendAck
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (13) _I2C_MasterSendAck                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _I2C_MasterGetRxData                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _I2C_DO_RX_NACK_STOP                                 0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (12) _I2C_DO_RX_NACK_RESTART                              0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (13) _I2C_MasterSendNack                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _I2C_DO_RESET                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _I2C_DO_RCEN                                         0     0      0       0
                  _I2C_MasterStartRx
 ---------------------------------------------------------------------------------
 (13) _I2C_MasterStartRx                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _I2C_DO_IDLE                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _I2C_DO_ADDRESS_NACK                                 0     0      0    4467
                                NULL *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (13) _wr2RegCompleteHandler                               1     0      1     836
                                              7 COMMON     1     0      1
                    i1_I2C_SetBuffer
      i1_I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (13) _wr1RegCompleteHandler                               1     0      1     836
                                              7 COMMON     1     0      1
                    i1_I2C_SetBuffer
      i1_I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (13) _rdBlkRegCompleteHandler                             1     0      1     858
                                              7 COMMON     1     0      1
                    i1_I2C_SetBuffer
      i1_I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (13) _rd2RegCompleteHandler                               1     0      1     836
                                              7 COMMON     1     0      1
                    i1_I2C_SetBuffer
      i1_I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (13) _rd1RegCompleteHandler                               1     0      1     836
                                              7 COMMON     1     0      1
                    i1_I2C_SetBuffer
      i1_I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (14) i1_I2C_SetDataCompleteCallback                       3     0      3     510
                                              4 COMMON     3     0      3
                  i1_I2C_SetCallback
 ---------------------------------------------------------------------------------
 (15) i1_I2C_SetCallback                                   4     1      3     206
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (14) i1_I2C_SetBuffer                                     4     0      4     304
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (13) _I2C_DO_SEND_STOP                                    0     0      0       0
                     _I2C_MasterStop
 ---------------------------------------------------------------------------------
 (14) _I2C_MasterStop                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _I2C_DO_SEND_RESTART                                 0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (14) _I2C_MasterEnableRestart                             0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _I2C_CallbackReturnStop                              1     0      1       0
                                              7 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (13) _I2C_CallbackReturnReset                             1     0      1     265
                                              7 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (12) NULL(Fake)                                           1     0      1       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Alarm_set
     _ALM_set
       _I2C_Write1ByteRegister
         _I2C_Close
           _I2C_MasterClearIrq
           _I2C_MasterClose
           _I2C_MasterDisableIrq
         _I2C_MasterWrite
           _I2C_MasterOperation
             _I2C_MasterStart
         _I2C_Open
           _I2C_MasterClearIrq
           _I2C_MasterEnableIrq
           _I2C_MasterOpen
           _I2C_SetInterruptHandler
         _I2C_SetAddressNackCallback
           _I2C_SetCallback
         _I2C_SetBuffer
         _I2C_SetDataCompleteCallback
           _I2C_SetCallback
     _div
       ___awdiv
       ___awmod
       ___bmul (ARG)
   _Clock_set
     _Time_data_write
       _I2C_Write1ByteRegister
     ___bmul
     _div
   _MoveServo
     _I2C_Write1ByteRegister
     _Pen_swipe
       _PWM11_DutyCycleSet
       _PWM11_LoadBufferSet
     _Pen_swipe2
       _PWM6_DutyCycleSet
       _PWM6_LoadBufferSet
     _font6_posi
       _I2C_WriteNBytes
         _I2C_Close
         _I2C_MasterWrite
         _I2C_Open
         _I2C_SetAddressNackCallback
         _I2C_SetBuffer
     _printf
       ___bmul (ARG)
       ___lwdiv (ARG)
       ___lwmod (ARG)
         ___lwdiv (ARG)
       ___wmul (ARG)
       _isdigit (ARG)
       _putch (ARG)
         _chr12
           _I2C_WriteNBytes
           ___wmul
         _chr6
           _I2C_WriteNBytes
           ___wmul
   _OLED_clr
     _I2C_WriteNBytes
     _OLED_data
       _I2C_Write1ByteRegister
   _OLED_init
     _OLED_cmd
       _I2C_Write1ByteRegister
   _RTC_disp
     _font6_posi
     _printf
   _SYSTEM_Initialize
     _I2C_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM11_Initialize
     _PWM6_Initialize
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
     _WDT_Initialize
   _TMR2_SetInterruptHandler
   _Time_data_read
     _I2C_ReadNBytes
       _I2C_Close
       _I2C_MasterRead
         _I2C_MasterOperation
       _I2C_Open
       _I2C_SetBuffer
     _I2C_WriteNBytes
   _Time_data_write
   ___bmul
   _font6_posi
   _printf

 _INTERRUPT_InterruptManager (ROOT)
   NULL(Fake) *
   _I2C_MasterIsr *
     _I2C_MasterFsm
       _I2C_DO_ADDRESS_NACK *
         NULL(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_SEND_RESTART *
           _I2C_MasterEnableRestart
         _I2C_DO_SEND_STOP *
           _I2C_MasterStop
         _rd1RegCompleteHandler *
           i1_I2C_SetBuffer
           i1_I2C_SetDataCompleteCallback
             i1_I2C_SetCallback
         _rd2RegCompleteHandler *
           i1_I2C_SetBuffer
           i1_I2C_SetDataCompleteCallback
         _rdBlkRegCompleteHandler *
           i1_I2C_SetBuffer
           i1_I2C_SetDataCompleteCallback
         _wr1RegCompleteHandler *
           i1_I2C_SetBuffer
           i1_I2C_SetDataCompleteCallback
         _wr2RegCompleteHandler *
           i1_I2C_SetBuffer
           i1_I2C_SetDataCompleteCallback
       _I2C_DO_IDLE *
       _I2C_DO_RCEN *
         _I2C_MasterStartRx
       _I2C_DO_RESET *
       _I2C_DO_RX *
         NULL(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_RX_NACK_RESTART *
           _I2C_MasterSendNack
         _I2C_DO_RX_NACK_STOP *
           _I2C_MasterSendNack
         _I2C_MasterGetRxData *
         _I2C_MasterSendAck *
         _rd1RegCompleteHandler *
         _rd2RegCompleteHandler *
         _rdBlkRegCompleteHandler *
         _wr1RegCompleteHandler *
         _wr2RegCompleteHandler *
       _I2C_DO_RX_ACK *
         _I2C_MasterSendAck
       _I2C_DO_RX_NACK_RESTART *
       _I2C_DO_RX_NACK_STOP *
       _I2C_DO_SEND_ADR_READ *
         _I2C_MasterSendTxData
       _I2C_DO_SEND_ADR_WRITE *
         _I2C_MasterSendTxData
       _I2C_DO_SEND_RESTART *
       _I2C_DO_SEND_RESTART_READ *
         _I2C_MasterEnableRestart
       _I2C_DO_SEND_RESTART_WRITE *
         _I2C_MasterEnableRestart
       _I2C_DO_SEND_STOP *
       _I2C_DO_TX *
         NULL(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_SEND_RESTART_READ *
         _I2C_DO_SEND_RESTART_WRITE *
         _I2C_DO_SEND_STOP *
         _I2C_MasterIsNack *
         _I2C_MasterSendTxData *
         _rd1RegCompleteHandler *
         _rd2RegCompleteHandler *
         _rdBlkRegCompleteHandler *
         _wr1RegCompleteHandler *
         _wr2RegCompleteHandler *
       _I2C_DO_TX_EMPTY *
         NULL(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_SEND_RESTART *
         _I2C_DO_SEND_STOP *
         _I2C_MasterSetIrq *
         _rd1RegCompleteHandler *
         _rd2RegCompleteHandler *
         _rdBlkRegCompleteHandler *
         _wr1RegCompleteHandler *
         _wr2RegCompleteHandler *
       _I2C_MasterIsNack *
       i1_I2C_MasterClearIrq *
   _TMR2_ISR *
     _TMR2_CallBack
       NULL(Fake) *
       _TMR2_DefaultInterruptHandler *
       _TMR2_Process *
         _Alm_Adj
           i1___bmul
         _Time_Adj
           i1___bmul
         i1_Pen_swipe
           i1_PWM11_DutyCycleSet
           i1_PWM11_LoadBufferSet
         i1_Pen_swipe2
           i1_PWM6_DutyCycleSet
           i1_PWM6_LoadBufferSet

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM_1           3E0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BIGRAM             3F0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITCOMMON            E      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
COMMON               E      E       E       3      100.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
STACK                0      0       0       4        0.0%
BANK0               50     38      3F       5       78.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK0            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      4F       8       98.8%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      4F      10       98.8%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0      46      12       87.5%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
ABS                  0      0     171      13        0.0%
BITBANK4            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK4               50      0      40      15       80.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK5            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK5               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK6            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK6               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITBANK7            50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BANK7               50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITBANK8            50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BANK8               50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITBANK9            50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BANK9               50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITBANK10           50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK10              50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITBANK11           50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
DATA                 0      0     171      30        0.0%
BITBANK12           30      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BANK12              30      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITBANK13           50      0       0      33        0.0%
BANK13              50      0       0      34        0.0%
BITBANK14           50      0       0      35        0.0%
BANK14              50      0       0      36        0.0%
BITBANK15           50      0       0      37        0.0%
BANK15              50      0       0      38        0.0%
BITBANK16           50      0       0      39        0.0%
BANK16              50      0       0      40        0.0%
BITBANK17           50      0       0      41        0.0%
BANK17              50      0       0      42        0.0%
BITBANK18           50      0       0      43        0.0%
BANK18              50      0       0      44        0.0%
BITBANK19           50      0       0      45        0.0%
BANK19               0      0       0      46        0.0%
BITBANK20           50      0       0      47        0.0%
BANK20               0      0       0      48        0.0%
BITBANK21           50      0       0      49        0.0%
BANK21               0      0       0      50        0.0%
BITBANK22           50      0       0      51        0.0%
BANK22               0      0       0      52        0.0%
BITBANK23           50      0       0      53        0.0%
BANK23               0      0       0      54        0.0%
BITBANK24           50      0       0      55        0.0%
BANK24               0      0       0      56        0.0%
BITBANK25           20      0       0      57        0.0%
BANK25               0      0       0      58        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Mon Nov 18 19:56:45 2024

                  ??_I2C_DO_SEND_ADR_READ 0070          __end_of_TMR2_SetInterruptHandler 1377  
                          ___bmul@product 0022                   ??_I2C_DO_SEND_ADR_WRITE 0071  
                                      _AA 005D                                        _BB 005C  
                                      _CC 005B                                        _DD 005A  
                                      l53 17FF                                        l71 1734  
                                      l80 1646                              ___awdiv@sign 0026  
                     ___wmul@multiplicand 0022                     ??_I2C_DO_SEND_RESTART 0070  
                                     l213 150D                                       l216 1340  
                                     l145 156D                                       l322 153C  
                                     l163 135B                                       l219 12DA  
                                     l500 1311                                       l157 12C7  
                                     l510 13AF                                       l530 16B4  
                                     l282 0893                                       l507 1524  
                                     l700 12B8                                       l516 13A3  
                                     l525 1352                                       l480 136D  
                                     l368 1376                                       l652 12BB  
                                     l484 099E                                       l670 12C1  
                                     l494 15C0                                       l488 15A2  
                                     l649 13E1                                       l497 07FF  
                                     l691 12C4                                       l790 12CA  
                                     l952 1763                                       l960 0B2B  
                                     l697 12BE                                       l946 07FA  
                                     l778 0818                                       l955 0BEF  
                                     l963 14A4                                       l796 1364  
                                     l972 138C                                       l980 1623  
                                     l949 1554                                       l966 14B8  
                                     l983 1792                                       l991 0958  
                                     l975 13EE                                       l969 1397  
                                     _DIR 0144                                       l998 07AD  
                                     _PR2 0494                                       _REG 00E1  
                                     _SRV 0148                                       _div 16DD  
                                     _res 00BE                                       _str 26F0  
                            ___awmod@sign 0026                           _TMR2_Initialize 1525  
                                     wreg 0009              __end_ofi1_PWM11_DutyCycleSet 131E  
            ??_I2C_SetAddressNackCallback 0028                    _I2C_Write1ByteRegister 17C8  
                         __end_of_ALM_set 1764                  ??_I2C_CallbackReturnStop 0078  
                            _I2C_DO_RESET 1308                                      l1003 14CC  
                                    l1009 0CE3                                      l1043 0C55  
                                    l1212 01CD                   ??_rd2RegCompleteHandler 0078  
                                    l1207 01A5                                      l1216 020E  
                                    l1241 15EC                                      l1243 1600  
                                    l1084 0FC1                                      l1237 02E4  
                                    l1407 0A81                                      l1175 00A9  
                                    l1513 0855                                      l1267 14F7  
                                    l1523 17C7                                      l1187 017C  
                                    l1188 00F7                                      l4111 135C  
                                    l4113 1360                                      l1394 0B8B  
                                    l4115 14BB                                      l5011 0E54  
                                    l4109 12C8                                      l4301 148D  
                                    l4117 14C1                                      l5101 0F55  
                                    l5021 0E67                                      l5013 0E5F  
                                    l4311 0B32                                      l4303 148F  
                                    l4119 14C7                                      l5111 0FAA  
                                    l5103 0F5D                                      l5031 0E76  
                                    l5023 0E6A                                      l5015 0E60  
                                    ?_div 0029                                      l3601 0997  
                                    l4321 0B46                                      l4313 0B37  
                                    l4401 0832                                      l5121 0FBE  
                                    l5113 0FB0                                      l5105 0F8E  
                                    l5041 0E7F                                      l5033 0E77  
                                    l5025 0E6D                                      l5017 0E61  
                                    l3523 12BF                                      l3531 13DA  
                                    l3603 099C                                      l3611 1523  
                                    l4331 0B5A                                      l4323 0B48  
                                    l4315 0B39                                      l4307 0B2C  
                                    l4403 0841                                      l4411 0851  
                                    l5115 0FB3                                      l5107 0F94  
                                    l5123 0FC1                                      l5051 0E8D  
                                    l5043 0E80                                      l5035 0E7A  
                                    l5027 0E70                                      l5019 0E64  
                                    l1692 1706                                      l3621 1590  
                                    l3541 12C2                                      l3533 13DB  
                                    l3525 134A                                      l3613 1398  
                                    l4341 0B77                                      l4333 0B5E  
                                    l4325 0B4E                                      l4317 0B3D  
                                    l4309 0B2E                                      l4405 0845  
                                    l4421 17A2                                      l4501 086D  
                                    l5125 0FC7                                      l5117 0FB6  
                                    l5109 0F9C                                      l5061 0EA9  
                                    l5053 0E95                                      l5045 0E81  
                                    l5037 0E7C                                      l5029 0E73  
                                    l3527 12B6                                      l3543 12BC  
                                    l3631 159C                                      l3623 1591  
                                    l3551 15AD                                      l3615 130D  
                                    l3535 13DD                                      l3607 150E  
                                    l4335 0B6D                                      l4327 0B51  
                                    l4343 0B7D                                      l4319 0B42  
                                    l4351 0A2E                                      l4407 0846  
                                    l4431 17BD                                      l4423 17A6  
                                    l4415 1793                                      l4511 0874  
                                    l4503 086E                                      l5127 0FCD  
                                    l5119 0FBB                                      l5071 0EC3  
                                    l5063 0EAE                                      l5055 0E9A  
                                    l5047 0E84                                      l5039 0E7E  
                                    l3545 12B9                                      l3625 1593  
                                    l3633 15A0                                      l3553 15AF  
                                    l3561 15BE                                      l3537 13E0  
                                    l3529 13D5                                      l3609 1513  
                                    l4345 0B82                                      l4337 0B71  
                                    l4329 0B56                                      l4361 0A3F  
                                    l4353 0A30                                      l4601 1768  
                                    l4409 084B                                      l4425 17AA  
                                    l4417 179A                                      l4433 17C3  
                                    l1697 1490                                      l4513 1339  
                                    l4505 086F                                      l4521 0800  
                                    l4441 1626                                      l5081 0EDA  
                                    l5073 0EC5                                      l5065 0EB0  
                                    l5057 0E9C                                      l5049 0E87  
                                    l3627 1596                                      l3619 1588  
                                    l3555 15B4                                      l3547 15A5  
                                    l3571 095B                                      l4347 0B87  
                                    l4339 0B72                                      l4371 0A56  
                                    l4363 0A44                                      l4355 0A34  
                                    l3651 1729                                      l3643 1709  
                                    l4611 1781                                      l4603 176B  
                                    l4427 17B4                                      l4419 179D  
                                    l3811 091A                                      l4515 133E  
                                    l4507 0871                                      l4451 155A  
                                    l4531 0808                                      l4523 0803  
                                    l4443 1630                                      l5091 0F09  
                                    l5083 0EE0                                      l5075 0ECB  
                                    l5067 0EB6                                      l5059 0EA1  
                                    l3629 1599                                      l3557 15B8  
                                    l3549 15AC                                      l3581 096F  
                                    l3573 0962                                      l3565 1692  
                                    l3709 13A4                                      l4373 0A5A  
                                    l4365 0A4A                                      l4381 0A73  
                                    l4357 0A39                                      l3653 172C  
                                    l3645 1709                                      l4613 1785  
                                    l4605 176E                                      l4429 17B8  
                                    l3661 15E1                                      l3821 0946  
                                    l4621 00A5                                      l4517 133F  
                                    l4509 0873                                      l4461 1560  
                                    l4453 155B                                      l4541 0811  
                                    l4533 0809                                      l4525 0805  
                                    l4445 163E                                      l5093 0F0F  
                                    l5085 0EE8                                      l5077 0ED3  
                                    l5069 0EBE                                      l3559 15BB  
                                    l3591 0983                                      l3583 0974  
                                    l3575 0966                                      l3567 1698  
                                    l4383 0A78                                      l4375 0A64  
                                    l4367 0A4D                                      l4359 0A3B  
                                    l3647 1713                                      l4607 1773  
                                    l4391 081C                                      l4295 1480  
                                    l3671 15FC                                      l3663 15E4  
                                    l3831 06F9                                      l3823 094C  
                                    l4703 01CF                                      l4711 01F5  
                                    l4631 00C3                                      l4623 00AA  
                                    l4615 0096                                      l4471 156A  
                                    l4463 1562                                      l4455 155C  
                                    l4447 1555                                      l4543 0814  
                                    l4535 080B                                      l4527 0806  
                                    l4551 1529                                      l4519 12D7  
                                    l4439 1626                                      l5095 0F17  
                                    l5087 0EFF                                      l5079 0ED8  
                                    l3593 0984                                      l3585 0975  
                                    l3577 0967                                      l3569 16A7  
                                    l4385 0A7D                                      l4377 0A68  
                                    l4369 0A52                                      l3649 171F  
                                    l4609 1778                                      l4393 0822  
                                    l4297 1481                                      l3665 15E8  
                                    l3841 0712                                      l3833 06FD  
                                    l3825 06E6                                      l3817 091B  
                                    l3809 0917                                      l4721 0222  
                                    l4713 01FE                                      l4641 00F9  
                                    l4633 00C6                                      l4617 009A  
                                    l4473 1365                                      l4481 0856  
                                    l4465 1564                                      l4457 155D  
                                    l4449 1558                                      l4545 0815  
                                    l4537 080D                                      l4529 0807  
                                    l4561 1539                                      l4553 152C  
                                    l5097 0F48                                      l5089 0F02  
                                    l3595 0989                                      l3587 097A  
                                    l3579 0968                                      l4379 0A6D  
                                    l4811 0B1B                                      l4395 0825  
                                    l4299 1487                                      l3667 15F1  
                                    l3851 073F                                      l3835 0701  
                                    l3827 06EC                                      l3819 0942  
                                    l4731 023A                                      l4723 0225  
                                    l4715 0204                                      l4707 01EA  
                                    l4651 0111                                      l4643 0100  
                                    l4635 00D7                                      l4627 00AE  
                                    l4619 00A0                                      l4475 1367  
                                    l4491 0863                                      l4483 085A  
                                    l4467 1566                                      l4459 155E  
                                    l4539 080F                                      l4555 152D  
                                    l4547 1525                                      l5099 0F4F  
                                    l3597 0991                                      l3589 097E  
                                    l4581 16DD                                      l4813 0B28  
                                    l4805 0ADA                                      l4397 082A  
                                    l4389 0819                                      l3669 15F6  
                                    l3861 0765                                      l3853 0745  
                                    l3837 0703                                      l3829 06F0  
                                    l4741 025F                                      l4733 023E  
                                    l4725 0229                                      l4717 020A  
                                    l4661 0132                                      l4653 0115  
                                    l4645 0104                                      l4637 00E6  
                                    l4629 00B7                                      l4477 1369  
                                    l4493 0866                                      l4485 085D  
                                    l4469 1569                                      l4557 152F  
                                    l4549 1528                                      l3599 0994  
                                    l3951 17D4                                      l4583 16FE  
                                    l4807 0B04                                      l4591 14A5  
                                    l4399 082E                                      l3871 0793  
                                    l3855 0751                                      l3847 0714  
                                    l3839 0705                                      l4751 02B0  
                                    l4743 0265                                      l4727 022F  
                                    l4735 024A                                      l4719 0219  
                                    l4663 0136                                      l4655 0120  
                                    l4647 010A                                      l4639 00EA  
                                    l4815 13E2                                      l4831 0C56  
                                    l4479 136C                                      l4495 0868  
                                    l4487 085F                                      l4559 1531  
                                    l3953 17DE                                      l4577 07AE  
                                    l4809 0B16                                      l4593 14AD  
                                    l3873 0799                                      l3857 0755  
                                    l3849 073B                                      l4737 0250  
                                    l4745 0269                                      l4729 0233  
                                    l4681 018F                                      l4665 0144  
                                    l4657 012A                                      l4649 010E  
                                    l4673 015E                                      l4761 02D1  
                                    l4825 1611                                      l4817 1601  
                                    l4841 0C97                                      l4833 0C5C  
                                    l4497 086A                                      l4489 0861  
                                    l3955 17EA                                      l3947 17CA  
                                    l4579 1737                                      l4771 14EF  
                                    l4763 14E4                                      l3963 12C5  
                                    l4587 1491                                      l3875 07A5  
                                    l3867 0768                                      l3859 0758  
                                    l4755 02BA                                      l4747 026D  
                                    l4739 0254                                      l4683 0193  
                                    l4675 0180                                      l4667 014C  
                                    l4659 012F                                      l4851 0C07  
                                    l4827 1615                                      l4819 160E  
                                    l4595 138F                                      l4843 0CAA  
                                    l4835 0C64                                      l4499 086C  
                                    l3957 17F7                                      l3949 17CA  
                                    l4773 14F6                                      l4765 14E5  
                                    l3965 1353                                      l4589 1499  
                                    l3877 07A9                                      l3869 078F  
                                    l4749 0295                                      l4757 02C3  
                                    l4693 01A7                                      l4677 0187  
                                    l4685 0199                                      l4669 0151  
                                    l4861 0C1D                                      l4853 0C09  
                                    l4845 0BF0                                      l4597 1384  
                                    l4829 161A                                      l4837 0C75  
                                    l4791 0BAC                                      l4767 14E9  
                                    l3967 1357                                      l4599 1766  
                                    l4759 02C7                                      l4687 01A0  
                                    l4679 018B                                      l4871 0C35  
                                    l4863 0C22                                      l4855 0C0F  
                                    l4847 0BF6                                      l4839 0C86  
                                    l3959 07FB                                      l4793 0BB8  
                                    l4769 14ED                                      l4697 01C2  
                                    l4881 0C4D                                      l4873 0C3A  
                                    l4865 0C27                                      l4857 0C14  
                                    l4849 0BFE                                      l3969 136E  
                                    l4777 14F8                                      l4785 153D  
                                    l4795 0BE4                                      l4787 1549  
                                    l4797 0BEC                                      l4789 0B8C  
                                    l4877 0C43                                      l4869 0C30  
                                    l4799 0AD7                                      l4879 0C48  
                                    STR_1 18DD                                      STR_2 18D9  
                                    STR_3 18CD                                      STR_4 18C9  
                                    STR_5 18E9                                      STR_6 18D1  
                                    STR_7 18E5                                      STR_8 18E1  
                                    STR_9 18D5                                      u2200 1590  
                                    u2201 158F                                      u2140 13DA  
                                    u2220 1713                                      u2141 13D9  
                                    u2221 1712                                      _LATA 010C  
                                    u2150 15AC                                      u2230 1734  
                                    u2310 094C                                      _LATB 010D  
                                    u2151 15AB                                      u2231 1733  
                                    u2311 094B                                      _LATC 010E  
                                    u2160 15B4                                      u3200 0B4E  
                                    u2240 15E8                                      u2161 15B3  
                                    u3201 0B4D                                      u2241 15E7  
                                    u2170 1698                                      u2330 0745  
                                    u2171 1697                                      u2331 0744  
                                    u2180 0962                                      u3220 0B5E  
                                    u3300 0A4A                                      u2340 0799  
                                    u2181 0961                                      u3221 0B5D  
                                    u3301 0A49                                      u2341 0798  
                                    u2325 06F4                                      u2190 1513  
                                    u2430 17D4                                      u2270 15FC  
                                    u2191 1512                                      u2431 17D3  
                                    u3215 0B52                                      u2271 15FB  
                                    u2255 15ED                                      u2440 17FF  
                                    u3240 0B6D                                      u3320 0A5A  
                                    u3160 1487                                      u4200 0EFF  
                                    u2441 17FE                                      u3241 0B6C  
                                    u3321 0A59                                      u3161 1486  
                                    u2265 15F2                                      u4201 0EFE  
                                    u3330 0A64                                      u3410 0841  
                                    u3170 148D                                      u4210 0F09  
                                    _T2PR 0494                                      u3235 0B5F  
                                    u3331 0A63                                      u3315 0A4E  
                                    u3411 0840                                      u3171 148C  
                                    u4211 0F08                                      u3260 0B7D  
                                    u3180 0B32                                      u3500 1630  
                                    u4140 0E9A                                      u3261 0B7C  
                                    u3245 0B69                                      u3181 0B31  
                                    u3405 0833                                      u3501 162F  
                                    u4141 0E99                                      u3270 0B82  
                                    u3190 0B3D                                      u3350 0A73  
                                    u3430 0851                                      u3510 1646  
                                    u4230 0F4F                                      u4150 0EAE  
                                    u3271 0B81                                      u3255 0B73  
                                    u3191 0B3C                                      u3351 0A72  
                                    u3335 0A60                                      u3431 0850  
                                    u3415 083D                                      u3511 1645  
                                    u4231 0F4E                                      u4151 0EAD  
                                    u3360 0A78                                      u3280 0A34  
                                    u3440 179A                                      u2480 14C1  
                                    u3600 0120                                      u4160 0EC3  
                                    u3361 0A77                                      u3345 0A69  
                                    u3281 0A33                                      u3425 0847  
                                    u3441 1799                                      u2481 14C0  
                                    u3601 011F                                      u4225 0F29  
                                    u4161 0EC2                                      u3290 0A3F  
                                    u3370 0822                                      u3610 012A  
                                    u4250 0FB0                                      u4170 0ED8  
                                    u3291 0A3E                                      u3371 0821  
                                    u3611 0129                                      u4251 0FAF  
                                    u4171 0ED7                                      u3460 17AA  
                                    u3700 0204                                      u3620 0143  
                                    u4260 0FBB                                      u4180 0EEE  
                                    u3461 17A9                                      u3701 0203  
                                    u3621 0142                                      u4261 0FBA  
                                    u4245 0F6F                                      u4181 0EEC  
                                    u3390 0832                                      u3470 17B4  
                                    u3710 020A                                      u3630 015D  
                                    u4270 0FC7                                      u4190 0EF7  
                                    u4182 0EEF                                      u3391 0831  
                                    u3471 17B3                                      u3455 179E  
                                    u3711 0209                                      u3631 015C  
                                    u3615 0126                                      u4271 0FC6  
                                    u4191 0EF5                                      u3800 02D1  
                                    u3720 0219                                      u3640 0180  
                                    u3560 00A0                                      u4192 0EF8  
                                    u3385 0826                                      u3801 02D0  
                                    u3721 0218                                      u3641 017F  
                                    u3561 009F                                      u3490 17C3  
                                    u3810 02E4                                      u3730 0229  
                                    u3650 018F                                      u3570 00C3  
                                    u3555 177C                                      u3491 17C2  
                                    u3475 17B0                                      u3811 02E3  
                                    u3731 0228                                      u3651 018E  
                                    u3571 00C2                                      u3820 14E9  
                                    u3740 022F                                      u3660 01C1  
                                    u3580 00F6                                      u3900 0C14  
                                    u3821 14E8                                      u3485 17B9  
                                    u3741 022E                                      u3725 0215  
                                    u3661 01C0                                      u3581 00F5  
                                    u3901 0C13                                      u3830 14F6  
                                    u3750 023A                                      u3670 01CC  
                                    u3590 010A                                      u3910 0C22  
                                    u3831 14F5                                      u4287 14B4  
                                    u3751 0239                                      u3671 01CB  
                                    u3591 0109                                      u3911 0C21  
                                    u3760 0249                                      u3680 01E9  
                                    u3920 0C27                                      u4297 14A0  
                                    u3761 0248                                      u3681 01E8  
                                    u3665 01BD                                      u3921 0C26  
                                    u3770 0250                                      u3690 01F4  
                                    u3930 0C35                                      u3771 024F  
                                    u3691 01F3                                      u3931 0C34  
                                    u3780 025F                                      u3940 0C3A  
                                    u3845 0BB0                                      u3781 025E  
                                    u3685 01E5                                      u3941 0C39  
                                    u3870 0B28                                      u3790 0265  
                                    u3950 0C48                                      u3855 0BDC  
                                    u3871 0B27                                      u3791 0264  
                                    u3951 0C47                                      u3960 0C4D  
                                    u3880 1623                                      u3865 0B0E  
                                    u3961 0C4C                                      u3881 1622  
                                    u3890 0C0F                                      u3875 0B24  
                                    u3891 0C0E                                      i1l92 1431  
                                    i1l95 1444                                      i1l98 1457  
                                    _TMR2 0493                                      _WPUA 020C  
                                    _WPUB 020D                                      _WPUC 020E  
                                    _WPUE 0210                   ??_wr2RegCompleteHandler 0078  
                                    _Page 005E                                      _Duty 00D0  
                                    _Size 00DD                                      _chr6 0915  
                                    _main 0E54                                      _kind 0058  
                ?_I2C_CallbackReturnReset 0077                                      _tadj 00C4  
                                    _str2 25F0                                      _week 01C8  
                                    _wait 00C6                                      fsr0h 0005  
                                    fsr1h 0007                                      indf0 0000  
                                    fsr0l 0004                                      indf1 0001  
                                    fsr1l 0006                          __end_of_I2C_Open 099F  
                                    _unit 0220                                      btemp 007E  
                         __end_of_Alm_Adj 0D9B                                      start 0036  
                 _I2C_SetInterruptHandler 134A                               _swipe_count 00C8  
                       ___bmul@multiplier 0023                                     ??_div 002D  
                        ?_I2C_MasterClose 0070                           _I2C_WriteNBytes 1707  
                        ?_I2C_MasterStart 0070                             _I2C_DO_RX_ACK 12F9  
                        ?_I2C_MasterWrite 0070             __end_of_OSCILLATOR_Initialize 1341  
         ??i1_I2C_SetDataCompleteCallback 0077                                     ?_chr6 0070  
                                   ?_main 0070                           __end_of___awdiv 0B8C  
                                   STR_10 18FC                                     STR_11 18FE  
                                   STR_20 18B1                                     STR_12 18B1  
                                   STR_21 18B1                                     STR_22 18BC  
                                   STR_14 18BC                                     STR_30 1841  
                                   STR_15 18ED                                     STR_23 188C  
                                   STR_31 187C                                     STR_32 1841  
                                   STR_16 18C5                                     STR_24 1180  
                                   STR_33 11AD                                     STR_17 18C5  
                                   STR_25 18F0                                     STR_34 11AD  
                                   STR_26 18F3                                     STR_18 18C1  
                                   STR_27 18F6                                     STR_19 18B7  
                                   STR_35 1800                                     STR_28 18F9  
                                   STR_36 18AA                           __end_of___awmod 0A82  
                                   STR_29 186C                                     STR_37 185B  
                                   _ALM_H 00D7                                     _ALM_M 00D8  
                         ___awdiv@divisor 0020                                     _T2CON 0495  
                                   _T2HLT 0496                           __end_of___lwdiv 0856  
                                   i1l101 141E                                     i1l104 1587  
                                   _T2TMR 0493                                     _T2RST 0498  
                                   i1l163 131D                                     i1l157 12B2  
                                   i1l510 1381                          __end_of_OLED_cmd 1398  
                                   i1l601 12E9                                     i1l361 1329  
                         __end_of___lwmod 17C8                                     i1l530 166A  
                                   i1l610 12F8                                     i1l507 140B  
                                   i1l371 129B                                     i1l540 12E4  
                                   i1l604 12EE                                     i1l700 12AF  
                                   i1l613 12FD                                     i1l533 12D6  
                                   i1l365 13D4                                     i1l622 130C  
                                   i1l703 12AC                                     i1l543 1349  
                                   i1l607 12F3                                     i1l552 0AD6  
                                   i1l616 1302                                     i1l537 16DC  
                                   i1l546 1338                                     i1l562 0AD5  
                                   i1l730 001B                                     i1l619 1307  
                                   i1l731 0034                                     i1l636 129D  
                                   i1l628 15E0                                     i1l732 0026  
                        __end_of_OLED_clr 1624                                     i1l661 12A0  
                                   i1l549 0AB0                                     i1l565 08F6  
                                   i1l566 0914                                     i1l639 0003  
                                   i1l655 12A9                                     i1l583 168F  
                                   i1l673 12A3                                     i1l577 1330  
                                   i1l737 0034                                     i1l682 12CE  
                                   i1l658 12DF                                     i1l667 12A6  
                                   i1l676 1317                                     i1l790 12B5  
                                   i1l679 12D2                                     i1l963 146A  
                                   i1l796 1323                                     i1l966 147D  
                         ___awdiv@counter 0025                         ??_I2C_DO_TX_EMPTY 0078  
                                   _TRISA 008C                                     _TRISB 008D  
                                   _TRISC 008E                                     _TRISE 0090  
                         _PWM6_Initialize 0800                                     _Duty2 00CC  
                       __end_of_I2C_DO_RX 0915                         __end_of_I2C_DO_TX 0AD7  
                        __end_of_TMR2_ISR 132A                                     _chr12 06E4  
                                   chr6@c 0033                                     chr6@i 0034  
                         __end_of_dpowers 18A2                                     _font6 02E5  
                          _WDT_Initialize 12D7                                     _count 016B  
                              _Font6_data 0162                         __end_of_I2C_Close 15A3  
                         __end_of_isdigit 1491                                     div@rv 002D  
          I2C_MasterOperation@returnValue 0021                                     _unit2 01D6  
                                   _putch 14B9                   _I2C_MasterEnableRestart 129E  
                        __end_ofi1___bmul 14E2                       i1Pen_swipe@set_duty 0072  
                        __end_of_RTC_disp 0CE4                                     pclath 000A  
                        ?_I2C_SetCallback 0020              I2C_SetAddressNackCallback@cb 0024  
                                   status 0003                                     wtemp0 007E  
                       ?_I2C_DO_SEND_STOP 0070                         ??i1_I2C_SetBuffer 0074  
                      ??_I2C_DO_SEND_STOP 0070                           __initialization 0038  
                            __end_of_chr6 0959                              __end_of_main 1000  
               ?_I2C_DO_SEND_RESTART_READ 0070                            ?_I2C_DO_RX_ACK 0070  
                 __end_of_TMR2_Initialize 153D               ?_INTERRUPT_InterruptManager 0070  
                          _I2C_DO_TX$1209 007A                                    ??_chr6 002D  
                _TMR2_SetInterruptHandler 136E                                    ??_main 0054  
            __end_ofi1_I2C_MasterClearIrq 12B0                         ?_I2C_MasterIsNack 0070  
                               ??_ALM_set 002C                          __end_of_Time_Adj 0E54  
                       ?_I2C_MasterSetIrq 0070                        ??_I2C_MasterIsNack 0070  
                    i1I2C_SetCallback@idx 0073                      i1I2C_SetCallback@ptr 0072  
                  __end_of_WDT_Initialize 12DB                                _Pen_swipe2 14A5  
            __end_ofi1_PWM6_LoadBufferSet 12B6                        ??_I2C_MasterSetIrq 0070  
                                  ?_chr12 0070               __end_ofi1_PWM6_DutyCycleSet 1324  
         __end_of_I2C_CallbackReturnReset 0004                          ___awdiv@dividend 0022  
           I2C_SetDataCompleteCallback@cb 0024                                    _ANSELA 018C  
                                  ?_putch 0070                                    _ANSELB 018D  
                                  _ANSELC 018E                                    _BORCON 009D  
                      Pen_swipe2@set_duty 0022                                    _RC0PPS 0EA0  
              __end_of_PWM11_DutyCycleSet 135C                                    _RA5PPS 0E95  
                               ??_Alm_Adj 0076                                    _RC3PPS 0EA3  
                                  i1l1024 0E53                                    _RC4PPS 0EA4  
                                  i1l1070 06E3                                    i1l1039 0D9A  
                                  _ODCONA 028C                                    _ODCONB 028D  
                                  i1l4003 0A8F                                    i1l1267 14E1  
                                  _ODCONC 028E                                    i1l4021 0AD1  
                                  i1l4013 0A97                                    i1l4101 15CA  
                                  i1l4015 0AB2                                    i1l4007 0A93  
                                  i1l4031 08F1                                    i1l4017 0AC1  
                                  i1l4033 08F4                                    i1l4025 08D4  
                                  i1l4201 05E9                                    i1l4121 0507  
                                  i1l4019 0ACC                                    i1l4043 08FC  
                                  i1l4027 08E2                                    i1l4051 132A  
                                  i1l4107 15CE                                    i1l4211 0605  
                                  i1l4203 05EE                                    i1l4131 0523  
                                  i1l4123 050C                                    i1l4061 166E  
                                  i1l4029 08E7                                    i1l4053 132C  
                                  i1l4221 0621                                    i1l4213 060A  
                                  i1l4205 05F3                                    i1l4141 053F  
                                  i1l4133 0528                                    i1l4125 0513  
                                  i1l4071 1677                                    i1l4039 08F8  
                                  i1l4055 132F                                    i1l4231 063D  
                                  i1l4223 0626                                    i1l4215 060F  
                                  i1l4207 05F8                                    i1l4151 055B  
                                  i1l4143 0544                                    i1l4127 0519  
                                  i1l4135 052F                                    i1l4065 1672  
                                  i1l4049 0900                                    i1l4081 12FC  
                                  i1l4233 0642                                    i1l4225 062B  
                                  i1l4217 0614                                    i1l4209 05FF  
                                  i1l4241 0652                                    i1l4161 0577  
                                  i1l4153 0560                                    i1l4137 0535  
                                  i1l4145 054B                                    i1l4129 051E  
                                  i1l4067 1675                                    i1l4059 166B  
                                  i1l4251 066E                                    i1l4243 0659  
                                  i1l4235 0647                                    i1l4227 0630  
                                  i1l4219 061B                                    i1l4171 0593  
                                  i1l4163 057C                                    i1l4147 0551  
                                  i1l4155 0567                                    i1l4139 053A  
                                  i1l4077 167B                                    i1l4085 1308  
                                  i1l4093 15C1                                    i1l3701 14D7  
                                  i1l4261 068A                                    i1l4245 065F  
                                  i1l4253 0675                                    i1l4237 064C  
                                  i1l4229 0637                                    i1l4181 05B1  
                                  i1l4173 0598                                    i1l4157 056D  
                                  i1l4165 0583                                    i1l4149 0556  
                                  i1l3711 141F                                    i1l4079 12F9  
                                  i1l4087 130A                                    i1l4095 15C3  
                                  i1l3703 14D9                                    i1l4271 06A6  
                                  i1l4255 067B                                    i1l4263 0691  
                                  i1l4247 0664                                    i1l4239 064F  
                                  i1l4191 05CD                                    i1l4183 05B6  
                                  i1l4167 0589                                    i1l4175 05A1  
                                  i1l4159 0572                                    i1l3641 165D  
                                  i1l3713 1429                                    i1l3721 143C  
                                  i1l3801 129C                                    i1l4089 130B  
                                  i1l4097 15C6                                    i1l3705 14E0  
                                  i1l4281 06C2                                    i1l4265 0697  
                                  i1l4273 06AD                                    i1l4257 0680  
                                  i1l4249 0669                                    i1l4193 05D2  
                                  i1l4185 05BF                                    i1l4177 05A7  
                                  i1l4169 058E                                    i1l3715 1430  
                                  i1l3723 1443                                    i1l3731 1456  
                                  i1l5171 0D8C                                    i1l4291 06DE  
                                  i1l4275 06B3                                    i1l4283 06C9  
                                  i1l4267 069C                                    i1l4259 0685  
                                  i1l4195 05D7                                    i1l4179 05AC  
                                  i1l4187 05C1                                    i1l3637 1648  
                                  i1l3805 0002                                    i1l4437 12AD  
                                  i1l4293 06E1                                    i1l4285 06CF  
                                  i1l4277 06B8                                    i1l4269 06A1  
                                  i1l4197 05DC                                    i1l4189 05C7  
                                  i1l3655 129E                                    i1l3639 164E  
                                  i1l3735 140C                                    i1l3719 1432  
                                  i1l3727 1445                                    i1l3743 156E  
                                  i1l3911 0CE5                                    i1l3903 0E40  
                                  i1l4287 06D4                                    i1l4279 06BD  
                                  i1l4199 05E3                                    u300_20 067B  
                                  i1l3657 12A1                                    i1l3681 13FD  
                                  i1l3737 1416                                    i1l3729 144F  
                                  i1l3745 1586                                    i1l3753 12DC  
                                  i1l3761 12EA                                    i1l3921 0D17  
                                  i1l3913 0CF3                                    i1l5169 0E45  
                                  i1l4289 06D9                                    u300_21 067A  
                                  i1l3683 1402                                    i1l3739 141D  
                                  i1l3659 12CB                                    i1l3755 12E5  
                                  i1l3763 12ED                                    i1l4571 16BD  
                                  i1l3923 0D1B                                    i1l3915 0CFB  
                                  i1l3675 12B0                                    i1l3691 131E  
                                  i1l4563 13C8                                    i1l3685 140A  
                                  i1l3773 12A7                                    i1l3749 1312  
                                  i1l3757 12E8                                    i1l3781 1306  
                                  i1l4573 16C5                                    i1l3925 0D37  
                                  i1l3917 0D01                                    i1l3933 0D87  
                                  i1l3909 0CE4                                    i1l3677 1318  
                                  i1l3941 145F                                    i1l3693 1321  
                                  i1l4565 13CF                                    i1l3687 1377  
                                  i1l3791 12A4                                    i1l3767 12F4  
                                  i1l4575 16C8                                    i1l4567 16B5  
                                  i1l3695 14CE                                    i1l3927 0D51  
                                  i1l3919 0D0F                                    i1l3679 131B  
                                  i1l3943 146B                                    u221_20 164E  
                                  u301_20 0680                                    u221_21 164D  
                                  i1l3777 12CF                                    i1l3793 12EF  
                                  i1l3769 12F7                                    i1l3785 12FE  
                                  i1l4569 16B8                                    i1l3697 14CF  
                                  i1l3929 0D6D                                    i1l3881 0D9C  
                                  i1l3689 12B3                                    i1l3945 1472  
                                  u301_21 067F                                    i1l3971 12E0  
                                  i1l3795 12F2                                    i1l3787 1301  
                                  i1l3779 1303                                    i1l3699 14D3  
                                  i1l3891 0DCE                                    i1l3883 0DAA  
                                  i1l3939 1458                                    i1l3973 12E2  
                                  i1l3981 1343                                    i1l3893 0DD4  
                                  i1l3885 0DB2                                    i1l4781 1326  
                                  i1l3799 12AA                                    i1l3975 12E3  
                                  i1l3983 1348                                    i1l3991 1337  
                                  i1l4783 12D3                                    i1l3895 0DF0  
                                  i1l3887 0DB8                                    i1l3879 0D9B  
                                  u230_20 14E0                                    u310_20 06BD  
                                  u302_20 0685                                    u230_21 14DF  
                                  i1l3897 0E0A                                    i1l3889 0DC6  
                                  u310_21 06BC                                    u302_21 0684  
                                  i1l3979 1341                                    i1l3987 1331  
                                  i1l3995 0A82                                    i1l3899 0E26  
                                  i1l4779 1324                                    i1l3989 1333  
                                  i1l4981 0020                                    i1l4973 0006  
                                  i1l3999 0A8B                                    i1l4975 000A  
                                  u311_20 06C2                                    u303_20 068A  
                                  u311_21 06C1                                    u303_21 0689  
                                  i1l4985 002B                                    i1l4977 000F  
                       __end_of_OLED_data 138D                                    i1l4987 0030  
                                  i1l4979 0014                                    u240_20 0D0F  
                                  u312_20 06CF                                    u304_20 0697  
                                  u240_21 0D0E                                    u312_21 06CE  
                                  u304_21 0696                                    _INLVLA 038C  
                                  _INLVLB 038D                                    _INLVLC 038E  
                                  u240_25 0D0B                                    u241_20 0D37  
                                  u313_20 06D4                                    u305_20 069C  
                                  u241_21 0D36                                    u313_21 06D3  
                                  u305_21 069B                                    u242_20 0D6D  
                                  u314_20 06D9                                    u306_20 06A1  
                                  u250_20 0519                                    u410_20 0025  
                                  u242_21 0D6C                                    u314_21 06D8  
                                  u306_21 06A0                                    u250_21 0518  
                                  u410_21 0024                                    u235_20 0DAA  
                                  u315_20 06DE                                    u307_20 06A6  
                                  u251_20 051E                                    u411_20 002B  
                                  u235_21 0DA9                                    u315_21 06DD  
                                  u307_21 06A5                                    u251_21 051D  
                                  u411_21 002A                                    u235_25 0DA6  
                                  u228_20 1402                                    u236_20 0DC6  
                                  u308_20 06B3                                    u260_20 055B  
                                  u252_20 0523                                    u412_20 0030  
                                  u228_21 1401                                    u236_21 0DC5  
                                  u308_21 06B2                                    u260_21 055A  
                                  u252_21 0522                                    u412_21 002F  
                                  u236_25 0DC2                                    u245_20 0A8A  
                                  u229_20 14D3                                    u237_20 0DF0  
                                  u309_20 06B8                                    u261_20 0560  
                                  u253_20 0528                                    u245_21 0A89  
                                  u229_21 14D2                                    u237_21 0DEF  
                                  u309_21 06B7                                    u261_21 055F  
                                  u253_21 0527                                    u246_20 0ACC  
                                  u238_20 0E26                                    u270_20 05A7  
                                  u262_20 056D                                    u254_20 0535  
                                  u406_20 000A                                    u246_21 0ACB  
                                  u238_21 0E25                                    u270_21 05A6  
                                  u262_21 056C                                    u254_21 0534  
                                  u406_21 0009                                    u430_27 1478  
                                  u247_20 08F1                                    u239_20 0CF3  
                                  u271_20 05AC                                    u263_20 0572  
                                  u255_20 053A                                    u407_20 000F  
                                  u247_21 08F0                                    u239_21 0CF2  
                                  u271_21 05AB                                    u263_21 0571  
                                  u255_21 0539                                    u407_21 000E  
                                  u239_25 0CEF                                    u431_27 1465  
                             _Font12_data 014C                                    u280_20 05EE  
                                  u272_20 05B1                                    u264_20 0577  
                                  u256_20 053F                                    u352_20 13CF  
                                  u408_20 0014                                    u280_21 05ED  
                                  u272_21 05B0                                    u264_21 0576  
                                  u256_21 053E                                    u352_21 13CE  
                                  u408_21 0013                                    u353_20 16BD  
                                  u281_20 05F3                                    u273_20 05B6  
                                  u265_20 057C                                    u257_20 0544  
                                  u249_20 0513                                    u409_20 0020  
                                  u353_21 16BC                                    u281_21 05F2  
                                  u273_21 05B5                                    u265_21 057B  
                                  u257_21 0543                                    u249_21 0512  
                                  u409_21 001F                                    u354_20 16C5  
                                  u290_20 0630                                    u282_20 05F8  
                                  u274_20 05C7                                    u266_20 0589  
                                  u258_20 0551                                    u354_21 16C4  
                                  u290_21 062F                                    u282_21 05F7  
                                  u274_21 05C6                                    u266_21 0588  
                                  u258_21 0550                         __end_of_OLED_init 13EF  
                                  u291_20 063D                                    u283_20 0605  
                                  u275_20 05CD                                    u267_20 058E  
                                  u259_20 0556                                    u291_21 063C  
                                  u283_21 0604                                    u275_21 05CC  
                                  u267_21 058D                                    u259_21 0555  
                                  u292_20 0642                                    u284_20 060A  
                                  u276_20 05D2                                    u268_20 0593  
                                  u292_21 0641                                    u284_21 0609  
                                  u276_21 05D1                                    u268_21 0592  
                                  u293_20 0647                                    u285_20 060F  
                                  u277_20 05D7                                    u269_20 0598  
                                  u293_21 0646                                    u285_21 060E  
                                  u277_21 05D6                                    u269_21 0597  
                                  u294_20 064C                                    u286_20 0614  
                                  u278_20 05DC                                    u294_21 064B  
                                  u286_21 0613                                    u278_21 05DB  
                                  u295_20 0659                                    u287_20 0621  
                                  u279_20 05E9                                    u295_21 0658  
                                  u287_21 0620                                    u279_21 05E8  
                                  u296_20 065F                                    u288_20 0626  
                                  u296_21 065E                                    u288_21 0625  
                                  u297_20 0664                                    u289_20 062B  
                                  u297_21 0663                                    u289_21 062A  
                                  u298_20 0669                                    _OSCCON 009B  
                                  u298_21 0668                                    u299_20 066E  
                                  u299_21 066D                 ??_I2C_SetInterruptHandler 0022  
                                  _WDTCON 0099               __end_of_PWM11_LoadBufferSet 12C8  
                                  _Hi_col 00DE                       _I2C_MasterEnableIrq 12C2  
                                  _Column 00E0                       _I2C_MasterGetRxData 12A7  
                 __end_of_I2C_WriteNBytes 1735                                    ___bmul 14E2  
                    i1_PWM11_DutyCycleSet 1318                                    chr12@c 0034  
                                  chr12@i 0035                                    ___wmul 15E1  
                           _I2C_MasterFsm 16B5                                 ??___awdiv 0024  
                           _I2C_MasterIsr 12D3                                 ??___awmod 0024  
                               ??___lwdiv 0024                                 ??___lwmod 002C  
                                  _font12 1000                   __end_of_PWM6_Initialize 0819  
                       I2C_SetCallback@cb 0020                          ___awdiv@quotient 0027  
                         ___awmod@divisor 0020                                    _result 00D2  
                                  _settei 0120                           ___awmod@counter 0025  
                                  _printf 0096                             _I2C_SetBuffer 150E  
            __end_of_I2C_MasterDisableIrq 12BF                      ?_I2C_MasterEnableIrq 0070  
                     _I2C_DO_ADDRESS_NACK 15C1                                 ??_isdigit 0020  
                    ?_I2C_MasterGetRxData 0070                                 ?_I2C_Open 0070  
      __end_of_I2C_SetAddressNackCallback 13A4                _I2C_SetAddressNackCallback 1398  
   __end_ofi1_I2C_SetDataCompleteCallback 1382             i1_I2C_SetDataCompleteCallback 1377  
                         ?_WDT_Initialize 0070                              ?i1_Pen_swipe 0072  
               ??_I2C_MasterEnableRestart 0070                                    putch@c 0036  
                   i1_PWM11_LoadBufferSet 12B0   I2C_SetInterruptHandler@InterruptHandler 0020  
TMR2_SetInterruptHandler@InterruptHandler 0020                               OLED_cmd@cmd 002B  
                       __end_of_Alarm_set 0BF0                                 ALM_set@HH 002B  
                               ALM_set@MM 002C                         _SYSTEM_Initialize 14F8  
                 __end_of__initialization 0092                     __end_of_TMR2_CallBack 13D5  
                     _I2C_MasterOperation 15A3                        ?_SYSTEM_Initialize 0070  
                    ?_I2C_DO_ADDRESS_NACK 0070                         __end_of_Clock_set 0B2C  
                               ?_OLED_cmd 0070                                 ?_OLED_clr 0070  
                     ___bmul@multiplicand 0020                   _rdBlkRegCompleteHandler 156E  
                   ?i1_PWM11_DutyCycleSet 0070                            __pcstackCOMMON 0070  
                          ?_I2C_MasterFsm 0070                            ?_I2C_MasterIsr 0070  
                         ??_I2C_DO_RX_ACK 0070                             __end_of_chr12 07AE  
                            __pidataBANK1 13EF                              __pidataBANK2 09E5  
                            __pidataBANK3 099F                              __pidataBANK4 0894  
                  _I2C_CallbackReturnStop 129C                       ??_SYSTEM_Initialize 0022  
                               ?_TMR2_ISR 0070                            _Time_data_read 153D  
                           __end_of_font6 0507                             __end_of_putch 14CD  
                        ?_TMR2_Initialize 0070                            ?_I2C_SetBuffer 0020  
           __end_of_I2C_DO_SEND_ADR_WRITE 1339                                 ?i1___bmul 0070  
                               ?_RTC_disp 0070                ?_I2C_DO_SEND_RESTART_WRITE 0070  
                    ?_I2C_MasterOperation 0070                     ??_I2C_MasterEnableIrq 0020  
                   ??_I2C_MasterGetRxData 0070                   ?_I2C_Write1ByteRegister 0028  
                          _OPTION_REGbits 0097                     I2C_ReadNBytes@address 0027  
                              ??_I2C_Open 0022                               ?_Pen_swipe2 0022  
              __end_of_I2C_MasterClearIrq 12B9                                   ??_chr12 002D  
                       __end_of_Pen_swipe 14A5                          i1___bmul@product 0072  
               __end_of_SYSTEM_Initialize 150E                         ??_Time_data_write 002B  
                                 ??_putch 0036                         _I2C_MasterSendAck 12CF  
                               OLED_clr@i 002D                                __pbssBANK0 0058  
                              __pbssBANK1 00A0                                __pbssBANK2 0169  
              __end_of_PWM6_LoadBufferSet 12CB                         __end_of_MoveServo 0C56  
                           ??_I2C_DO_IDLE 0070                             ??_I2C_DO_RCEN 0070  
           __end_of_rd2RegCompleteHandler 1445              __end_of_I2C_MasterSendTxData 12E0  
                      ?_I2C_MasterSendAck 0070                         _I2C_MasterStartRx 12A4  
                   ??_I2C_DO_ADDRESS_NACK 0078           i1I2C_SetDataCompleteCallback@cb 0074  
           __end_of_wr2RegCompleteHandler 141F                                _alm_active 00DA  
                     _I2C_DO_RX_NACK_STOP 12FE                      i1_I2C_MasterClearIrq 12AD  
                   _rd1RegCompleteHandler 141F                        ?_I2C_MasterStartRx 0070  
              __end_of_I2C_MasterSendNack 12CF                                ??_OLED_cmd 002B  
                              ??_OLED_clr 002D                          ?_I2C_WriteNBytes 0028  
                  I2C_WriteNBytes@address 002C                     _wr1RegCompleteHandler 1445  
                               ?_Time_Adj 0074                    __end_of_Time_data_read 1555  
                              __pmaintext 0E54                       ??_I2C_MasterSendAck 0070  
                rd1RegCompleteHandler@ptr 0077                                _alm_settei 0138  
                                 ?___bmul 0020                      i1_PWM6_LoadBufferSet 12B3  
             __end_of_I2C_DO_SEND_RESTART 12F4                           _I2C_DO_TX_EMPTY 166B  
                     I2C_SetBuffer@buffer 0020                                   ?___wmul 0020  
                              ??_TMR2_ISR 0077                                __pintentry 0004  
                     ??_I2C_MasterStartRx 0070                               Time_Adj@num 0074  
                        ?_PWM6_Initialize 0070                     ??_I2C_MasterOperation 0020  
                              ??i1___bmul 0071                                   ?_printf 0037  
                              ??_RTC_disp 0052            I2C_SetDataCompleteCallback@ptr 0026  
          __end_of_I2C_Write1ByteRegister 1800                  ??_I2C_DO_RX_NACK_RESTART 0070  
       __end_of_I2C_DO_SEND_RESTART_WRITE 12EF                      ?_I2C_DO_RX_NACK_STOP 0070  
                                 _ALM_set 1735                                   _CLR_cmd 0159  
                  ?i1_PWM11_LoadBufferSet 0070                           i1_I2C_SetBuffer 13FD  
                        _PWM11_Initialize 1555                                   _OSCSTAT 009C  
               __end_of_I2C_MasterSendAck 12D3                                   _OSCTUNE 009A  
                                 _PWM6DCH 0DA4                                   _PWM6DCL 0DA3  
                                 _PWM6CON 0DAB                                   _PWM6OFH 0DA8  
                                 _PWM6OFL 0DA7                                   _PWM6PHH 0DA2  
                                 _SSP1ADD 0212                                   _PWM6PHL 0DA1  
                                 _PWM6PRH 0DA6                                   _PWM6PRL 0DA5  
                                 _SLRCONA 030C                                   _SLRCONB 030D  
                                 _SLRCONC 030E                                   _SSP1BUF 0211  
               __end_of_I2C_MasterStartRx 12A7                      I2C_Close@returnValue 0020  
            ?_I2C_SetDataCompleteCallback 0024            ?i1_I2C_SetDataCompleteCallback 0074  
                                 _Alm_Adj 0CE4                                _font6_posi 1764  
                               _I2C_DO_RX 08D4                                 _I2C_DO_TX 0A82  
        __end_of_I2C_DO_SEND_RESTART_READ 12EA                                 _I2C_Close 1588  
                       _PWM6_DutyCycleSet 135C                 ??_rdBlkRegCompleteHandler 0078  
                   ?i1_I2C_MasterClearIrq 0070                      _I2C_MasterDisableIrq 12BC  
                                 _Message 0169                           ??_I2C_MasterFsm 007C  
                  ??i1_PWM11_DutyCycleSet 0072                           ??_I2C_MasterIsr 007E  
                      ?_PWM6_DutyCycleSet 0020                                   _Low_col 00DF  
                              ??_Time_Adj 0076                ??_TMR2_SetInterruptHandler 0022  
                          _I2C_ReadNBytes 1624                       __end_of_I2C_DO_IDLE 12E5  
                         ?_Time_data_read 0070                     ?i1_PWM6_LoadBufferSet 0070  
                     __end_of_I2C_DO_RCEN 1331                                   ___awdiv 0B2C  
                                 ___awmod 0A2E                           ??_I2C_SetBuffer 0024  
                                 ___lwdiv 0819                                   ___lwmod 1793  
                 I2C_SetBuffer@bufferSize 0022                       ??_PWM6_DutyCycleSet 0022  
                      I2C_ReadNBytes@data 0024                            _I2C_MasterRead 07FB  
                          _I2C_MasterOpen 13D5                            _I2C_MasterStop 12A1  
                          _I2C_Initialize 1365                                   __ptext1 153D  
                                 __ptext2 1624                                   __ptext3 07FB  
                                 __ptext4 14F8                                   __ptext5 12D7  
                                 __ptext6 1525                                   __ptext7 136E  
                                 __ptext8 0800                                   __ptext9 1555  
                           ?_TMR2_Process 0070                     ??_I2C_DO_RX_NACK_STOP 0070  
                       __end_of_hexpowers 18AA                                   _dpowers 1898  
                   _OSCILLATOR_Initialize 1339                                 _T2CONbits 0495  
                                 _isdigit 147E                          ___awmod@dividend 0022  
                      I2C_SetCallback@idx 0023                  ??_PIN_MANAGER_Initialize 0020  
           I2C_CallbackReturnReset@funPtr 0077                                 _T2HLTbits 0496  
                      I2C_SetCallback@ptr 0022                  wr1RegCompleteHandler@ptr 0077  
                     i1___bmul@multiplier 0073                                   _set_flg 00DC  
               I2C_Write1ByteRegister@reg 0028                 i1I2C_SetBuffer@bufferSize 0072  
                                 clrloop0 13B1                      end_of_initialization 0092  
                               _T2RSTbits 0498                 __end_of_PWM6_DutyCycleSet 1365  
                              ?_I2C_DO_RX 0070                                ?_I2C_DO_TX 0070  
                                 init_ram 13BC                                ?_I2C_Close 0070  
                  ?_rd1RegCompleteHandler 0077                         i1_I2C_SetCallback 1647  
                                 initloop 13BD                   __end_of_I2C_DO_TX_EMPTY 1690  
                   ?_I2C_MasterDisableIrq 0070                    __end_of_I2C_ReadNBytes 1647  
                  ?_wr1RegCompleteHandler 0077                                 _OLED_data 1382  
                               _OLED_init 13E2                        ?i1_I2C_SetCallback 0070  
                           ?i1_Pen_swipe2 0072                                 _PWM11INTE 0DBC  
                               _PWM11INTF 0DBD                                 _PWM11TMRH 0DBA  
                               _PWM11TMRL 0DB9                                   printf@c 0051  
                                 printf@f 0037                        _PWM11_DutyCycleSet 1353  
                  __end_of_I2C_MasterRead 0800                    __end_of_I2C_MasterOpen 13E2  
                  __end_of_I2C_MasterStop 12A4                    __end_of_I2C_Initialize 136E  
                               _PWM6LDCON 0DAF                                 _PWM6OFCON 0DB0  
                     ??i1_I2C_SetCallback 0073                             _PWM11INTFbits 0DBD  
                          ??_TMR2_Process 0077                          ??_WDT_Initialize 0020  
                 __end_ofi1_I2C_SetBuffer 140C                                 _PORTAbits 000C  
                               _PORTBbits 000D                                 _PORTCbits 000E  
         __end_of_rdBlkRegCompleteHandler 1588                       ?_PWM11_DutyCycleSet 0020  
                    _I2C_MasterSendTxData 12DB                              OLED_data@dat 002B  
                               _SSPDATPPS 0E3B                                 _SSPCLKPPS 0E3A  
             ?_I2C_SetAddressNackCallback 0024                             __pbssBIGRAM_1 25F0  
               __end_ofi1_I2C_SetCallback 166B                               ?_font6_posi 002D  
                  ??i1_I2C_MasterClearIrq 0070                               _I2C_DO_IDLE 12E0  
         PWM6_DutyCycleSet@dutyCycleCount 0020         i1PWM6_DutyCycleSet@dutyCycleCount 0070  
                             _I2C_DO_RCEN 132A                      ??_PWM11_DutyCycleSet 0022  
              rdBlkRegCompleteHandler@ptr 0077             I2C_Write1ByteRegister@address 002A  
                             printf@width 004F                           ?_I2C_ReadNBytes 0024  
                              ?_OLED_data 0070                                 _Alarm_set 0B8C  
                 ?_I2C_CallbackReturnStop 0077                                ?_OLED_init 0070  
                          ??i1_Pen_swipe2 0074                    ??i1_PWM6_LoadBufferSet 0070  
                _I2C_DO_SEND_RESTART_READ 12E5              I2C_CallbackReturnStop@funPtr 0077  
                         ?_I2C_MasterRead 0070                           ?_I2C_MasterOpen 0070  
                         ?_I2C_MasterStop 0070                                 _Clock_set 0AD7  
                         ?_I2C_Initialize 0070      __end_of_TMR2_DefaultInterruptHandler 129C  
            _TMR2_DefaultInterruptHandler 129B                   _I2C_CallbackReturnReset 0002  
                          __end_of___bmul 14F8                            __end_of___wmul 1601  
                          __end_of_font12 1180                     ?_I2C_MasterSendTxData 0070  
                  ?_OSCILLATOR_Initialize 0070                           _Time_data_write 07AE  
             ??_I2C_DO_SEND_RESTART_WRITE 0070                            __end_of_printf 02E5  
                     start_initialization 0038                              ??_Pen_swipe2 0024  
                               _Duty2_cmp 00CA                               __end_of_div 1707  
                           ?_I2C_DO_RESET 0070                  ?_I2C_SetInterruptHandler 0020  
                             ??_I2C_DO_RX 0078                               ??_I2C_DO_TX 0078  
                     i1I2C_SetCallback@cb 0070                         ??_I2C_MasterClose 0020  
                               _Pen_swipe 1491                    ??_I2C_MasterDisableIrq 0020  
                             ??_I2C_Close 0020                         ??_I2C_MasterStart 0020  
                       ??_I2C_MasterWrite 0022            __end_of_I2C_CallbackReturnStop 129E  
                  _I2C_DO_RX_NACK_RESTART 1303                          ?_I2C_DO_TX_EMPTY 0070  
                      _I2C_MasterClearIrq 12B6                                ?_Alarm_set 0070  
                               _MoveServo 0BF0                  __end_of_PWM11_Initialize 156E  
                                ??___bmul 0021                        _PWM6_LoadBufferSet 12C8  
                                ??___wmul 0024                        __end_of_Pen_swipe2 14B9  
                              ?_Clock_set 0070               __end_of_I2C_MasterEnableIrq 12C5  
                     ?_I2C_MasterClearIrq 0070               __end_of_I2C_MasterGetRxData 12AA  
                             __pdataBANK1 00E1                               __pdataBANK2 0120  
                             __pdataBANK3 01A0                               __pdataBANK4 0220  
                   __end_of_I2C_DO_RX_ACK 12FE                             _PWM6LDCONbits 0DAF  
           ?_TMR2_DefaultInterruptHandler 0070                          _I2C_DO_SEND_STOP 12F4  
                       ??_I2C_SetCallback 0023                                  ??_printf 0041  
                        ?i1_I2C_SetBuffer 0070                       I2C_Open@returnValue 0023  
                 ??i1_PWM11_LoadBufferSet 0070                        _I2C_MasterSendNack 12CB  
                     ?_PWM6_LoadBufferSet 0070                  ?_I2C_MasterEnableRestart 0070  
                       _i2c_fsmStateTable 1821                                  ?_ALM_set 002B  
                   _I2C_DO_SEND_ADR_WRITE 1331                                 ___latbits 0003  
                           __pcstackBANK0 0020                            ??_I2C_DO_RESET 0070  
                     ?_I2C_MasterSendNack 0070                              _isdigit$2223 0020  
            __end_of_I2C_DO_SEND_ADR_READ 134A                      ??_I2C_MasterClearIrq 0020  
             __end_of_I2C_DO_ADDRESS_NACK 15E1                                 chr12@temp 0033  
                                ?_Alm_Adj 0074          i1I2C_SetDataCompleteCallback@ptr 0076  
                              ?_Pen_swipe 0022                          _I2C_MasterIsNack 1312  
               _I2C_DO_SEND_RESTART_WRITE 12EA                      __end_of_TMR2_Process 06E4  
                        ??_Time_data_read 002D                      ??_PWM6_LoadBufferSet 0020  
                        _I2C_MasterSetIrq 12AA                                 __pnvBANK2 016D  
                   _rd2RegCompleteHandler 1432                               ??_OLED_data 002B  
                              ?_MoveServo 0070                               ??_OLED_init 002C  
                        ___lwdiv@dividend 0022                    _PIN_MANAGER_Initialize 0856  
                   _wr2RegCompleteHandler 140C                 ??_I2C_CallbackReturnReset 0078  
                             _alm_set_flg 00DB               __end_of_I2C_MasterOperation 15C1  
                    ??_I2C_MasterSendNack 0070                  rd2RegCompleteHandler@ptr 0077  
                 __end_of_Time_data_write 07FB                                  ?___awdiv 0020  
                               __ptext100 129C                                 __ptext101 156E  
                               __ptext110 129E                                 __ptext102 1445  
                               __ptext103 1432                                 __ptext104 141F  
                               __ptext105 140C                                 __ptext106 1377  
                               __ptext107 1647                                 __ptext108 13FD  
                               __ptext109 12A1                                  ?___awmod 0020  
                                ?___lwdiv 0020                                  ?___lwmod 0028  
                  ??_I2C_MasterSendTxData 0070                 __end_of_i2c_fsmStateTable 1841  
                          font6_posi@page 002F              ??_INTERRUPT_InterruptManager 007E  
         __end_of_I2C_SetInterruptHandler 1353                                  ?_isdigit 0070  
                 I2C_MasterOperation@read 0020                                  _I2C_Open 0959  
                    __end_ofi1_Pen_swipe2 147E                                 _hexpowers 18A2  
                        ___lwdiv@quotient 0025                         I2C_ReadNBytes@len 0025  
                                _T2CLKCON 0497                   ??_rd1RegCompleteHandler 0078  
                 ??_wr1RegCompleteHandler 0078                            ___wmul@product 0024  
                               clear_ram0 13B0                             _TMR2_CallBack 13C8  
                               div@number 0029                                  _PIE1bits 0091  
                                _PIE2bits 0092                               ??_Alarm_set 0031  
                        font6_posi@column 002D                     i1___bmul@multiplicand 0070  
                                _OLED_cmd 138D                                  _OLED_clr 1601  
                                _PIR1bits 0011                                  _PIR2bits 0012  
                                _PWM11DCH 0DB4                                  _PWM11DCL 0DB3  
                                _PWM11CON 0DBB                                  _PWM11OFH 0DB8  
                                _PWM11OFL 0DB7                                  _PWM11PHH 0DB2  
                                _PWM11PHL 0DB1                                  _PWM11PRH 0DB6  
                                _PWM11PRL 0DB5                     __end_of_I2C_MasterFsm 16DD  
                   __end_of_I2C_MasterIsr 12D7                              _PWM11CONbits 0DBB  
                                _REG_addr 00D6                                  _PWM6INTE 0DAC  
                                _PWM6INTF 0DAD               __end_of_I2C_DO_RX_NACK_STOP 1303  
                                _SSP1CON1 0215                                  _SSP1CON2 0216  
                                _PWM6TMRH 0DAA                                  _PWM6TMRL 0DA9  
                             ??_Clock_set 0031                                  _TMR2_ISR 1324  
         __end_of_I2C_MasterEnableRestart 12A1                                  _SSP1STAT 0214  
                       Pen_swipe@set_duty 0022                     __end_of_I2C_SetBuffer 1525  
                                i1___bmul 14CD                                  _RTC_disp 0C56  
                       ___wmul@multiplier 0020                       i1_PWM6_DutyCycleSet 131E  
                  ?_I2C_DO_SEND_ADR_WRITE 0070                  I2C_MasterSendTxData@data 0070  
                              printf@flag 004E                                printf@prec 0046  
          ??_TMR2_DefaultInterruptHandler 0070                             ??i1_Pen_swipe 0074  
               ?_TMR2_SetInterruptHandler 0020                  wr2RegCompleteHandler@ptr 0077  
                     _PWM11_LoadBufferSet 12C5                ??_I2C_DO_SEND_RESTART_READ 0070  
                ?_rdBlkRegCompleteHandler 0077                          ??_I2C_ReadNBytes 0027  
                            ??_font6_posi 002E                                _I2C_Status 00A0  
                             ??_Pen_swipe 0024                              ?_I2C_DO_IDLE 0070  
                            ?_I2C_DO_RCEN 0070                         ??_TMR2_Initialize 0022  
                    ?i1_PWM6_DutyCycleSet 0070                    ?_rd2RegCompleteHandler 0077  
                          ?_TMR2_CallBack 0070                                  _Duty_add 00D9  
                                _Duty_cmp 00CE                          ??_I2C_MasterRead 0022  
                     I2C_WriteNBytes@data 0028                          ??_I2C_MasterOpen 0020  
                             ??_MoveServo 0052                    ?_wr2RegCompleteHandler 0077  
                        ??_I2C_MasterStop 0070                          ??_I2C_Initialize 0020  
                                _Time_Adj 0D9B                     i1I2C_SetBuffer@buffer 0070  
                    __end_of_I2C_DO_RESET 130D                                  _Posi_cmd 00E9  
                ??_I2C_Write1ByteRegister 002A                      ?_PWM11_LoadBufferSet 0070  
                        ?_Time_data_write 0070                   ??_OSCILLATOR_Initialize 0020  
                    _I2C_DO_SEND_ADR_READ 1341                        __end_of_font6_posi 1793  
                            _PWM6INTFbits 0DAD                                  _adj_mode 00C2  
                         _I2C_MasterClose 12B9             I2C_SetAddressNackCallback@ptr 0026  
                         I2C_Open@address 0022                           _I2C_MasterStart 12BF  
                         _I2C_MasterWrite 130D                           ___lwdiv@divisor 0020  
                                _alm_unit 01A0                         ??_I2C_WriteNBytes 002C  
                         ___lwdiv@counter 0027                                  __ptext10 0856  
                                __ptext11 1339                                  __ptext20 14B9  
                                __ptext12 1365                                  __ptext21 0915  
                                __ptext13 0C56                                  __ptext30 12C8  
                                __ptext22 06E4                                  __ptext14 13E2  
                                __ptext31 135C                                  __ptext23 15E1  
                                __ptext15 138D                                  __ptext40 0A2E  
                                __ptext32 1491                                  __ptext24 147E  
                                __ptext16 1601                                  __ptext41 0B2C  
                                __ptext33 12C5                                  __ptext25 1793  
                                __ptext17 1382                                  __ptext50 13D5  
                                __ptext42 1735                                  __ptext34 1353  
                                __ptext26 0819                                  __ptext18 0BF0  
                                __ptext51 12C2                                  __ptext43 17C8  
                                __ptext35 0AD7                                  __ptext27 1764  
                                __ptext19 0096                                  __ptext60 1324  
                                __ptext52 130D                                  __ptext44 13A4  
                                __ptext36 14E2                                  __ptext28 1707  
                                __ptext61 13C8                                  __ptext53 15A3  
                                __ptext45 150E                                  __ptext37 07AE  
                                __ptext29 14A5                                  __ptext70 0D9B  
                                __ptext62 129B                                  __ptext54 12BF  
                                __ptext46 1398                                  __ptext38 0B8C  
                                __ptext71 0CE4                                  __ptext63 0507  
                                __ptext55 1588                                  __ptext47 1690  
                                __ptext39 16DD                                  __ptext80 12F9  
                                __ptext72 14CD                                  __ptext64 146B  
                                __ptext56 12BC                                  __ptext48 0959  
                                __ptext81 12F4                                  __ptext73 12D3  
                                __ptext65 12B3                                  __ptext57 12B9  
                                __ptext49 134A                                  __ptext90 12E0  
                                __ptext82 12EF                                  __ptext74 16B5  
                                __ptext66 131E                                  __ptext58 12B6  
                                __ptext91 166B                                  __ptext83 12EA  
                                __ptext75 12AD                                  __ptext67 1458  
                                __ptext92 12AA                                  __ptext84 12E5  
                                __ptext76 15C1                                  __ptext68 12B0  
                                __ptext93 1312                                  __ptext85 132A  
                                __ptext77 1308                                  __ptext69 1318  
                                __ptext94 12DB                                  __ptext86 08D4  
                                __ptext78 1303                                  __ptext95 12CF  
                                __ptext87 0A82                                  __ptext79 12FE  
                                __ptext96 12A7                                  __ptext88 1331  
                                __ptext97 12CB                                  __ptext89 1341  
                                __ptext98 12A4                                  __ptext99 0002  
                            _SSP1CON1bits 0215                              _SSP1CON2bits 0216  
     __end_of_I2C_SetDataCompleteCallback 13B0               _I2C_SetDataCompleteCallback 13A4  
                 ?_I2C_DO_RX_NACK_RESTART 0070                                Alm_Adj@num 0074  
                     __end_ofi1_Pen_swipe 146B                     ??i1_PWM6_DutyCycleSet 0072  
                __end_of_I2C_DO_SEND_STOP 12F9                         ??_PWM6_Initialize 0020  
                                div@denom 002B                           _I2C_SetCallback 1690  
           ??_I2C_SetDataCompleteCallback 0027                               _PWM11CLKCON 0DBE  
              I2C_Write1ByteRegister@data 0029                     ??_PWM11_LoadBufferSet 0020  
                       ?_PWM11_Initialize 0070                                  int$flags 007E  
                   ?_I2C_DO_SEND_ADR_READ 0070        __end_of_INTERRUPT_InterruptManager 0036  
              _INTERRUPT_InterruptManager 0004                                 printf@idx 0045  
                               printf@len 004A                        ??_PWM11_Initialize 0020  
                               printf@val 004C                              _SSP1STATbits 0214  
                __end_of_I2C_MasterIsNack 1318                              _TMR2_Process 0507  
                __end_of_I2C_MasterSetIrq 12AD                                _INTCONbits 000B  
           __end_ofi1_PWM11_LoadBufferSet 12B3                        I2C_WriteNBytes@len 002A  
                          __pstringtext10 186C                            __pstringtext11 187C  
                          __pstringtext20 18CD                            __pstringtext12 188C  
                          __pstringtext21 18D1                            __pstringtext13 18AA  
                          __pstringtext30 18F3                            __pstringtext22 18D5  
                          __pstringtext14 18B1                            __pstringtext31 18F6  
                          __pstringtext23 18D9                            __pstringtext15 18B7  
                          __pstringtext32 18F9                            __pstringtext24 18DD  
                          __pstringtext16 18BC                            __pstringtext33 18FC  
                          __pstringtext25 18E1                            __pstringtext17 18C1  
                          __pstringtext34 18FE                            __pstringtext26 18E5  
                          __pstringtext18 18C5                            __pstringtext35 0000  
                          __pstringtext27 18E9                            __pstringtext19 18C9  
                          __pstringtext28 18ED                            __pstringtext29 18F0  
                                isdigit@c 0021            __end_of_I2C_DO_RX_NACK_RESTART 1308  
                             _PWM6CONbits 0DAB          PWM11_DutyCycleSet@dutyCycleCount 0020  
      i1PWM11_DutyCycleSet@dutyCycleCount 0070                      i1Pen_swipe2@set_duty 0072  
                                intlevel1 0000                           ??_TMR2_CallBack 0077  
                        ___lwmod@dividend 002A                   ?_PIN_MANAGER_Initialize 0070  
                     _I2C_DO_SEND_RESTART 12EF                            _PWM11LDCONbits 0DBF  
                              _PWM11LDCON 0DBF                              i1_Pen_swipe2 146B  
                              _PWM11OFCON 0DC0                                  printf@ap 0049  
                                printf@cp 0047                   __end_of_I2C_MasterClose 12BC  
                 __end_of_I2C_MasterStart 12C2                                Clock_set@i 0033  
                 __end_of_I2C_MasterWrite 1312                                _PWM6CLKCON 0DAE  
                           __pstringtext1 02E5                             __pstringtext2 1000  
                           __pstringtext3 1821                             __pstringtext4 1898  
                           __pstringtext5 18A2                             __pstringtext6 1180  
                           __pstringtext7 1800                             __pstringtext8 1841  
                           __pstringtext9 185B                      ?_I2C_DO_SEND_RESTART 0070  
                         ___lwmod@divisor 0028                           ___lwmod@counter 002D  
                             i1_Pen_swipe 1458                   __end_of_I2C_SetCallback 16B5  
          __end_of_PIN_MANAGER_Initialize 0894             __end_of_rd1RegCompleteHandler 1432  
           __end_of_wr1RegCompleteHandler 1458                     _TMR2_InterruptHandler 016D  
                   _MSSP_InterruptHandler 00D4  
